{"version":3,"sources":["../../../es6/services/modes/model.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,OAAO,CAAC,WAAW,EAAE,CACpB,OAAO,EACP,UAAU,EACV,YAAY,EACZ,eAAe,EACf,OAAO,EACP,MAAM,EACN,YAAY,EACZ,oBAAoB,EACpB,SAAS,uBAAuB,CAAC,YAAY,EACZ,eAAe,EACf,iBAAiB,EACjB,oBAAoB,EACpB,YAAY,EACZ,WAAW,EACX,iBAAiB,EACjB,yBAAyB,EAAE;AAC1D,MAAI,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;AAChE,eAAa,CAAC,WAAW,GAAG,SAAS,gBAAgB,CAAC,KAAK,EAAE;AAC3D,QAAI,MAAM,GAAG,yBAAyB,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAChF,WAAO,CAAC,CAAC,KAAK,CACZ,YAAW;AACT,aAAO,WAAW,CAAC,eAAe,CAAC,UAAU,EAAE,aAAa,EACzB,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;KAC/D,EACD,YAAW;AACT,aAAO,KAAK,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;KAC5C,CACF,EAAE,CAAC;GACL,CAAC;AACF,eAAa,CAAC,UAAU,GAAG,SAAS,eAAe,CAAC,KAAK,EAAE;AACzD,QAAI,MAAM,GAAG,yBAAyB,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAChF,WAAO,CAAC,CAAC,KAAK,CACZ,YAAW;AACT,aAAO,WAAW,CAAC,cAAc,CAAC,UAAU,EAAE,YAAY,EACxB,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;KAC9D,EACD,YAAW;AACT,aAAO,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;KAC3C,CACF,EAAE,CAAC;GACL,CAAC;;AAEF,MAAI,sBAAsB,GAAG;AAC3B,iBAAa,EAAE,GAAG;AAClB,gBAAY,EAAE,GAAG;GAClB,CAAC;AACF,MAAI,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAC5C,sBAAsB,CAAC,CAAC;AACtD,MAAI,aAAa,GAAG,iBAAiB,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,IAAI;AACZ,gBAAY,EAAE,IAAI;AAClB,eAAW,EAAE,IAAI,EAAE,CAAC,CAAC;AAC1E,MAAI,UAAU,GAAG;AACf,WAAO,EAAE,SAAS,YAAY,YAAY,EACzC;AACD,WAAO,EAAE,SAAS,YAAY,YAAY,EACzC;AACD,QAAI,EAAE,OAAO;AACb,WAAO,EAAE,aAAa;AACtB,WAAO,EAAE,aAAa;AACtB,YAAQ,EAAE,cAAc;GACzB,CAAC;AACF,cAAY,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;AACtC,iBAAe,CAAC,QAAQ,CAAC,UAAU,EACV,UAAU,CAAC,IAAI,EACf,sBAAsB,EACtB,UAAS,EAAE,EAAE;AACX,KAAC,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;GACnC,CAAC,CAAC;AAC5B,SAAO,UAAU,CAAC;CACnB,CACF,CAAC,CAAC","file":"model.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('modelMode', [\n    'modes',\n    'settings',\n    'modelsMode',\n    'modelBaseMode',\n    'model',\n    'game',\n    'gameModels',\n    'gameModelSelection',\n    function modelModeServiceFactory(modesService,\n                                     settingsService,\n                                     modelsModeService,\n                                     modelBaseModeService,\n                                     modelService,\n                                     gameService,\n                                     gameModelsService,\n                                     gameModelSelectionService) {\n      var model_actions = Object.create(modelBaseModeService.actions);\n      model_actions.startCharge = function modelStartCharge(scope) {\n        var stamps = gameModelSelectionService.get('local', scope.game.model_selection);\n        return R.pipeP(\n          function() {\n            return gameService.executeCommand$('onModels', 'startCharge',\n                                               stamps, scope, scope.game);\n          },\n          function() {\n            return scope.doSwitchToMode('ModelCharge');\n          }\n        )();\n      };\n      model_actions.startPlace = function modelStartPlace(scope) {\n        var stamps = gameModelSelectionService.get('local', scope.game.model_selection);\n        return R.pipeP(\n          function() {\n            return gameService.executeCommand('onModels', 'startPlace',\n                                              stamps, scope, scope.game);\n          },\n          function() {\n            return scope.doSwitchToMode('ModelPlace');\n          }\n        )();\n      };\n\n      var model_default_bindings = {\n        'startCharge': 'c',\n        'startPlace': 'p',\n      };\n      var model_bindings = R.extend(Object.create(modelBaseModeService.bindings),\n                                    model_default_bindings);\n      var model_buttons = modelsModeService.buildButtons({ single: true,\n                                                           start_charge: true,\n                                                           start_place: true });\n      var model_mode = {\n        onEnter: function modelOnEnter(/*scope*/) {\n        },\n        onLeave: function modelOnLeave(/*scope*/) {\n        },\n        name: 'Model',\n        actions: model_actions,\n        buttons: model_buttons,\n        bindings: model_bindings,\n      };\n      modesService.registerMode(model_mode);\n      settingsService.register('Bindings',\n                               model_mode.name,\n                               model_default_bindings,\n                               function(bs) {\n                                 R.extend(model_mode.bindings, bs);\n                               });\n      return model_mode;\n    }\n  ]);\n"]}