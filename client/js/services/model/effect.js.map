{"version":3,"sources":["../../../es6/services/model/effect.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,OAAO,CAAC,aAAa,EAAE,CACtB,SAAS,yBAAyB,GAAG;AACnC,SAAO,UAAS,YAAY,EAAE;AAC5B,QAAI,kBAAkB,GAAG;AACvB,uBAAiB,EAAE,SAAS,sBAAsB,CAAC,MAAM,EAAE,KAAK,EAAE;AAChE,eAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;OACrE;AACD,sBAAgB,EAAE,SAAS,qBAAqB,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;AACnE,YAAG,GAAG,EAAE;AACN,eAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9E,MACI;AACH,eAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;SAChF;OACF;AACD,yBAAmB,EAAE,SAAS,wBAAwB,CAAC,MAAM,EAAE,KAAK,EAAE;AACpE,YAAG,YAAY,CAAC,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;AAChD,eAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;SAChF,MACI;AACH,eAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;SACtE;OACF;KACF,CAAC;AACF,WAAO,kBAAkB,CAAC;GAC3B,CAAC;CACH,CACF,CAAC,CAAC","file":"effect.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('modelEffect', [\n    function modelEffectServiceFactory() {\n      return function(modelService) {\n        var modelEffectService = {\n          isEffectDisplayed: function modelIsEffectDisplayed(effect, model) {\n            return !!R.find(R.equals(effect), R.defaultTo([], model.state.eff));\n          },\n          setEffectDisplay: function modelSetEffectDisplay(effect, set, model) {\n            if(set) {\n              model.state.eff = R.uniq(R.append(effect, R.defaultTo([], model.state.eff)));\n            }\n            else {\n              model.state.eff = R.reject(R.equals(effect), R.defaultTo([], model.state.eff));\n            }\n          },\n          toggleEffectDisplay: function modelToggleEffectDisplay(effect, model) {\n            if(modelService.isEffectDisplayed(effect, model)) {\n              model.state.eff = R.reject(R.equals(effect), R.defaultTo([], model.state.eff));\n            }\n            else {\n              model.state.eff = R.append(effect, R.defaultTo([], model.state.eff));\n            }\n          },\n        };\n        return modelEffectService;\n      };\n    }\n  ]);\n"]}