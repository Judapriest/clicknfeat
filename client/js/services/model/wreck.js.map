{"version":3,"sources":["../../../es6/services/model/wreck.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,OAAO,CAAC,YAAY,EAAE,CACrB,cAAc,EACd,SAAS,wBAAwB,CAAC,mBAAmB,EAAE;AACrD,SAAO,UAAS,YAAY,EAAE;AAC5B,QAAI,iBAAiB,GAAG;AACtB,sBAAgB,EAAE,SAAS,qBAAqB,CAAC,KAAK,EAAE;AACtD,eAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;OACjD;AACD,mBAAa,EAAE,SAAS,kBAAkB,CAAC,QAAQ,EAAE,KAAK,EAAE;AAC1D,eAAO,CAAC,CAAC,KAAK,CACZ,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EACnD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EACb,UAAS,QAAQ,EAAE;AACjB,cAAI,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,CAAC;;AAErD,cAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;AACf,eAAG,GAAG,CAAC,CAAC,IAAI,CACV,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAC,SAAS,CAAC,CAAC,EAClC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,EACf,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CACtB,CAAC,QAAQ,CAAC,CAAC;WACb;;AAED,iBAAO,GAAG,CAAC;SACZ,EACD,UAAS,GAAG,EAAE;AACZ,cAAI,IAAI,GAAG,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;AAClE,iBAAO,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;SACnC,CACF,CAAC,QAAQ,CAAC,CAAC;OACb;AACD,qBAAe,EAAE,SAAS,oBAAoB,CAAC,GAAG,EAAE,KAAK,EAAE;AACzD,YAAG,GAAG,EAAE;AACN,eAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1D,MACI;AACH,eAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC5D;OACF;AACD,wBAAkB,EAAE,SAAS,uBAAuB,CAAC,KAAK,EAAE;AAC1D,YAAG,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;AACvC,eAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC5D,MACI;AACH,eAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAClD;OACF;KACF,CAAC;AACF,WAAO,iBAAiB,CAAC;GAC1B,CAAC;CACH,CACF,CAAC,CAAC","file":"wreck.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('modelWreck', [\n    'gameFactions',\n    function modelWreckServiceFactory(gameFactionsService) {\n      return function(modelService) {\n        var modelWreckService = {\n          isWreckDisplayed: function modelIsWreckDisplayed(model) {\n            return !!R.find(R.equals('w'), model.state.dsp);\n          },\n          getWreckImage: function modelGetWreckImage(factions, model) {\n            return R.pipeP(\n              gameFactionsService.getModelInfo$(model.state.info),\n              R.prop('img'),\n              function(info_img) {\n                var img = R.find(R.propEq('type','wreck'), info_img);\n\n                if(R.isNil(img)) {\n                  img = R.pipe(\n                    R.find(R.propEq('type','default')),\n                    R.defaultTo({}),\n                    R.assoc('link', null)\n                  )(info_img);\n                }\n                \n                return img;\n              },\n              function(img) {\n                var link = modelService.isImageDisplayed(model) ? img.link : null;\n                return R.assoc('link', link, img);\n              }\n            )(factions);\n          },\n          setWreckDisplay: function modelSetWreckDisplay(set, model) {\n            if(set) {\n              model.state.dsp = R.uniq(R.append('w', model.state.dsp));\n            }\n            else {\n              model.state.dsp = R.reject(R.equals('w'), model.state.dsp);\n            }\n          },\n          toggleWreckDisplay: function modelToggleWreckDisplay(model) {\n            if(modelService.isWreckDisplayed(model)) {\n              model.state.dsp = R.reject(R.equals('w'), model.state.dsp);\n            }\n            else {\n              model.state.dsp = R.append('w', model.state.dsp);\n            }\n          },\n        };\n        return modelWreckService;\n      };\n    }\n  ]);\n"]}