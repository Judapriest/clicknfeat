{"version":3,"sources":["../../../es6/services/game/scenario.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,OAAO,CAAC,cAAc,EAAE,CACvB,MAAM,EACN,SAAS,0BAA0B,CAAC,WAAW,EAAE;AAC/C,MAAI,mBAAmB,GAAG;AACxB,QAAI,EAAE,SAAS,gBAAgB,GAAG;AAChC,aAAO,WAAW,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAC3C,KAAK,CAAC,UAAS,MAAM,EAAE;AACtB,eAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,MAAM,CAAC,CAAC;AACpD,eAAO,EAAE,CAAC;OACX,CAAC,CAAC;KACN;AACD,QAAI,EAAE,SAAS,gBAAgB,CAAC,QAAQ,EAAE;AACxC,aAAO,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KACjC;AACD,SAAK,EAAE,SAAS,iBAAiB,CAAC,UAAU,EAAE,MAAM,EAAE;AACpD,aAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;KAChE;AACD,WAAO,EAAE,SAAS,mBAAmB,CAAC,IAAI,EAAE,KAAK,EAAE;AACjD,aAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACjD;AACD,gBAAY,EAAE,SAAS,wBAAwB,CAAC,IAAI,EAAE,MAAM,EAAE;AAC5D,UAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,OAAO,SAAS,CAAC;AACnC,aAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;KAC1E;GACF,CAAC;AACF,SAAO,mBAAmB,CAAC;CAC5B,CACF,CAAC,CAAC","file":"scenario.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('gameScenario', [\n    'http',\n    function gameScenarioServiceFactory(httpService) {\n      var gameScenarioService = {\n        init: function gameScenarioInit() {\n          return httpService.get('/data/scenarios.json')\n            .catch(function(reason) {\n              console.log('error getting scenarios.json', reason);\n              return [];\n            });\n        },\n        name: function gameScenarioName(scenario) {\n          return R.prop('name', scenario);\n        },\n        group: function gameScenarioGroup(group_name, groups) {\n          return R.find(R.compose(R.equals(group_name), R.head), groups);\n        },\n        forName: function gameScenarioForName(name, group) {\n          return R.find(R.propEq('name', name), group[1]);\n        },\n        groupForName: function gameScenarioGroupForName(name, groups) {\n          if(R.isNil(name)) return undefined;\n          return R.find(R.compose(R.find(R.propEq('name', name)), R.last), groups);\n        },\n      };\n      return gameScenarioService;\n    }\n  ]);\n"]}