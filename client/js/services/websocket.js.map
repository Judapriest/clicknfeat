{"version":3,"sources":["../../es6/services/websocket.js"],"names":[],"mappings":"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","file":"websocket.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('websocket', [\n    '$document',\n    'jsonParser',\n    'jsonStringifier',\n    function websocketServiceFactory($document,\n                                     jsonParserService,\n                                     jsonStringifierService) {\n      return {\n        create: function websocketCreate(url, name, handlers) {\n          return new self.Promise(function(resolve, reject) {\n            name = R.defaultTo(url, name);\n            handlers.error = R.defaultTo(defaultErrorHandler, handlers.error);\n            handlers.close = R.defaultTo(defaultCloseHandler, handlers.close);\n\n            var scheme = 'ws://';\n            var uri = scheme + self.document.location.host + url;\n            var socket = new self.WebSocket(uri);\n            var resolved = false;\n            socket.onopen = function websocketOnOpen(event) {\n              console.error('WebSocket open', name, event);\n              resolve(socket);\n              resolved = true;\n            };\n            socket.onerror = function websocketOnError(event) {\n              handlers.error('socketError', event);\n            };\n            socket.onclose = function websocketOnClose(/* event */) {\n              if(!resolved) {\n                reject('Connection error');\n                resolved = true;\n                return;\n              }\n              handlers.close();\n            };\n            socket.onmessage = function websocketOnMessage(event) {\n              console.log('WebSocket message', name, event);\n              R.pipeP(\n                jsonParserService.parse,\n                function(msg) {\n                  if(R.isNil(handlers[msg.type])) {\n                    handlers.error('Unknown msg type', msg);\n                    return;\n                  }\n                  handlers[msg.type](msg);\n                }\n              )(event.data);\n            };\n            function defaultErrorHandler(reason, event) {\n              console.error('WebSocket error', name, reason, event);\n            }\n            function defaultCloseHandler() {\n              console.error('WebSocket close', name);\n            }\n          });\n        },\n        send: function websocketSend(event, socket) {\n          return R.pipeP(\n            jsonStringifierService.stringify,\n            function(data) {\n              socket.send(data);\n            }\n          )(event);\n        },\n        close: function websocketClose(socket) {\n          return new self.Promise(function(resolve/*, reject */) {\n            socket.close();\n            resolve();\n          });\n        },\n      };\n    }\n  ]);\n"]}