{"version":3,"sources":["deepExtend.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,IAAE,MAAF,GAAW,SAAS,MAAT,CAAgB,GAAhB,EAAoC;sCAAZ;;KAAY;;;AAE7C,MAAE,OAAF,CAAU,UAAC,MAAD,EAAY;AACpB,WAAI,IAAI,IAAJ,IAAY,MAAhB,EAAwB;AACtB,YAAI,IAAJ,IAAY,OAAO,IAAP,CAAZ,CADsB;OAAxB;KADQ,EAIP,UAJH,EAF6C;AAO7C,WAAO,GAAP,CAP6C;GAApC,CADD;;AAWV,IAAE,UAAF,GAAe,SAAS,UAAT,CAAoB,GAApB,EAAwC;AACrD,QAAM,WAAW,cAAX;;;AAD+C;uCAAZ;;KAAY;;AAIrD,MAAE,OAAF,CAAU,UAAC,MAAD,EAAY;AACpB,WAAI,IAAI,IAAJ,IAAY,MAAhB,EAAwB;AACtB,YAAI,EAAE,KAAF,CAAQ,IAAI,IAAJ,CAAR,KACA,EAAE,IAAF,CAAO,IAAI,IAAJ,CAAP,MAAsB,UAAtB,IACA,EAAE,IAAF,CAAO,OAAO,IAAP,CAAP,MAAyB,MAAzB,EACA;AACF,cAAI,IAAJ,IAAY,OAAO,IAAP,CAAZ,CADE;SAHJ,MAMK,IAAI,EAAE,IAAF,CAAO,OAAO,IAAP,CAAP,MAAyB,QAAzB,IACA,SAAS,IAAT,CAAc,OAAO,IAAP,CAAd,CADA,EAEA;AACP,cAAG,EAAE,IAAF,CAAO,IAAI,IAAJ,CAAP,MAAsB,QAAtB,EAAgC;AACjC,gBAAI,IAAJ,IAAY,OAAO,IAAP,EAAa,OAAb,CAAqB,QAArB,EAA+B,IAAI,IAAJ,CAA/B,CAAZ,CADiC;WAAnC;SAHG,MAOA,IAAI,EAAE,IAAF,CAAO,IAAI,IAAJ,CAAP,MAAsB,OAAtB,IACA,EAAE,IAAF,CAAO,OAAO,IAAP,CAAP,MAAyB,OAAzB,EACD;AACN,cAAI,EAAE,IAAF,CAAO,IAAI,IAAJ,CAAP,MAAsB,OAAtB,IACA,EAAE,IAAF,CAAO,OAAO,IAAP,CAAP,MAAyB,OAAzB,EACD;AACD,kBAAM,IAAI,KAAJ,CAAU,kDAAkD,IAAlD,GAAyD,GAAzD,CAAhB,CADC;WAFH,MAKK;;;AAGH,gBAAI,IAAJ,IAAY,EAAE,UAAF,CAAa,IAAI,IAAJ,CAAb,EAAwB,OAAO,IAAP,CAAxB,CAAZ,CAHG;WALL;SAHG,MAcA,IAAI,EAAE,IAAF,CAAO,IAAI,IAAJ,CAAP,MAAsB,QAAtB,IACA,EAAE,IAAF,CAAO,OAAO,IAAP,CAAP,MAAyB,QAAzB,EACD;AACN,cAAI,EAAE,IAAF,CAAO,IAAI,IAAJ,CAAP,MAAsB,QAAtB,IACA,EAAE,IAAF,CAAO,OAAO,IAAP,CAAP,MAAyB,QAAzB,EACA;AACF,kBAAM,IAAI,KAAJ,CAAU,oDAAoD,IAApD,GAA2D,GAA3D,CAAhB,CADE;WAFJ,MAKK;AACH,gBAAI,IAAJ,IAAY,EAAE,UAAF,CAAa,IAAI,IAAJ,CAAb,EAAwB,OAAO,IAAP,CAAxB,CAAZ,CADG;WALL;SAHG,MAYA;AACH,cAAI,IAAJ,IAAY,OAAO,IAAP,CAAZ,CADG;SAZA;OA5BP;KADQ,EA6CP,UA7CH,EAJqD;AAkDrD,WAAO,GAAP,CAlDqD;GAAxC,CAXL;CAAX,CAAD","file":"deepExtend.js","sourcesContent":["(function() {\n  R.extend = function extend(obj, ...extensions) {\n    // obj = R.clone(obj);\n    R.forEach((source) => {\n      for(var prop in source) {\n        obj[prop] = source[prop];\n      }\n    }, extensions);\n    return obj;\n  };\n\n  R.deepExtend = function deepExtend(obj, ...extensions) {\n    const parentRE = /#{\\s*?_\\s*?}/;\n\n    // obj = R.clone(obj);\n    R.forEach((source) => {\n      for(var prop in source) {\n        if( R.isNil(obj[prop]) ||\n            R.type(obj[prop]) === 'Function' ||\n            R.type(source[prop]) === 'Date'\n          ) {\n          obj[prop] = source[prop];\n        }\n        else if( R.type(source[prop]) === 'String' &&\n                 parentRE.test(source[prop])\n               ) {\n          if(R.type(obj[prop]) === 'String') {\n            obj[prop] = source[prop].replace(parentRE, obj[prop]);\n          }\n        }\n        else if( R.type(obj[prop]) === 'Array' ||\n                 R.type(source[prop]) === 'Array'\n               ){\n          if( R.type(obj[prop]) !== 'Array' ||\n              R.type(source[prop]) !== 'Array'\n            ){\n            throw new Error('Trying to combine an array with a non-array (' + prop + ')');\n          }\n          else {\n            // DO NOT remove nil entries from arrays\n            // obj[prop] = R.reject(R.isNil, R.deepExtend(obj[prop], source[prop]));\n            obj[prop] = R.deepExtend(obj[prop], source[prop]);\n          }\n        }\n        else if( R.type(obj[prop]) === 'Object' ||\n                 R.type(source[prop]) === 'Object'\n               ){\n          if( R.type(obj[prop]) !== 'Object' ||\n              R.type(source[prop]) !== 'Object'\n            ) {\n            throw new Error('Trying to combine an object with a non-object (' + prop + ')');\n          }\n          else {\n            obj[prop] = R.deepExtend(obj[prop], source[prop]);\n          }\n        }\n        else {\n          obj[prop] = source[prop];\n        }\n      }\n    }, extensions);\n    return obj;\n  };\n})();\n"]}