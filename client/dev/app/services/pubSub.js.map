{"version":3,"sources":["pubSub.es6"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,QADX,EACqB,CACjB,SAAS,oBAAT,GAAgC;;AAE9B,MAAI,cAAc,SAAd,CAF0B;AAG9B,MAAI,gBAAgB;AAClB,UAAM,SAAS,UAAT,CAAoB,IAApB,EAA4C;UAAlB,6DAAO,yBAAW;;AAChD,aAAO,EAAE,IAAF,CACL,EAAE,SAAF,CAAY,EAAZ,CADK,EAEL,EAAE,KAAF,CAAQ,aAAR,EAAuB,IAAvB,CAFK,EAGL,EAAE,KAAF,CAAQ,cAAR,EAAwB,EAAxB,CAHK,EAIL,IAJK,CAAP,CADgD;KAA5C;AAON,eAAW,SAAS,eAAT,CAAyB,KAAzB,EAAgC,QAAhC,EAA0C,MAA1C,EAAkD;AAC3D,aAAO,EAAE,IAAF,CACL,EAAE,IAAF,CAAO,cAAP,CADK,EAEL,UAAC,KAAD,EAAW;AACT,eAAO,EAAE,IAAF,CACL,EAAE,MAAF,CAAS,EAAT,EAAa,KAAb,CADK,EAEL,EAAE,MAAF,CAAS,QAAT,CAFK,EAGL,UAAC,SAAD,EAAe;AACb,gBAAM,KAAN,IAAe,SAAf;;AADa,iBAGN,YAAY,KAAZ,EAAmB,QAAnB,EAA6B,KAA7B,CAAP,CAHa;SAAf,CAHK,CAQL,KARK,CAAP,CADS;OAAX,CAFK,CAaL,MAbK,CAAP,CAD2D;KAAlD;AAgBX,aAAS,SAAS,aAAT,gBAA8C;wCAApB;;OAAoB;;UAChD,QAAS,QADuC;;AAErD,aAAO,EAAE,WAAF,CACL,EAAE,IAAF,EACA,gBAAgB,KAAhB,EAAuB,EAAE,IAAF,CAAO,IAAP,CAAvB,CAFK,EAGL,gBAAgB,WAAhB,EAA6B,EAAE,IAAF,CAAO,IAAP,CAA7B,CAHK,EAIL,IAJK,CAAP,CAFqD;KAA9C;GAxBP,CAH0B;AAoC9B,WAAS,WAAT,CAAqB,KAArB,EAA4B,QAA5B,EAAsC,KAAtC,EAA6C;AAC3C,WAAO,YAAM;AACX,YAAM,KAAN,IAAe,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,QAAT,CAAT,EAA6B,MAAM,KAAN,CAA7B,CAAf,CADW;KAAN,CADoC;GAA7C;AAKA,MAAI,kBAAkB,EAAE,KAAF,CAAQ,UAAC,KAAD,EAAQ,IAAR,EAAc,OAAd,EAA0B;AACtD,WAAO,EAAE,WAAF,CACL,EAAE,MAAF,CAAS,EAAT,EAAa,CAAC,cAAD,EAAiB,KAAjB,CAAb,CADK,EAEL,UAAC,SAAD,EAAe;AACb,UAAG,EAAE,OAAF,CAAU,SAAV,KACA,UAAU,WAAV,EAAuB;AACxB,gBAAQ,IAAR,cAAwB,QAAQ,WAAR,SAAuB,6BAA/C,EADwB;OAD1B;AAIA,aAAO,SAAP,CALa;KAAf,EAOA,EAAE,GAAF,CAAM,UAAC,QAAD,EAAc;AAClB,aAAO,IAAI,KAAK,OAAL,CAAa,UAAC,OAAD,EAAa;AACnC,YAAI,eAAJ,CADmC;AAEnC,YAAI;AACF,gBAAM,SAAS,KAAT,CAAe,IAAf,EAAqB,IAArB,CAAN,CADE;SAAJ,CAGA,OAAM,KAAN,EAAa;AACX,kBAAQ,KAAR,uBAAkC,QAAQ,WAAR,SAAuB,WAAzD,EACc,QADd,EACwB,KADxB,EADW;SAAb;AAIA,gBAAQ,GAAR,EATmC;OAAb,CAAxB,CADkB;KAAd,CATD,EAsBL,EAAE,UAAF,EACA,EAAE,MAAF,CAAS,OAAT,CAvBK,EAwBL,OAxBK,CAAP,CADsD;GAA1B,CAA1B,CAzC0B;AAoE9B,IAAE,YAAF,CAAe,aAAf,EApE8B;AAqE9B,SAAO,aAAP,CArE8B;CAAhC,CAFJ","file":"pubSub.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('pubSub', [\n    function pubSubServiceFactory() {\n      // Subscribe to this event to see all events\n      var WATCH_EVENT = '#watch#';\n      var pubSubService = {\n        init: function pubSubInit(data, name = 'channel') {\n          return R.pipe(\n            R.defaultTo({}),\n            R.assoc('_pubSubName', name),\n            R.assoc('_pubSubCache', {})\n          )(data);\n        },\n        subscribe: function pubSubSubscribe(event, listener, pubSub) {\n          return R.pipe(\n            R.prop('_pubSubCache'),\n            (cache) => {\n              return R.pipe(\n                R.propOr([], event),\n                R.append(listener),\n                (listeners) => {\n                  cache[event] = listeners;\n                  // console.log(pubSub._pubSubName, event, listeners.length);\n                  return unsubscribe(event, listener, cache);\n                }\n              )(cache);\n            }\n          )(pubSub);\n        },\n        publish: function pubSubPublish(...args /*, pubSub */) {\n          var [event] = args;\n          return R.pipePromise(\n            R.last,\n            signalListeners(event, R.init(args)),\n            signalListeners(WATCH_EVENT, R.init(args))\n          )(args);\n        }\n      };\n      function unsubscribe(event, listener, cache) {\n        return () => {\n          cache[event] = R.reject(R.equals(listener), cache[event]);\n        };\n      }\n      var signalListeners = R.curry((event, args, channel) => {\n        return R.pipePromise(\n          R.pathOr([], ['_pubSubCache', event]),\n          (listeners) => {\n            if(R.isEmpty(listeners) &&\n               event !== WATCH_EVENT) {\n              console.warn(`Event: \"${channel._pubSubName}>${event}\" with no listeners`);\n            }\n            return listeners;\n          },\n          R.map((listener) => {\n            return new self.Promise((resolve) => {\n              let ret;\n              try {\n                ret = listener.apply(null, args);\n              }\n              catch(error) {\n                console.error(`Listener error: \"${channel._pubSubName}>${event}\"`,\n                              listener, error);\n              }\n              resolve(ret);\n            });\n          }),\n          R.promiseAll,\n          R.always(channel)\n        )(channel);\n      });\n      R.curryService(pubSubService);\n      return pubSubService;\n    }\n  ]);\n"]}