{"version":3,"sources":["pubSub.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,QADX,EACqB,oBADrB,EADU;;AAIV,uBAAqB,OAArB,GAA+B,EAA/B,CAJU;AAKV,WAAS,oBAAT,GAAgC;;AAE9B,QAAM,cAAc,OAAd,CAFwB;;AAI9B,QAAM,gBAAgB;AACpB,cAAQ,YAAR;AACA,YAAM,UAAN;AACA,mBAAa,WAAW,WAAX,CAAb;AACA,sBAAgB,cAAc,WAAd,CAAhB;KAJI,CAJwB;AAU9B,QAAM,uBAAuB,EAAE,KAAF,CAAQ,mBAAR,CAAvB,CAVwB;AAW9B,MAAE,YAAF,CAAe,aAAf,EAX8B;AAY9B,WAAO,aAAP,CAZ8B;;AAc9B,aAAS,YAAT,GAAwB;AACtB,aAAO;AACL,mBAAW,EAAX;AACA,kBAAU,EAAV;OAFF,CADsB;KAAxB;;AAOA,aAAS,UAAT,CAAoB,KAApB,EAA2B,IAA3B,EAAiC,MAAjC,EAAyC;AACvC,cAAQ,IAAR,WAAqB,KAArB,EAA8B,IAA9B;;AADuC,aAGhC,EAAE,MAAF,GACL,gBAAgB,KAAhB,CADK,EAEL,gBAAgB,WAAhB,CAFK,CAAP,CAHuC;;AAQvC,eAAS,eAAT,CAAyB,KAAzB,EAAgC;AAC9B,eAAO;iBAAM,EAAE,MAAF,CAAS,MAAT,EACX,EAAE,MAAF,CAAS,EAAT,EAAa,CAAC,WAAD,EAAa,KAAb,CAAb,CADW,EAEX,qBAAqB,KAArB,CAFW,EAGX,EAAE,OAAF,CAAU,YAAV,CAHW;SAAN,CADuB;OAAhC;AAOA,eAAS,YAAT,CAAsB,QAAtB,EAAgC;AAC9B,YAAI;AACF,mBAAS,KAAT,CAAe,IAAf,EAAqB,CAAC,KAAD,EAAQ,IAAR,CAArB,EADE;SAAJ,CAGA,OAAM,KAAN,EAAa;AACX,kBAAQ,KAAR,WAAsB,2BAAtB,EACc,KADd,EACqB,QADrB,EADW;SAAb;OAJF;KAfF;;AA0BA,aAAS,UAAT,CAAoB,IAApB,EAA0B;AACxB,aAAO,SAAS,SAAT,CAAmB,KAAnB,EAA0B,OAA1B,EAAmC,MAAnC,EAA2C;AAChD,eAAO,EAAE,IAAF,CACL,EAAE,QAAF,CAAW,CAAC,IAAD,EAAO,KAAP,CAAX,CADK,EAEL,EAAE,IAAF,CACE,EAAE,SAAF,CAAY,EAAZ,CADF,EAEE,EAAE,MAAF,CAAS,OAAT,CAFF,CAFK,EAML,MANK,CAAP,CADgD;OAA3C,CADiB;KAA1B;;AAaA,aAAS,aAAT,CAAuB,IAAvB,EAA6B;AAC3B,aAAO,UAAS,KAAT,EAAgB,OAAhB,EAAyB,MAAzB,EAAiC;AACtC,eAAO,EAAE,IAAF,CACL,EAAE,QAAF,CAAW,CAAC,IAAD,EAAO,KAAP,CAAX,CADK,EAEL,EAAE,IAAF,CACE,EAAE,SAAF,CAAY,EAAZ,CADF,EAEE,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,OAAT,CAAT,CAFF,CAFK,EAML,MANK,CAAP,CADsC;OAAjC,CADoB;KAA7B;;AAaA,aAAS,mBAAT,CAA6B,KAA7B,EAAoC,QAApC,EAA8C;AAC5C,aAAO,EAAE,IAAF,CACL,UAAC,QAAD;eAAgB,EAAE,OAAF,CAAU,QAAV,KACA,UAAU,WAAV;OADhB,EAEA,EAAE,OAAF,WAAkB,2BAAlB,CAHK,EAIL,QAJK,CAAP,CAD4C;KAA9C;GAzEF;CALD,CAAD","file":"pubSub.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('pubSub', pubSubServiceFactory);\n\n  pubSubServiceFactory.$inject = [];\n  function pubSubServiceFactory() {\n    // Subscribe to this event to see all events\n    const WATCH_EVENT = '#ALL#';\n\n    const pubSubService = {\n      create: pubSubCreate,\n      emit: pubSubEmit,\n      addListener: pubSubAdd$('listeners'),\n      removeListener: pubSubRemove$('listeners')\n    };\n    const warnOnEmptyWatchers$ = R.curry(warnOnEmptyWatchers);\n    R.curryService(pubSubService);\n    return pubSubService;\n\n    function pubSubCreate() {\n      return {\n        listeners: {},\n        reducers: {}\n      };\n    }\n\n    function pubSubEmit(event, args, pubSub) {\n      console.info(`---> ${event}`, args);\n      // console.trace();\n      return R.thread()(\n        signalListeners(event),\n        signalListeners(WATCH_EVENT)\n      );\n\n      function signalListeners(event) {\n        return () => R.thread(pubSub)(\n          R.pathOr([], ['listeners',event]),\n          warnOnEmptyWatchers$(event),\n          R.forEach(callListener)\n        );\n      }\n      function callListener(listener) {\n        try {\n          listener.apply(null, [event, args]);\n        }\n        catch(error) {\n          console.error(`xxx> ${event} : listener error`,\n                        error, listener);\n        }\n      }\n    }\n\n    function pubSubAdd$(type) {\n      return function pubSubAdd(event, reducer, pubSub) {\n        return R.over(\n          R.lensPath([type, event]),\n          R.pipe(\n            R.defaultTo([]),\n            R.append(reducer)\n          ),\n          pubSub\n        );\n      };\n    }\n\n    function pubSubRemove$(type) {\n      return function(event, reducer, pubSub) {\n        return R.over(\n          R.lensPath([type, event]),\n          R.pipe(\n            R.defaultTo([]),\n            R.reject(R.equals(reducer))\n          ),\n          pubSub\n        );\n      };\n    }\n\n    function warnOnEmptyWatchers(event, watchers) {\n      return R.when(\n        (watchers) => ( R.isEmpty(watchers) &&\n                        event !== WATCH_EVENT ),\n        R.spyWarn(`...> ${event} with no watchers`),\n        watchers\n      );\n    }\n  }\n})();\n"]}