{"version":3,"sources":["pubSub.es6"],"names":[],"mappings":"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","file":"pubSub.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('pubSub', pubSubServiceFactory);\n\n  pubSubServiceFactory.$inject = [];\n  function pubSubServiceFactory() {\n    // Subscribe to this event to see all events\n    const WATCH_EVENT = '#watch#';\n    const pubSubService = {\n      init: pubSubInit,\n      subscribe: pubSubSubscribe,\n      publishP: pubSubPublishP\n    };\n    const signalListenersP$ = R.curry(signalListenersP);\n    R.curryService(pubSubService);\n    return pubSubService;\n\n    function pubSubInit(data, name = 'channel') {\n      return R.thread(data)(\n        R.defaultTo({}),\n        R.assoc('_pubSubName', name),\n        R.assoc('_pubSubCache', {})\n      );\n    }\n    function pubSubSubscribe(event, listener, pubSub) {\n      return R.thread(pubSub)(\n        R.prop('_pubSubCache'),\n        (cache) => {\n          return R.thread(cache)(\n            R.propOr([], event),\n            R.append(listener),\n            (listeners) => {\n              cache[event] = listeners;\n              return unsubscribe(event, listener, cache);\n            }\n          );\n        }\n      );\n    }\n    function pubSubPublishP(...args) {\n      const [event] = args;\n      return R.threadP(args)(\n        R.last,\n        signalListenersP$(event, R.init(args)),\n        signalListenersP$(WATCH_EVENT, R.init(args))\n      );\n    }\n    function unsubscribe(event, listener, cache) {\n      return () => {\n        cache[event] = R.reject(R.equals(listener), cache[event]);\n      };\n    }\n    function signalListenersP(event, args, channel) {\n      return R.threadP(channel)(\n        R.pathOr([], ['_pubSubCache', event]),\n        warnIfNoListeners,\n        R.map(resolveListenerP),\n        R.promiseAll,\n        R.always(channel)\n      );\n\n      function warnIfNoListeners(listeners) {\n        if(R.isEmpty(listeners) &&\n           event !== WATCH_EVENT) {\n          console.warn(`Event: \"${channel._pubSubName}>${event}\" with no listeners`);\n        }\n        return listeners;\n      }\n      function resolveListenerP(listener) {\n        return new self.Promise((resolve) => {\n          let ret;\n          try {\n            ret = listener.apply(null, args);\n          }\n          catch(error) {\n            console.error(`Listener error: \"${channel._pubSubName}>${event}\"`,\n                          listener, error);\n          }\n          resolve(ret);\n        });\n      }\n    }\n  }\n})();\n"]}