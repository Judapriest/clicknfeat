{"version":3,"sources":["http.es6"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,MADX,EACmB,CACf,SAAS,kBAAT,GAA8B;AAC5B,WAAS,WAAT,CAAqB,MAArB,EAA6B,GAA7B,EAAkC,IAAlC,EAAwC;AACtC,WAAO,IAAI,KAAK,OAAL,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AAC3C,UAAI,SAAS,IAAI,KAAK,cAAL,EAAb,CADuC;AAE3C,aAAO,IAAP,CAAY,MAAZ,EAAoB,GAApB,EAF2C;AAG3C,aAAO,YAAP,GAAsB,MAAtB,CAH2C;AAI3C,UAAG,EAAE,MAAF,CAAS,IAAT,CAAH,EAAmB;AACjB,eAAO,IAAP,CAAY,KAAK,SAAL,CAAe,IAAf,CAAZ,EADiB;OAAnB,MAGK;AACH,eAAO,IAAP,GADG;OAHL;AAMA,aAAO,MAAP,GAAgB,YAAM;AACpB,YAAG,OAAO,MAAP,IAAiB,GAAjB,IACA,OAAO,MAAP,GAAgB,GAAhB,EAAqB;AACtB,kBAAQ,OAAO,QAAP,CAAR,CADsB;SADxB,MAIK;AACH,iBAAO,OAAO,UAAP,CAAP,CADG;SAJL;OADc,CAV2B;AAmB3C,aAAO,OAAP,GAAiB,YAAM;AACrB,eAAO,OAAO,UAAP,CAAP,CADqB;OAAN,CAnB0B;KAArB,CAAxB,CADsC;GAAxC;AAyBA,MAAI,cAAc;AAChB,SAAK,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AACzB,aAAO,YAAY,KAAZ,EAAmB,GAAnB,CAAP,CADyB;KAAtB;AAGL,UAAM,SAAS,OAAT,CAAiB,GAAjB,EAAsB,IAAtB,EAA4B;AAChC,aAAO,YAAY,MAAZ,EAAoB,GAApB,EAAyB,IAAzB,CAAP,CADgC;KAA5B;AAGN,SAAK,SAAS,OAAT,CAAiB,GAAjB,EAAsB,IAAtB,EAA4B;AAC/B,aAAO,YAAY,KAAZ,EAAmB,GAAnB,EAAwB,IAAxB,CAAP,CAD+B;KAA5B;AAGL,YAAQ,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AAC5B,aAAO,YAAY,QAAZ,EAAsB,GAAtB,CAAP,CAD4B;KAAtB;GAVN,CA1BwB;AAwC5B,IAAE,YAAF,CAAe,WAAf,EAxC4B;AAyC5B,SAAO,WAAP,CAzC4B;CAA9B,CAFJ","file":"http.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('http', [\n    function httpServiceFactory() {\n      function ajaxRequest(method, url, data) {\n        return new self.Promise((resolve, reject) => {\n          var client = new self.XMLHttpRequest();\n          client.open(method, url);\n          client.responseType = 'json';\n          if(R.exists(data)) {\n            client.send(JSON.stringify(data));\n          }\n          else {\n            client.send();\n          }\n          client.onload = () => {\n            if(client.status >= 200 &&\n               client.status < 300) {\n              resolve(client.response);\n            }\n            else {\n              reject(client.statusText);\n            }\n          };\n          client.onerror = () => {\n            reject(client.statusText);\n          };\n        });\n      }\n      var httpService = {\n        get: function httpGet(url) {\n          return ajaxRequest('GET', url);\n        },\n        post: function httpGet(url, data) {\n          return ajaxRequest('POST', url, data);\n        },\n        put: function httpGet(url, data) {\n          return ajaxRequest('PUT', url, data);\n        },\n        delete: function httpGet(url) {\n          return ajaxRequest('DELETE', url);\n        }\n      };\n      R.curryService(httpService);\n      return httpService;\n    }\n  ]);\n"]}