{"version":3,"sources":["http.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,MADX,EACmB,kBADnB,EADU;;AAIV,qBAAmB,OAAnB,GAA6B,EAA7B,CAJU;AAKV,WAAS,kBAAT,GAA8B;AAC5B,QAAM,cAAc;AAClB,WAAK,OAAL;AACA,YAAM,QAAN;AACA,WAAK,OAAL;AACA,cAAQ,UAAR;KAJI,CADsB;AAO5B,MAAE,YAAF,CAAe,WAAf,EAP4B;AAQ5B,WAAO,WAAP,CAR4B;;AAU5B,aAAS,OAAT,CAAiB,GAAjB,EAAsB;AACpB,aAAO,YAAY,KAAZ,EAAmB,GAAnB,CAAP,CADoB;KAAtB;AAGA,aAAS,QAAT,CAAkB,GAAlB,EAAuB,IAAvB,EAA6B;AAC3B,aAAO,YAAY,MAAZ,EAAoB,GAApB,EAAyB,IAAzB,CAAP,CAD2B;KAA7B;AAGA,aAAS,OAAT,CAAiB,GAAjB,EAAsB,IAAtB,EAA4B;AAC1B,aAAO,YAAY,KAAZ,EAAmB,GAAnB,EAAwB,IAAxB,CAAP,CAD0B;KAA5B;AAGA,aAAS,UAAT,CAAoB,GAApB,EAAyB;AACvB,aAAO,YAAY,QAAZ,EAAsB,GAAtB,CAAP,CADuB;KAAzB;AAGA,aAAS,WAAT,CAAqB,MAArB,EAA6B,GAA7B,EAAkC,IAAlC,EAAwC;AACtC,aAAO,IAAI,KAAK,OAAL,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AAC3C,YAAM,SAAS,IAAI,KAAK,cAAL,EAAb,CADqC;AAE3C,eAAO,IAAP,CAAY,MAAZ,EAAoB,GAApB,EAF2C;AAG3C,eAAO,YAAP,GAAsB,MAAtB,CAH2C;AAI3C,YAAG,EAAE,MAAF,CAAS,IAAT,CAAH,EAAmB;AACjB,iBAAO,IAAP,CAAY,KAAK,SAAL,CAAe,IAAf,CAAZ,EADiB;SAAnB,MAGK;AACH,iBAAO,IAAP,GADG;SAHL;AAMA,eAAO,MAAP,GAAgB,YAAM;AACpB,cAAG,OAAO,MAAP,IAAiB,GAAjB,IACA,OAAO,MAAP,GAAgB,GAAhB,EAAqB;AACtB,oBAAQ,OAAO,QAAP,CAAR,CADsB;WADxB,MAIK;AACH,mBAAO,OAAO,UAAP,CAAP,CADG;WAJL;SADc,CAV2B;AAmB3C,eAAO,OAAP,GAAiB,YAAM;AACrB,iBAAO,OAAO,UAAP,CAAP,CADqB;SAAN,CAnB0B;OAArB,CAAxB,CADsC;KAAxC;GAtBF;CALD,CAAD","file":"http.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('http', httpServiceFactory);\n\n  httpServiceFactory.$inject = [];\n  function httpServiceFactory() {\n    const httpService = {\n      get: httpGet,\n      post: httpPost,\n      put: httpPut,\n      delete: httpDelete\n    };\n    R.curryService(httpService);\n    return httpService;\n\n    function httpGet(url) {\n      return ajaxRequest('GET', url);\n    }\n    function httpPost(url, data) {\n      return ajaxRequest('POST', url, data);\n    }\n    function httpPut(url, data) {\n      return ajaxRequest('PUT', url, data);\n    }\n    function httpDelete(url) {\n      return ajaxRequest('DELETE', url);\n    }\n    function ajaxRequest(method, url, data) {\n      return new self.Promise((resolve, reject) => {\n        const client = new self.XMLHttpRequest();\n        client.open(method, url);\n        client.responseType = 'json';\n        if(R.exists(data)) {\n          client.send(JSON.stringify(data));\n        }\n        else {\n          client.send();\n        }\n        client.onload = () => {\n          if(client.status >= 200 &&\n             client.status < 300) {\n            resolve(client.response);\n          }\n          else {\n            reject(client.statusText);\n          }\n        };\n        client.onerror = () => {\n          reject(client.statusText);\n        };\n      });\n    }\n  }\n})();\n"]}