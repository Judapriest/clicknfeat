{"version":3,"sources":["data.es6"],"names":[],"mappings":"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","file":"data.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('appData', appDataServiceFactory);\n\n  appDataServiceFactory.$inject = [\n    'appAction',\n    'appError',\n    'appState',\n    'fileExport',\n    'fileImport',\n    'settings',\n    'gameBoard',\n    'gameFactions',\n    'gameScenario',\n    'gameTerrainInfo',\n  ];\n  function appDataServiceFactory(appActionService,\n                                 appErrorService,\n                                 appStateService,\n                                 fileExportService,\n                                 fileImportService,\n                                 settingsModel,\n                                 gameBoardModel,\n                                 gameFactionsModel,\n                                 gameScenarioModel,\n                                 gameTerrainInfoModel) {\n    const BOARDS_LENS = R.lensProp('boards');\n    const FACTIONS_LENS = R.lensProp('factions');\n    const SCENARIOS_LENS = R.lensProp('scenarios');\n    const SETTINGS_LENS = R.lensProp('settings');\n    const TERRAINS_LENS = R.lensProp('terrains');\n\n    const boards = appStateService.state\n            .map(R.viewOr([], BOARDS_LENS));\n    const factions = appStateService.state\n            .map(R.viewOr({}, FACTIONS_LENS));\n    const scenarios = appStateService.state\n            .map(R.viewOr({}, SCENARIOS_LENS));\n    const settings = appStateService.state\n            .map(R.viewOr({}, SETTINGS_LENS));\n    const terrains = appStateService.state\n            .map(R.viewOr({}, TERRAINS_LENS));\n\n    const export_settings = settings\n            .map(R.prop('current'))\n            .changes()\n            .snapshot(dataSettingsExport, () => previous_export_settings)\n            .hold({});\n    const previous_export_settings = export_settings.delay();\n\n    settings\n      .map(R.prop('current'))\n      .changes()\n      .listen((current) => settingsModel.store({current}));\n    factions\n      .map(R.prop('desc'))\n      .changes()\n      .listen((desc) => gameFactionsModel.storeDesc({desc}));\n\n    const appDataService = {\n      boards, factions, scenarios, settings, terrains,\n      export: { settings: export_settings },\n      boardsSet: actionDataBoardsSet,\n      factionsClearDesc: actionDataFactionsClearDesc,\n      factionsClearAllDesc: actionDataFactionsClearAllDesc,\n      factionsLoadDescFile: actionDataFactionsLoadDescFile,\n      factionsSet: actionDataFactionsSet,\n      factionsUpdateDesc: actionDataFactionsUpdateDesc,\n      scenariosSet: actionDataScenariosSet,\n      settingsLoadFile: actionDataSettingsLoadFile,\n      settingsReset: actionDataSettingsReset,\n      settingsSet: actionDataSettingsSet,\n      settingsExport: dataSettingsExport,\n      terrainsSet: actionDataTerrainsSet\n    };\n    R.curryService(appDataService);\n\n    mount();\n\n    return appDataService;\n\n    function mount() {\n      appActionService\n        .register('Boards.set'               , actionDataBoardsSet)\n        .register('Factions.clearDesc'       , actionDataFactionsClearDesc)\n        .register('Factions.clearAllDesc'    , actionDataFactionsClearAllDesc)\n        .register('Factions.loadDescFile'    , actionDataFactionsLoadDescFile)\n        .register('Factions.set'             , actionDataFactionsSet)\n        .register('Factions.updateDesc'      , actionDataFactionsUpdateDesc)\n        .register('Settings.loadFile'        , actionDataSettingsLoadFile)\n        .register('Scenarios.set'            , actionDataScenariosSet)\n        .register('Settings.reset'           , actionDataSettingsReset)\n        .register('Settings.set'             , actionDataSettingsSet)\n        .register('Terrains.set'             , actionDataTerrainsSet);\n\n      const boards_ready = gameBoardModel.initP()\n              .then((boards) => appActionService.do('Boards.set', boards));\n      const factions_ready = gameFactionsModel.initP()\n              .then((factions) => appActionService.do('Factions.set', factions));\n      const scenarios_ready = gameScenarioModel.initP()\n              .then((scenarios) => appActionService.do('Scenarios.set', scenarios));\n      const terrains_ready = gameTerrainInfoModel.initP()\n              .then((terrains) => appActionService.do('Terrains.set', terrains));\n      const settings_ready = settingsModel.initP()\n              .then((settings) => appActionService.do('Settings.set', settings));\n\n      appDataService.ready = R.allP([\n        boards_ready,\n        factions_ready,\n        scenarios_ready,\n        settings_ready,\n        terrains_ready,\n      ]);\n    }\n    function actionDataBoardsSet(state, boards) {\n      return R.set(BOARDS_LENS, boards, state);\n    }\n    function actionDataFactionsClearDesc(state, faction) {\n      return R.over(\n        FACTIONS_LENS,\n        R.pipe(\n          R.dissocPath(['desc', faction]),\n          gameFactionsModel.updateDesc\n        ),\n        state\n      );\n    }\n    function actionDataFactionsClearAllDesc(state) {\n      return R.over(\n        FACTIONS_LENS,\n        R.pipe(\n          R.assoc('desc', {}),\n          gameFactionsModel.updateDesc\n        ),\n        state\n      );\n    }\n    function actionDataFactionsLoadDescFile(_state_, faction, file) {\n      return R.threadP(file)(\n        fileImportService.readP$('json'),\n        (desc) => {\n          appActionService\n            .do('Factions.updateDesc', faction, desc);\n        }\n      ).catch(appErrorService.emit);\n    }\n    function actionDataFactionsSet(state, factions) {\n      return R.set(FACTIONS_LENS, factions, state);\n    }\n    function actionDataFactionsUpdateDesc(state, faction, desc) {\n      return R.over(\n        FACTIONS_LENS,\n        R.pipe(\n          R.assocPath(['desc', faction], desc),\n          gameFactionsModel.updateDesc\n        ),\n        state\n      );\n    }\n    function actionDataScenariosSet(state, scenarios) {\n      return R.set(SCENARIOS_LENS, scenarios, state);\n    }\n    function actionDataSettingsLoadFile(_state_, file) {\n      return R.threadP(file)(\n        fileImportService.readP$('json'),\n        settingsModel.bind,\n        settingsModel.update,\n        (settings) => {\n          appActionService.do('Settings.set', settings);\n        }\n      ).catch(appErrorService.emit);\n    }\n    function actionDataSettingsReset(state, data) {\n      return R.thread(data)(\n        settingsModel.bind,\n        settingsModel.update,\n        (settings) => R.set(SETTINGS_LENS, settings, state)\n      );\n    }\n    function actionDataSettingsSet(state, settings) {\n      return R.set(SETTINGS_LENS, settings, state);\n    }\n    function actionDataTerrainsSet(state, terrains) {\n      return R.set(TERRAINS_LENS, terrains, state);\n    }\n    function dataSettingsExport(previous, current) {\n      fileExportService.cleanup(previous.url);\n      return {\n        name: 'clicknfeat_settings.json',\n        url: fileExportService.generate('json', current)\n      };\n    }\n  }\n})();\n"]}