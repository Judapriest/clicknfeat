{"version":3,"sources":["game.es6"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('appGame', stateGameModelFactory);\n\n  stateGameModelFactory.$inject = [\n    'behaviours',\n    'appAction',\n    'appData',\n    'appError',\n    'appGames',\n    'appModes',\n    'appState',\n    'appUser',\n    'fileImport',\n    'fileExport',\n    'game',\n    'gameBoard',\n    'gameConnection',\n    'gameFactions',\n    'gameScenario',\n    'gameLos',\n    'gameModels',\n    'gameModelSelection',\n    'gameRuler',\n    'gameTemplates',\n    'gameTemplateSelection',\n    'gameTerrains',\n    'gameTerrainSelection',\n    'games',\n    'modes',\n    'allTemplates',\n  ];\n  function stateGameModelFactory(behavioursModel,\n                                 appActionService,\n                                 appDataService,\n                                 appErrorService,\n                                 appGamesService,\n                                 appModesService,\n                                 appStateService,\n                                 appUserService,\n                                 fileImportService,\n                                 fileExportService,\n                                 gameModel,\n                                 gameBoardModel,\n                                 gameConnectionModel,\n                                 gameFactionsModel,\n                                 gameScenarioModel,\n                                 gameLosModel,\n                                 gameModelsModel,\n                                 gameModelSelectionModel,\n                                 gameRulerModel,\n                                 gameTemplatesModel,\n                                 gameTemplateSelectionModel,\n                                 gameTerrainsModel,\n                                 gameTerrainSelectionModel,\n                                 gamesModel,\n                                 modesModel) {\n    const GAME_LENS = R.lensProp('game');\n    const USER_NAME_LENS = R.lensPath(['user','state','name']);\n    const CREATE_LENS = R.lensProp('create');\n    const DRAG_BOX_LENS = R.lensPath(['view','drag_box']);\n    const FLIP_MAP_LENS = R.lensPath(['view','flip_map']);\n    const MOVE_MAP_LENS = R.lensPath(['view','move_map']);\n    const DETAIL_LENS = R.lensPath(['view','detail']);\n    const EDIT_DAMAGE_LENS = R.lensPath(['view','edit_damage']);\n    const EDIT_LABEL_LENS = R.lensPath(['view','edit_label']);\n    const MODELS_LENS = R.lensProp('models');\n    const MODEL_SELECTION_LENS = R.lensProp('model_selection');\n    const TEMPLATES_LENS = R.lensProp('templates');\n    const TEMPLATE_SELECTION_LENS = R.lensProp('template_selection');\n    const TERRAINS_LENS = R.lensProp('terrains');\n    const TERRAIN_SELECTION_LENS = R.lensProp('terrain_selection');\n    const BOARD_LENS = R.lensProp('board');\n    const LOS_LENS = R.lensProp('los');\n    const RULER_LENS = R.lensProp('ruler');\n\n    const game = appStateService.state\n            .map(R.viewOr({}, GAME_LENS));\n    const game_export = game\n            .changes()\n            .snapshot(gameExportCurrent, () => game_export_previous)\n            .hold({});\n    const game_export_previous = game_export.delay({});\n    const loading = behavioursModel.signalModel.create();\n    const create = appStateService.state\n            .map(R.view(CREATE_LENS));\n\n    const view = behavioursModel.signalModel.create();\n    const scroll_left = view.filter(R.equals('scrollLeft'));\n    const scroll_right = view.filter(R.equals('scrollRight'));\n    const scroll_up = view.filter(R.equals('scrollUp'));\n    const scroll_down = view.filter(R.equals('scrollDown'));\n    const zoom_in = view.filter(R.equals('zoomIn'));\n    const zoom_out = view.filter(R.equals('zoomOut'));\n    const zoom_reset = view.filter(R.equals('zoomReset'));\n    const toggle_menu = view.filter(R.equals('toggleMenu'));\n    const move_map = appStateService.state\n            .map(R.viewOr(false, MOVE_MAP_LENS)).changes();\n    const drag_box = appStateService.state\n            .map(R.viewOr({}, DRAG_BOX_LENS)).changes();\n    const flip_map = appStateService.state\n            .map(R.viewOr(false, FLIP_MAP_LENS));\n    const flip_map_changes = flip_map.changes();\n    const detail = appStateService.state\n            .map(R.viewOr(null, DETAIL_LENS));\n    const edit_damage = appStateService.state\n            .map(R.viewOr(null, EDIT_DAMAGE_LENS));\n    const edit_damage_changes = edit_damage.changes();\n    const edit_label = appStateService.state\n            .map(R.viewOr(null, EDIT_LABEL_LENS));\n    const edit_label_changes = edit_label.changes();\n\n    const models = game\n            .map(R.viewOr(gameModelsModel.create(), MODELS_LENS));\n    const previous_models = models.delay();\n    const model_selection = game\n            .map(R.viewOr(gameModelSelectionModel.create(),\n                          MODEL_SELECTION_LENS));\n    const previous_model_selection = model_selection.delay();\n\n    const models_force_changes = behavioursModel.signalModel.create();\n    const models_changes = models\n            .changes()\n            .snapshot(observeModelsChanges, previous_models)\n            .orElse(models_force_changes)\n            .snapshot((models, stamps) => [models, stamps], models)\n            .filter(([_models_, stamps]) => !R.isEmpty(stamps));\n    const model_selection_changes = model_selection\n            .changes()\n            .snapshot(observeModelSelectionChanges, previous_model_selection)\n            .snapshot((sel, stamps) => [sel, stamps], model_selection)\n            .filter(([_sel_, stamps]) => !R.isEmpty(stamps));\n    const models_flip_map = flip_map_changes\n            .snapshot(R.nthArg(0), models);\n\n    const templates = game\n            .map(R.viewOr(gameTemplatesModel.create(), TEMPLATES_LENS));\n    const previous_templates = templates.delay();\n    const template_selection = game\n            .map(R.viewOr(gameTemplateSelectionModel.create(),\n                          TEMPLATE_SELECTION_LENS));\n\n    const templates_force_changes = behavioursModel.signalModel.create();\n    const templates_changes = templates\n            .changes()\n            .snapshot(observeTemplatesChanges, previous_templates)\n            .orElse(templates_force_changes)\n            .snapshot((templates, stamps) => [templates, stamps], templates)\n            .filter(([_templates_, stamps]) => !R.isEmpty(stamps));\n    const template_selection_changes = template_selection\n            .changes();\n    const templates_flip_map = flip_map_changes\n            .snapshot(R.nthArg(0), templates);\n\n    const terrains = game\n            .map(R.viewOr(gameTerrainsModel.create(), TERRAINS_LENS));\n    const previous_terrains = terrains.delay();\n    const terrain_selection = game\n            .map(R.viewOr(gameTerrainSelectionModel.create(),\n                          TERRAIN_SELECTION_LENS));\n\n    const terrains_force_changes = behavioursModel.signalModel.create();\n    const terrains_changes = terrains\n            .changes()\n            .snapshot(observeTerrainsChanges, previous_terrains)\n            .orElse(terrains_force_changes)\n            .snapshot((terrains, stamps) => [terrains, stamps], terrains)\n            .filter(([_terrains_, stamps]) => !R.isEmpty(stamps));\n    const terrain_selection_changes = terrain_selection\n            .changes();\n\n    const los = game\n            .map(R.viewOr(gameLosModel.create(), LOS_LENS));\n    const los_changes = los\n            .changes()\n            .snapshot((models, los) => [models, los], models)\n            .snapshot(R.prepend, appModesService.modes);\n    const ruler = game\n            .map(R.viewOr(gameRulerModel.create(), RULER_LENS));\n    const ruler_changes = ruler\n            .changes()\n            .snapshot((flip, ruler) => [flip, ruler], flip_map)\n            .orElse(flip_map_changes.snapshot((ruler, flip) => [flip, ruler], ruler))\n            .snapshot(R.prepend, models)\n            .snapshot(R.prepend, appModesService.modes);\n\n    appModesService.modes\n      .changes().filter((modes) => 'Default' === modesModel.currentModeName(modes))\n      .orElse(model_selection_changes)\n      .orElse(template_selection_changes)\n      .orElse(terrain_selection_changes)\n      .listen(appGameCheckMode);\n\n    const board_export = game\n            .map(R.viewOr({}, BOARD_LENS))\n            .changes()\n            .orElse(terrains.changes())\n            .snapshot(R.nthArg(0), game)\n            .snapshot(gameBoardExport, () => board_export_previous)\n            .hold({});\n    const board_export_previous = board_export.delay({});\n    const model_selection_export = model_selection_changes\n            .snapshot(R.nthArg(0), game)\n            .snapshot(gameModelSelectionExport, () => model_selection_export_previous)\n            .hold({});\n    const model_selection_export_previous = model_selection_export.delay({});\n\n    const appGameService = {\n      game, create, loading,\n      export: { board: board_export,\n                game: game_export,\n                models: model_selection_export\n              },\n      view: { scroll_left, scroll_right, scroll_up, scroll_down,\n              zoom_in, zoom_out, zoom_reset,\n              detail: detail.changes(), drag_box,\n              flip_map: flip_map_changes, move_map, toggle_menu,\n              edit_damage, edit_damage_changes,\n              edit_label, edit_label_changes\n            },\n      models: { models,\n                changes: models_changes,\n                force_changes: models_force_changes,\n                flip_map: models_flip_map,\n                selection: model_selection,\n                selection_changes: model_selection_changes\n              },\n      los: { los,\n             changes: los_changes\n           },\n      ruler: { ruler,\n               changes: ruler_changes\n             },\n      templates: { templates,\n                   changes: templates_changes,\n                   force_changes: templates_force_changes,\n                   flip_map: templates_flip_map,\n                   selection: template_selection,\n                   selection_changes: template_selection_changes\n                 },\n      terrains: { terrains,\n                  changes: terrains_changes,\n                  force_changes: terrains_force_changes,\n                  selection: terrain_selection,\n                  selection_changes: terrain_selection_changes\n                },\n      saveCurrent: gameSaveCurrent,\n      exportCurrent: gameExportCurrent,\n      set: actionGameSet,\n      load: actionGameLoad,\n      loadDataReady: actionGameLoadDataReady,\n      loadDataLoaded: actionGameLoadDataLoaded,\n      loadGameLoaded: actionGameLoadGameLoaded,\n      connectionClose: actionGameConnectionClose,\n      commandExecute: actionGameCommandExecute,\n      commandUndo: actionGameCommandUndo,\n      commandUndoLast: actionGameCommandUndoLast,\n      commandReplay: actionGameCommandReplay,\n      commandReplayNext: actionGameCommandReplayNext,\n      viewScrollLeft: actionGameViewScrollLeft,\n      viewScrollRight: actionGameViewScrollRight,\n      viewScrollUp: actionGameViewScrollUp,\n      viewScrollDown: actionGameViewScrollDown,\n      viewZoomIn: actionGameViewZoomIn,\n      viewZoomOut: actionGameViewZoomOut,\n      viewZoomReset: actionGameViewZoomReset,\n      viewFlipMap: actionGameViewFlipMap,\n      viewMoveMap: actionGameViewMoveMap,\n      viewToggleMenu: actionGameViewToggleMenu,\n      viewEditDamageReset: actionGameViewEditDamageReset,\n      viewEditLabel: actionGameViewEditLabel,\n      boardSet: actionGameBoardSet,\n      boardSetRandom: actionGameBoardSetRandom,\n      boardImportFile: actionGameBoardImportFile,\n      boardExport: gameBoardExport,\n      scenarioSet: actionGameScenarioSet,\n      scenarioSetRandom: actionGameScenarioSetRandom,\n      scenarioGenerateObjectives: actionGameScenarioGenerateObjectives,\n      modelCreate: actionGameModelCreate,\n      modelCopy: actionGameModelCopy,\n      modelImportList: actionGameModelImportList,\n      modelImportFile: actionGameModelImportFile,\n      modelSelectionExport: gameModelSelectionExport,\n      templateCreate: actionGameTemplateCreate,\n      templatesSet: actionGameTemplatesSet,\n      templatesSetDeviationMax: actionGameTemplatesSetDeviationMax,\n      terrainCreate: actionGameTerrainCreate,\n      terrainsSet: actionGameTerrainsSet,\n      terrainsReset: actionGameTerrainsReset,\n      // onCommandReplayBatch: stateGameOnCommandReplayBatch,\n      // onSetCmds: stateGameOnSetCmds,\n      // onSetPlayers: stateGameOnSetPlayers,\n      // onNewChatMsg: stateGameOnNewChatMsg,\n      // onUiStateFlip: stateGameOnUiStateFlip,\n      // onInvitePlayer: stateGameOnInvitePlayer,\n      // onScenarioRefresh: stateGameOnScenarioRefresh,\n      // closeOsd: stateGameCloseOsd\n      checkMode: appGameCheckMode,\n    };\n    R.curryService(appGameService);\n\n    mount();\n\n    return appGameService;\n\n    function mount() {\n      appActionService\n        .register('Game.set'                   , actionGameSet)\n        .register('Game.load'                  , actionGameLoad)\n        .register('Game.load.dataReady'        , actionGameLoadDataReady)\n        .register('Game.load.dataLoaded'       , actionGameLoadDataLoaded)\n        .register('Game.load.gameLoaded'       , actionGameLoadGameLoaded)\n        .register('Game.connection.close'      , actionGameConnectionClose)\n        .register('Game.command.execute'       , actionGameCommandExecute)\n        .register('Game.command.undo'          , actionGameCommandUndo)\n        .register('Game.command.replay'        , actionGameCommandReplay)\n        .register('Game.command.undoLast'      , actionGameCommandUndoLast)\n        .register('Game.command.replayNext'    , actionGameCommandReplayNext)\n        .register('Game.view.scrollLeft'       , actionGameViewScrollLeft)\n        .register('Game.view.scrollRight'      , actionGameViewScrollRight)\n        .register('Game.view.scrollUp'         , actionGameViewScrollUp)\n        .register('Game.view.scrollDown'       , actionGameViewScrollDown)\n        .register('Game.view.zoomIn'           , actionGameViewZoomIn)\n        .register('Game.view.zoomOut'          , actionGameViewZoomOut)\n        .register('Game.view.zoomReset'        , actionGameViewZoomReset)\n        .register('Game.view.flipMap'          , actionGameViewFlipMap)\n        .register('Game.view.moveMap'          , actionGameViewMoveMap)\n        .register('Game.view.toggleMenu'       , actionGameViewToggleMenu)\n        .register('Game.view.editDamage.reset' , actionGameViewEditDamageReset)\n        .register('Game.view.editLabel'        , actionGameViewEditLabel)\n        .register('Game.board.set'             , actionGameBoardSet)\n        .register('Game.board.setRandom'       , actionGameBoardSetRandom)\n        .register('Game.board.importFile'      , actionGameBoardImportFile)\n        .register('Game.scenario.set'          , actionGameScenarioSet)\n        .register('Game.scenario.setRandom'    , actionGameScenarioSetRandom)\n        .register('Game.scenario.generateObjectives',\n                  actionGameScenarioGenerateObjectives)\n        .register('Game.model.create'          , actionGameModelCreate)\n        .register('Game.model.copy'            , actionGameModelCopy)\n        .register('Game.model.importList'      , actionGameModelImportList)\n        .register('Game.model.importFile'      , actionGameModelImportFile)\n        .register('Game.template.create'       , actionGameTemplateCreate)\n        .register('Game.templates.set'         , actionGameTemplatesSet)\n        .register('Game.templates.setDeviationMax',\n                  actionGameTemplatesSetDeviationMax)\n        .register('Game.terrain.create'        , actionGameTerrainCreate)\n        .register('Game.terrains.set'          , actionGameTerrainsSet)\n        .register('Game.terrains.reset'        , actionGameTerrainsReset)\n        // .register('Game.command.replayBatch' , actionGameCommandReplayBatch)\n        // .register('Game.invitePlayer'        , actionGameInvitePlayer)\n        // .register('Game.setCmds'             , actionGameSetCmds)\n        // .register('Game.setPlayers'          , actionGameSetPlayers)\n        // .register('Game.newChatMsg'          , actionGameNewChatMsg)\n        // .register('Game.scenario.generateObjectives',\n        //             actionGameScenarioGenerateObjectives)\n      ;\n    }\n    function gameExportCurrent(previous, game) {\n      console.warn('Export Game', arguments);\n      fileExportService.cleanup(previous.url);\n      return {\n        name: 'clicknfeat_game.json',\n        url: fileExportService\n          .generate('json', game)\n      };\n    }\n    function gameSaveCurrent(state) {\n      return R.thread(state)(\n        R.unless(\n          R.pipe(\n            R.viewOr({}, GAME_LENS),\n            R.prop('local_stamp'),\n            R.isNil\n          ),\n          appGamesService.localUpdate$(R.__, state.game)\n        )\n      );\n    }\n    function actionGameSet(state, game) {\n      return R.thread(state)(\n        R.set(GAME_LENS, game),\n        gameSaveCurrent\n      );\n    }\n    function actionGameLoad(_state_, is_online, is_private, id) {\n      return waitForDataReady().then(() => {\n        return appActionService\n          .do('Game.load.dataReady', is_online, is_private, id);\n      });\n\n      function waitForDataReady() {\n        return R.allP([\n          appDataService.ready,\n          appUserService.ready,\n          appGamesService.ready\n        ]);\n      }\n    }\n    function actionGameLoadDataReady(state, is_online, is_private, id) {\n      return R.threadP()(\n        R.ifElse(\n          () => is_online,\n          () => gamesModel.loadOnlineGameP(is_private, id),\n          () => gamesModel.loadLocalGameP(id, state.local_games)\n        ),\n        (data) => appActionService\n          .do('Game.load.dataLoaded', data)\n      );\n    }\n    function actionGameLoadDataLoaded(state, data) {\n      loading.send(true);\n      R.threadP(data)(\n        gameModel.loadP,\n        (game) => appActionService\n          .do('Game.load.gameLoaded', game)\n      );\n      return R.thread(state)(\n        appModesService.reset,\n        gameSaveCurrent\n      );\n    }\n    function actionGameLoadGameLoaded(state, game) {\n      loading.send(false);\n      const user = R.view(USER_NAME_LENS, state);\n      return R.threadP(game)(\n        R.when(\n          gameModel.isOnline,\n          gameConnectionModel.openP$(user)\n        ),\n        (game) => appActionService\n          .do('Game.set', game)\n      );\n    }\n    function actionGameConnectionClose(state) {\n      return R.thread(state)(\n        R.over(GAME_LENS, gameConnectionModel.cleanup),\n        gameSaveCurrent\n      );\n    }\n    function actionGameCommandExecute(state, cmd, args) {\n      const user_name = R.view(USER_NAME_LENS, state);\n      return R.threadP(state.game)(\n        gameModel.executeCommandP$(cmd, args, user_name),\n        (game) => appActionService.do('Game.set', game)\n      ).catch(appErrorService.emit);\n    }\n    function actionGameCommandUndo(state, cmd) {\n      return R.threadP(state.game)(\n        gameModel.undoCommandP$(cmd),\n        (game) => appActionService.do('Game.set', game)\n      ).catch(appErrorService.emit);\n    }\n    function actionGameCommandUndoLast(state) {\n      return R.threadP(state.game)(\n        gameModel.undoLastCommandP,\n        (game) => appActionService.do('Game.set', game)\n      ).catch(appErrorService.emit);\n    }\n    function actionGameCommandReplay(state, cmd) {\n      return R.threadP(state.game)(\n        gameModel.replayCommandP$(cmd),\n        (game) => appActionService.do('Game.set', game)\n      ).catch(appErrorService.emit);\n    }\n    function actionGameCommandReplayNext(state) {\n      return R.threadP(state.game)(\n        gameModel.replayNextCommandP,\n        (game) => appActionService.do('Game.set', game)\n      ).catch(appErrorService.emit);\n    }\n    function actionGameViewScrollLeft() {\n      view.send('scrollLeft');\n    }\n    function actionGameViewScrollRight() {\n      view.send('scrollRight');\n    }\n    function actionGameViewScrollUp() {\n      view.send('scrollUp');\n    }\n    function actionGameViewScrollDown() {\n      view.send('scrollDown');\n    }\n    function actionGameViewZoomIn() {\n      view.send('zoomIn');\n    }\n    function actionGameViewZoomOut() {\n      view.send('zoomOut');\n    }\n    function actionGameViewZoomReset() {\n      view.send('zoomReset');\n    }\n    function actionGameViewFlipMap(state) {\n      return R.over(FLIP_MAP_LENS, R.not, state);\n    }\n    function actionGameViewMoveMap(state, set) {\n      return R.set(MOVE_MAP_LENS, set, state);\n    }\n    function actionGameViewToggleMenu() {\n      view.send('toggleMenu');\n    }\n    function actionGameViewEditDamageReset(state) {\n      return R.set(EDIT_DAMAGE_LENS, {}, state);\n    }\n    function actionGameViewEditLabel(state, new_label) {\n      const edit_label = R.view(EDIT_LABEL_LENS, state);\n      appActionService\n        .defer('Game.command.execute',\n               `on${s.capitalize(edit_label.type)}s`, [\n                 'addLabel',\n                 [new_label],\n                 [edit_label.element.state.stamp]\n               ]);\n      return R.set(EDIT_LABEL_LENS, {}, state);\n    }\n    function actionGameBoardSet(state, name) {\n      const board = gameBoardModel.forName(name, state.boards);\n      return appStateService\n        .onAction(state, [ 'Game.command.execute',\n                           'setBoard', [board] ]);\n    }\n    function actionGameBoardSetRandom(state) {\n      let board, name = gameBoardModel.name(state.game.board);\n      while(name === gameBoardModel.name(state.game.board)) {\n        board = state.boards[R.randomRange(0, state.boards.length-1)];\n        name = gameBoardModel.name(board);\n      }\n      return appStateService\n        .onAction(state, [ 'Game.command.execute',\n                           'setBoard', [board] ]);\n    }\n    function actionGameBoardImportFile(_state_, file) {\n      return R.threadP(file)(\n        fileImportService.readP$('json'),\n        (data) => appActionService\n          .do('Game.command.execute', 'setBoardData', [data])\n      ).catch(appErrorService.emit);\n    }\n    function gameBoardExport(previous, game) {\n      fileExportService.cleanup(previous.url);\n      const data = {\n        board: R.view(BOARD_LENS, game),\n        terrain: {\n          base: { x: 0, y: 0, r: 0 },\n          terrains: R.thread(game)(\n            R.viewOr(gameTerrainsModel.create(), TERRAINS_LENS),\n            gameTerrainsModel.copyAll\n          )\n        }\n      };\n      console.warn('Export board', arguments, data);\n      return {\n        name: 'clicknfeat_board.json',\n        url: fileExportService.generate('json', data)\n      };\n    }\n    function actionGameScenarioSet(state, name, group) {\n      const scenario = gameScenarioModel.forName(name, group);\n      return appStateService\n        .onAction(state, [ 'Game.command.execute',\n                           'setScenario', [scenario] ]);\n    }\n    function actionGameScenarioSetRandom(state) {\n      const group = gameScenarioModel.group('SR15', state.scenarios);\n      let scenario, name = gameScenarioModel.name(state.game.scenario);\n      while(name === gameScenarioModel.name(state.game.scenario)) {\n        scenario = group[1][R.randomRange(0, group[1].length-1)];\n        name = gameScenarioModel.name(scenario);\n      }\n      return appStateService\n        .onAction(state, [ 'Game.command.execute',\n                           'setScenario', [scenario] ]);\n    }\n    function actionGameScenarioGenerateObjectives(state) {\n      return appStateService.onAction(state, [\n        'Game.command.execute',\n        'createObjectives',\n        []\n      ]);\n    }\n    function actionGameModelCreate(state, model_path, repeat) {\n      return R.thread(state)(\n        R.set(CREATE_LENS, {\n          base: { x: 240, y: 240, r: 0 },\n          models: R.times((i) => ({\n            info: model_path,\n            x: 20*i, y: 0, r: 0\n          }), R.defaultTo(1, repeat))\n        }),\n        appStateService.onAction$(R.__, ['Modes.switchTo', 'CreateModel'])\n      );\n    }\n    function actionGameModelCopy(state, create) {\n      return R.thread(state)(\n        R.set(CREATE_LENS, create),\n        appStateService.onAction$(R.__, ['Modes.switchTo', 'CreateModel'])\n      );\n    }\n    function actionGameModelImportList(state, list) {\n      const user = R.viewOr('Unknown', USER_NAME_LENS, state);\n      return R.thread(state)(\n        R.set(\n          CREATE_LENS,\n          gameFactionsModel.buildModelsList(list, user, state.factions)\n        ),\n        appStateService.onAction$(R.__, ['Modes.switchTo', 'CreateModel'])\n      );\n    }\n    function actionGameModelImportFile(_state_, file) {\n      return R.threadP(file)(\n        fileImportService.readP$('json'),\n        (create) => appActionService\n          .do('Game.model.copy', create)\n      ).catch(appErrorService.emit);\n    }\n    function gameModelSelectionExport(previous, game) {\n      fileExportService.cleanup(previous.url);\n      const data = R.thread(game)(\n        R.view(MODEL_SELECTION_LENS),\n        gameModelSelectionModel.get$('local'),\n        R.ifElse(\n          R.isEmpty,\n          () => null,\n          gameModelsModel.copyStamps$(R.__, R.view(MODELS_LENS, game))\n        )\n      );\n      console.warn('Export models', arguments, data);\n      return {\n        name: 'clicknfeat_models.json',\n        url: data ? fileExportService.generate('json', data) : null\n      };\n    }\n    function actionGameTemplateCreate(state, type) {\n      return R.thread(state)(\n        R.set(CREATE_LENS, {\n          base: { x: 240, y: 240, r: 0 },\n          templates: [ { type: type, x: 0, y: 0, r: 0 } ]\n        }),\n        appStateService.onAction$(R.__, ['Modes.switchTo', 'CreateTemplate'])\n      );\n    }\n    function actionGameTemplatesSet(state, templates) {\n      return R.over(\n        GAME_LENS,\n        R.set(TEMPLATES_LENS, templates),\n        state);\n    }\n    function actionGameTemplatesSetDeviationMax(state, stamps, max) {\n      return R.threadP(state)(\n        R.viewOr({}, GAME_LENS),\n        R.viewOr({}, TEMPLATES_LENS),\n        gameTemplatesModel.onStampsP$('setMaxDeviation', [max], stamps),\n        (templates) => appActionService\n          .do('Game.templates.set', templates)\n      );\n    }\n    function actionGameTerrainCreate(state, path) {\n      return R.thread(state)(\n        R.set(CREATE_LENS, {\n          base: { x: 240, y: 240, r: 0 },\n          terrains: [ { info: path, x: 0, y: 0, r: 0 } ],\n          infos: state.terrains\n        }),\n        appStateService.onAction$(R.__, ['Modes.switchTo', 'CreateTerrain'])\n      );\n    }\n    function actionGameTerrainsSet(state, terrains) {\n      return R.over(\n        GAME_LENS,\n        R.set(TERRAINS_LENS, terrains),\n        state);\n    }\n    function actionGameTerrainsReset(state) {\n      return R.thread(state)(\n        R.view(GAME_LENS),\n        R.view(TERRAINS_LENS),\n        gameTerrainsModel.all,\n        R.pluck('state'),\n        R.pluck('stamp'),\n        (stamps) => appStateService\n          .onAction(state, [ 'Game.command.execute',\n                             'deleteTerrain', [stamps]\n                           ])\n      );\n    }\n    // function stateGameOnCommandReplayBatch(state, _event_, [cmds]) {\n    //   return R.threadP(state.game)(\n    //     gameModel.replayCommandsBatchP$(cmds),\n    //     (game) => appStateService.reduce('Game.set', game)\n    //   ).catch((error) => appStateService.emit('Game.error', error));\n    // }\n    // function stateGameOnSetCmds(state, _event_, [set]) {\n    //   return R.over(\n    //     GAME_LENS,\n    //     R.assoc(set.where, set.cmds),\n    //     state\n    //   );\n    // }\n    // function stateGameOnSetPlayers(state, _event_, [players]) {\n    //   return R.over(\n    //     GAME_LENS,\n    //     R.assoc('players', players),\n    //     state\n    //   );\n    // }\n    // function stateGameOnNewChatMsg(state, _event_, [msg]) {\n    //   return R.over(\n    //     GAME_LENS,\n    //     R.over(R.lensProp('chat'),\n    //            R.compose(R.append(msg.chat), R.defaultTo([]))),\n    //     state\n    //   );\n    // }\n    // function stateGameOnInvitePlayer(state, _event_, to) {\n    //   const msg = [\n    //     s.capitalize(R.pathOr('Unknown', ['user','state','name'], state)),\n    //     'has invited you to join a game'\n    //   ].join(' ');\n    //   const link = self.window.location.hash;\n    //   console.log('Invite player', to, msg, link);\n\n    //   appStateService\n    //     .chainReduce('User.sendChatMsg',\n    //                  { to: [to], msg: msg, link: link });\n    // }\n    // // function stateGameOnModelSelectionLocalChange(state, _event_) {\n    // //   // console.warn('onModelSelectionLocalChange', arguments);\n    // //   const local_model_selection = gameModelSelectionModel\n    // //           .get('local', state.game.model_selection);\n    // //   const length = R.length(local_model_selection);\n    // //   const previous_selection = R.path(['_model_selection_listener','stamp'], state);\n    // //   if(length === 1 &&\n    // //      local_model_selection[0] === previous_selection) {\n    // //     return;\n    // //   }\n    // //   cleanupModelSelectionListener(state);\n    // //   if(length === 1) {\n    // //     setupModelSelectionListener(local_model_selection[0], state);\n    // //   }\n    // //   else {\n    // //     appStateService.emit('Game.model.selection.local.updateSingle',\n    // //                             null, null);\n    // //   }\n    // // }\n    // // function setupModelSelectionListener(stamp, state) {\n    // //   // console.warn('setupModelSelectionListener', arguments);\n    // //   state._model_selection_listener = {\n    // //     stamp: stamp,\n    // //     unsubscribe: state\n    // //       .onChangeEvent(`Game.model.change.${stamp}`,\n    // //                      onModelSelectionChange(stamp, state))\n    // //   };\n    // // }\n    // // function onModelSelectionChange(stamp, state) {\n    // //   return () => {\n    // //     // console.warn('onModelSelectionChange', arguments);\n    // //     return R.threadP(state.game)(\n    // //       R.prop('models'),\n    // //       gameModelsModel.findStampP$(stamp),\n    // //       (model) => {\n    // //         appStateService.emit('Game.model.selection.local.updateSingle',\n    // //                                 stamp, model);\n    // //       }\n    // //     );\n    // //   };\n    // // }\n    // // function cleanupModelSelectionListener(state) {\n    // //   // console.warn('cleanupModelSelectionListener', arguments);\n    // //   const unsubscribe = R.thread(state)(\n    // //     R.path(['_model_selection_listener','unsubscribe']),\n    // //     R.defaultTo(() => {})\n    // //   );\n    // //   unsubscribe();\n    // //   state._model_selection_listener = {};\n    // // }\n    // // function stateGameOnTemplateSelectionLocalChange(state, _event_) {\n    // //   console.warn('onTemplateSelectionLocalChange', arguments);\n    // //   const local_template_selection = gameTemplateSelectionModel\n    // //           .get('local', state.game.template_selection);\n    // //   const length = R.length(local_template_selection);\n    // //   const previous_selection =\n    // //           R.path(['_template_selection_listener','stamp'], state);\n    // //   if(length === 1 &&\n    // //      local_template_selection[0] === previous_selection) {\n    // //     return;\n    // //   }\n    // //   cleanupTemplateSelectionListener(state);\n    // //   if(length === 1) {\n    // //     setupTemplateSelectionListener(local_template_selection[0], state);\n    // //   }\n    // //   else {\n    // //     appStateService.emit('Game.template.selection.local.updateSingle',\n    // //                             null, null);\n    // //   }\n    // // }\n    // // function setupTemplateSelectionListener(stamp, state) {\n    // //   console.warn('setupTemplateSelectionListener', arguments);\n    // //   state._template_selection_listener = {\n    // //     stamp: stamp,\n    // //     unsubscribe: state\n    // //       .onChangeEvent(`Game.template.change.${stamp}`,\n    // //                      onTemplateSelectionChange(stamp, state))\n    // //   };\n    // // }\n    // // function onTemplateSelectionChange(stamp, state) {\n    // //   return () => {\n    // //     console.warn('onTemplateSelectionChange', arguments);\n    // //     return R.threadP(state.game)(\n    // //       R.prop('templates'),\n    // //       gameTemplatesModel.findStampP$(stamp),\n    // //       (template) => {\n    // //         appStateService.emit('Game.template.selection.local.updateSingle',\n    // //                                 stamp, template);\n    // //       }\n    // //     );\n    // //   };\n    // // }\n    // // function cleanupTemplateSelectionListener(state) {\n    // //   console.warn('cleanupTemplateSelectionListener', arguments);\n    // //   const unsubscribe = R.thread(state)(\n    // //     R.path(['_template_selection_listener','unsubscribe']),\n    // //     R.defaultTo(() => {})\n    // //   );\n    // //   unsubscribe();\n    // //   state._template_selection_listener = {};\n    // // }\n    // // function stateGameOnScenarioRefresh(state, _event_) {\n    // //   appStateService.emit('Game.scenario.refresh');\n    // // }\n    function appGameCheckMode() {\n      const game = appGameService.game.sample();\n      const modes = appModesService.modes.sample();\n      const current_mode = modesModel.currentModeName(modes);\n      const mode = R.thread()(\n        () => gameTerrainSelectionModel\n          .checkMode(R.viewOr({}, TERRAIN_SELECTION_LENS, game)),\n        R.unless(\n          R.exists,\n          () => gameTemplateSelectionModel\n            .checkMode(R.viewOr({}, TEMPLATES_LENS, game),\n                       R.viewOr({}, TEMPLATE_SELECTION_LENS, game))\n        ),\n        R.unless(\n          R.exists,\n          () => gameModelSelectionModel\n            .checkMode(R.viewOr({}, MODELS_LENS, game),\n                       R.viewOr({}, MODEL_SELECTION_LENS, game))\n        ),\n        R.defaultTo('Default')\n      );\n      console.warn('CheckMode', mode);\n      if(R.exists(mode) &&\n         mode !== current_mode) {\n        appActionService.defer('Modes.switchTo', mode);\n      }\n    }\n    function observeModelsChanges(olds, news) {\n      return R.thread(gameModelsModel.all(news))(\n        R.symmetricDifference(gameModelsModel.all(olds)),\n        R.map(R.path(['state','stamp'])),\n        R.uniq\n      );\n    }\n    function observeModelSelectionChanges(old, sel) {\n      return R.concat(\n        R.symmetricDifference(R.propOr([], 'local', old), R.propOr([], 'local', sel)),\n        R.symmetricDifference(R.propOr([], 'remote', old), R.propOr([], 'remote', sel)),\n        R.uniq\n      );\n    }\n    function observeTemplatesChanges(olds, news) {\n      return R.thread(gameTemplatesModel.all(news))(\n        R.symmetricDifference(gameTemplatesModel.all(olds)),\n        R.map(R.path(['state','stamp'])),\n        R.uniq\n      );\n    }\n    function observeTerrainsChanges(olds, news) {\n      return R.thread(gameTerrainsModel.all(news))(\n        R.symmetricDifference(gameTerrainsModel.all(olds)),\n        R.map(R.path(['state','stamp'])),\n        R.uniq\n      );\n    }\n  }\n})();\n"]}