{"version":3,"sources":["game.es6"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('appGame', stateGameModelFactory);\n\n  stateGameModelFactory.$inject = [\n    'behaviours',\n    'appAction',\n    'appData',\n    'appError',\n    'appGames',\n    'appModes',\n    'appState',\n    'appUser',\n    'fileImport',\n    'fileExport',\n    'game',\n    'gameBoard',\n    'gameConnection',\n    'gameScenario',\n    'gameTemplates',\n    'gameTemplateSelection',\n    'gameTerrains',\n    'gameTerrainSelection',\n    'games',\n    'modes',\n    // 'appState',\n    // 'state',\n    // 'gameFactions',\n    // 'gameModels',\n    // 'gameModelSelection',\n    // 'allCommands',\n    'allTemplates',\n  ];\n  function stateGameModelFactory(behavioursModel,\n                                 appActionService,\n                                 appDataService,\n                                 appErrorService,\n                                 appGamesService,\n                                 appModesService,\n                                 appStateService,\n                                 appUserService,\n                                 fileImportService,\n                                 fileExportService,\n                                 gameModel,\n                                 gameBoardModel,\n                                 gameConnectionModel,\n                                 gameScenarioModel,\n                                 gameTemplatesModel,\n                                 gameTemplateSelectionModel,\n                                 gameTerrainsModel,\n                                 gameTerrainSelectionModel,\n                                 gamesModel,\n                                 modesModel\n                                 // appStateService,\n                                 // stateModel,\n                                 // gameFactionsModel,\n                                 // gameModelsModel,\n                                 // gameModelSelectionModel\n  ) {\n    const GAME_LENS = R.lensProp('game');\n    const USER_NAME_LENS = R.lensPath(['user','state','name']);\n    const CREATE_LENS = R.lensProp('create');\n    const FLIP_MAP_LENS = R.lensPath(['view','flip_map']);\n    const MOVE_MAP_LENS = R.lensPath(['view','move_map']);\n    const DETAIL_LENS = R.lensPath(['view','detail']);\n    const EDIT_LABEL_LENS = R.lensPath(['view','edit_label']);\n    const TEMPLATES_LENS = R.lensProp('templates');\n    const TEMPLATE_SELECTION_LENS = R.lensProp('template_selection');\n    const TERRAINS_LENS = R.lensProp('terrains');\n    const TERRAIN_SELECTION_LENS = R.lensProp('terrain_selection');\n    const BOARD_LENS = R.lensProp('board');\n\n    const game = appStateService.state\n            .map(R.viewOr({}, GAME_LENS));\n    const game_export = game\n            .changes()\n            .snapshot(gameExportCurrent, () => game_export_previous)\n            .hold({});\n    const game_export_previous = game_export.delay({});\n    const loading = behavioursModel.signalModel.create();\n    const create = appStateService.state\n            .map(R.view(CREATE_LENS));\n\n    const view = behavioursModel.signalModel.create();\n    const scroll_left = view.filter(R.equals('scrollLeft'));\n    const scroll_right = view.filter(R.equals('scrollRight'));\n    const scroll_up = view.filter(R.equals('scrollUp'));\n    const scroll_down = view.filter(R.equals('scrollDown'));\n    const zoom_in = view.filter(R.equals('zoomIn'));\n    const zoom_out = view.filter(R.equals('zoomOut'));\n    const zoom_reset = view.filter(R.equals('zoomReset'));\n    const toggle_menu = view.filter(R.equals('toggleMenu'));\n    const move_map = appStateService.state\n            .map(R.viewOr(false, MOVE_MAP_LENS)).changes();\n    const flip_map = appStateService.state\n            .map(R.viewOr(false, FLIP_MAP_LENS)).changes();\n    const detail = appStateService.state\n            .map(R.viewOr(null, DETAIL_LENS));\n    const edit_label = appStateService.state\n            .map(R.viewOr(null, EDIT_LABEL_LENS));\n\n    const templates = game\n            .map(R.viewOr(gameTemplatesModel.create(), TEMPLATES_LENS));\n    const previous_templates = templates.delay();\n    const template_selection = game\n            .map(R.viewOr(gameTemplateSelectionModel.create(),\n                          TEMPLATE_SELECTION_LENS));\n\n    const templates_force_changes = behavioursModel.signalModel.create();\n    const templates_changes = templates\n            .changes()\n            .snapshot(observeTemplatesChanges, previous_templates)\n            .orElse(templates_force_changes)\n            .snapshot((templates, stamps) => [templates, stamps], templates)\n            .filter(([_templates_, stamps]) => !R.isEmpty(stamps));\n    const template_selection_changes = template_selection\n            .changes();\n    const templates_flip_map = flip_map\n            .snapshot(R.nthArg(0), templates);\n\n    const terrains = game\n            .map(R.viewOr(gameTerrainsModel.create(), TERRAINS_LENS));\n    const previous_terrains = terrains.delay();\n    const terrain_selection = game\n            .map(R.viewOr(gameTerrainSelectionModel.create(),\n                          TERRAIN_SELECTION_LENS));\n\n    const terrains_force_changes = behavioursModel.signalModel.create();\n    const terrains_changes = terrains\n            .changes()\n            .snapshot(observeTerrainsChanges, previous_terrains)\n            .orElse(terrains_force_changes)\n            .snapshot((terrains, stamps) => [terrains, stamps], terrains)\n            .filter(([_terrains_, stamps]) => !R.isEmpty(stamps));\n    const terrain_selection_changes = terrain_selection\n            .changes();\n\n    template_selection_changes\n      .orElse(terrain_selection_changes)\n      .listen(appGameCheckMode);\n\n    const board_export = game\n            .map(R.viewOr({}, BOARD_LENS))\n            .changes()\n            .orElse(terrains.changes())\n            .snapshot(R.nthArg(0), game)\n            .snapshot(gameBoardExport, () => board_export_previous)\n            .hold({});\n    const board_export_previous = board_export.delay({});\n\n    const appGameService = {\n      game, create, loading,\n      export: { board: board_export,\n                game: game_export\n              },\n      view: { scroll_left, scroll_right, scroll_up, scroll_down,\n              zoom_in, zoom_out, zoom_reset,\n              detail, edit_label, flip_map, move_map, toggle_menu\n            },\n      templates: { templates,\n                   changes: templates_changes,\n                   force_changes: templates_force_changes,\n                   flip_map: templates_flip_map,\n                   selection: template_selection,\n                   selection_changes: template_selection_changes\n                 },\n      terrains: { terrains,\n                  changes: terrains_changes,\n                  force_changes: terrains_force_changes,\n                  selection: terrain_selection,\n                  selection_changes: terrain_selection_changes\n                },\n      saveCurrent: gameSaveCurrent,\n      exportCurrent: gameExportCurrent,\n      set: actionGameSet,\n      load: actionGameLoad,\n      loadDataReady: actionGameLoadDataReady,\n      loadDataLoaded: actionGameLoadDataLoaded,\n      loadGameLoaded: actionGameLoadGameLoaded,\n      connectionClose: actionGameConnectionClose,\n      commandExecute: actionGameCommandExecute,\n      commandUndo: actionGameCommandUndo,\n      commandUndoLast: actionGameCommandUndoLast,\n      commandReplay: actionGameCommandReplay,\n      commandReplayNext: actionGameCommandReplayNext,\n      viewScrollLeft: actionGameViewScrollLeft,\n      viewScrollRight: actionGameViewScrollRight,\n      viewScrollUp: actionGameViewScrollUp,\n      viewScrollDown: actionGameViewScrollDown,\n      viewZoomIn: actionGameViewZoomIn,\n      viewZoomOut: actionGameViewZoomOut,\n      viewZoomReset: actionGameViewZoomReset,\n      viewFlipMap: actionGameViewFlipMap,\n      viewMoveMap: actionGameViewMoveMap,\n      viewToggleMenu: actionGameViewToggleMenu,\n      viewEditLabel: actionGameViewEditLabel,\n      boardSet: actionGameBoardSet,\n      boardSetRandom: actionGameBoardSetRandom,\n      boardImportFile: actionGameBoardImportFile,\n      boardExport: gameBoardExport,\n      scenarioSet: actionGameScenarioSet,\n      scenarioSetRandom: actionGameScenarioSetRandom,\n      templateCreate: actionGameTemplateCreate,\n      templatesSet: actionGameTemplatesSet,\n      templatesSetDeviationMax: actionGameTemplatesSetDeviationMax,\n      terrainCreate: actionGameTerrainCreate,\n      terrainsSet: actionGameTerrainsSet,\n      terrainsReset: actionGameTerrainsReset,\n      // onCommandReplayBatch: stateGameOnCommandReplayBatch,\n      // onSetCmds: stateGameOnSetCmds,\n      // onSetPlayers: stateGameOnSetPlayers,\n      // onNewChatMsg: stateGameOnNewChatMsg,\n      // onUiStateFlip: stateGameOnUiStateFlip,\n      // onInvitePlayer: stateGameOnInvitePlayer,\n      // onModelCreate: stateGameOnModelCreate,\n      // onModelCopy: stateGameOnModelCopy,\n      // onModelImportList: stateGameOnModelImportList,\n      // onModelImportFile: stateGameOnModelImportFile,\n      // onModelImportFileData: stateGameOnModelImportFileData,\n      // onScenarioRefresh: stateGameOnScenarioRefresh,\n      // onScenarioGenerateObjectives: stateGameOnScenarioGenerateObjectives,\n      // updateExport: stateGameUpdateExport,\n      // updateBoardExport: stateGameUpdateBoardExport,\n      // updateModelsExport: stateGameUpdateModelsExport,\n      // checkMode: stateGameCheckMode,\n      // closeOsd: stateGameCloseOsd\n      checkMode: appGameCheckMode,\n    };\n    R.curryService(appGameService);\n\n    mount();\n\n    return appGameService;\n\n    function mount() {\n      appActionService\n        // .register('Game.update'              , actionGameUpdate)\n        .register('Game.set'                , actionGameSet)\n        .register('Game.load'               , actionGameLoad)\n        .register('Game.load.dataReady'     , actionGameLoadDataReady)\n        .register('Game.load.dataLoaded'    , actionGameLoadDataLoaded)\n        .register('Game.load.gameLoaded'    , actionGameLoadGameLoaded)\n        .register('Game.connection.close'   , actionGameConnectionClose)\n        .register('Game.command.execute'    , actionGameCommandExecute)\n        .register('Game.command.undo'       , actionGameCommandUndo)\n        .register('Game.command.replay'     , actionGameCommandReplay)\n        .register('Game.command.undoLast'   , actionGameCommandUndoLast)\n        .register('Game.command.replayNext' , actionGameCommandReplayNext)\n        .register('Game.view.scrollLeft'    , actionGameViewScrollLeft)\n        .register('Game.view.scrollRight'   , actionGameViewScrollRight)\n        .register('Game.view.scrollUp'      , actionGameViewScrollUp)\n        .register('Game.view.scrollDown'    , actionGameViewScrollDown)\n        .register('Game.view.zoomIn'        , actionGameViewZoomIn)\n        .register('Game.view.zoomOut'       , actionGameViewZoomOut)\n        .register('Game.view.zoomReset'     , actionGameViewZoomReset)\n        .register('Game.view.flipMap'       , actionGameViewFlipMap)\n        .register('Game.view.moveMap'       , actionGameViewMoveMap)\n        .register('Game.view.toggleMenu'    , actionGameViewToggleMenu)\n        .register('Game.view.editLabel'     , actionGameViewEditLabel)\n        .register('Game.board.set'          , actionGameBoardSet)\n        .register('Game.board.setRandom'    , actionGameBoardSetRandom)\n        .register('Game.board.importFile'   , actionGameBoardImportFile)\n        .register('Game.scenario.set'       , actionGameScenarioSet)\n        .register('Game.scenario.setRandom' , actionGameScenarioSetRandom)\n        .register('Game.template.create'    , actionGameTemplateCreate)\n        .register('Game.templates.set'      , actionGameTemplatesSet)\n        .register('Game.templates.setDeviationMax',\n                  actionGameTemplatesSetDeviationMax)\n        .register('Game.terrain.create'     , actionGameTerrainCreate)\n        .register('Game.terrains.set'       , actionGameTerrainsSet)\n        .register('Game.terrains.reset'     , actionGameTerrainsReset)\n        // .register('Game.command.replayBatch' , actionGameCommandReplayBatch)\n        // .register('Game.invitePlayer'        , actionGameInvitePlayer)\n        // .register('Game.setCmds'             , actionGameSetCmds)\n        // .register('Game.setPlayers'          , actionGameSetPlayers)\n        // .register('Game.newChatMsg'          , actionGameNewChatMsg)\n        // .register('Game.uiState.flip'        , actionGameUiStateFlip)\n        // .register('Game.scenario.generateObjectives',\n        //             actionGameScenarioGenerateObjectives)\n        // .register('Game.model.create'        , actionGameModelCreate)\n        // .register('Game.model.copy'          , actionGameModelCopy)\n        // .register('Game.model.importList'    , actionGameModelImportList)\n        // .register('Game.model.importFile'    , actionGameModelImportFile)\n        // .register('Game.model.importFileData', actionGameModelImportFileData)\n      ;\n        // .addListener('Game.change'             , stateGameModel.saveCurrent)\n        // .addListener('Modes.change',\n        //              stateGameModel.closeOsd)\n        // .addListener('Game.template_selection.local.change',\n        //              stateGameModel.checkMode)\n        // .addListener('Game.terrain_selection.local.change',\n        //              stateGameModel.checkMode)\n        // .addListener('Game.model_selection.local.change',\n        //              stateGameModel.checkMode);\n        // .addReducer('Game.scenario.refresh'    , stateGameModel.onScenarioRefresh)\n\n      // const game_export_cell = appStateService\n      //         .cell('Game.change',\n      //               stateGameModel.updateExport,\n      //               {});\n      // const board_export_cell = appStateService\n      //         .cell([ 'Game.board.change',\n      //                 'Game.terrains.change' ],\n      //               stateGameModel.updateBoardExport,\n      //               {});\n      // const models_export_cell = appStateService\n      //         .cell([ 'Game.models.change',\n      //                 'Game.model_selection.local.change' ],\n      //               stateGameModel.updateModelsExport,\n      //               {});\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.layers.change',\n      //             R.pipe(R.defaultTo({}), R.prop('layers')));\n      // appStateService\n      //   .onChange('AppState.change',\n      //             'Modes.change',\n      //             R.path(['modes','current','name']));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.command.change',\n      //             [ R.prop('commands'),\n      //               R.prop('commands_log'),\n      //               R.prop('undo'),\n      //               R.prop('undo_log')\n      //             ]);\n      // appStateService\n      //   .onChange('AppState.change',\n      //             'Game.view.flipMap',\n      //             R.pipe(R.view(UI_STATE_LENS), R.prop('flipped')));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.dice.change',\n      //             R.prop('dice'));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.board.change',\n      //             R.prop('board'));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.scenario.change',\n      //             R.prop('scenario'));\n      // appStateService\n      //   .onChange('AppState.change',\n      //             'Create.base.change',\n      //             R.path(['create','base']));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.models.change',\n      //             R.prop(['models']));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.model_selection.change',\n      //             R.prop('model_selection'));\n      // appStateService\n      //   .onChange('Game.model_selection.change',\n      //             'Game.model_selection.local.change',\n      //             R.prop('local'));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.templates.change',\n      //             R.prop(['templates']));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.template_selection.change',\n      //             R.prop('template_selection'));\n      // appStateService\n      //   .onChange('Game.template_selection.change',\n      //             'Game.template_selection.local.change',\n      //             R.prop('local'));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.terrains.change',\n      //             R.prop(['terrains']));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.terrain_selection.change',\n      //             R.prop('terrain_selection'));\n      // appStateService\n      //   .onChange('Game.terrain_selection.change',\n      //             'Game.terrain_selection.local.change',\n      //             R.prop('local'));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.ruler.remote.change',\n      //             R.path(['ruler','remote']));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.ruler.local.change',\n      //             R.path(['ruler','local']));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.los.remote.change',\n      //             R.path(['los','remote']));\n      // appStateService\n      //   .onChange('Game.change',\n      //             'Game.los.local.change',\n      //             R.path(['los','local']));\n    }\n    function gameExportCurrent(previous, game) {\n      console.warn('Export Game', arguments);\n      fileExportService.cleanup(previous.url);\n      return {\n        name: 'clicknfeat_game.json',\n        url: fileExportService\n          .generate('json', game)\n      };\n    }\n    function gameSaveCurrent(state) {\n      return R.thread(state)(\n        R.unless(\n          R.pipe(\n            R.viewOr({}, GAME_LENS),\n            R.prop('local_stamp'),\n            R.isNil\n          ),\n          appGamesService.localUpdate$(R.__, state.game)\n        )\n      );\n    }\n    function actionGameSet(state, game) {\n      return R.thread(state)(\n        R.set(GAME_LENS, game),\n        gameSaveCurrent\n      );\n    }\n    function actionGameLoad(_state_, is_online, is_private, id) {\n      return waitForDataReady().then(() => {\n        return appActionService\n          .do('Game.load.dataReady', is_online, is_private, id);\n      });\n\n      function waitForDataReady() {\n        return R.allP([\n          appDataService.ready,\n          appUserService.ready,\n          appGamesService.ready\n        ]);\n      }\n    }\n    function actionGameLoadDataReady(state, is_online, is_private, id) {\n      return R.threadP()(\n        R.ifElse(\n          () => is_online,\n          () => gamesModel.loadOnlineGameP(is_private, id),\n          () => gamesModel.loadLocalGameP(id, state.local_games)\n        ),\n        (data) => appActionService\n          .do('Game.load.dataLoaded', data)\n      );\n    }\n    function actionGameLoadDataLoaded(state, data) {\n      loading.send(true);\n      R.threadP(data)(\n        gameModel.loadP,\n        (game) => appActionService\n          .do('Game.load.gameLoaded', game)\n      );\n      return R.thread(state)(\n        appModesService.reset,\n        gameSaveCurrent\n      );\n    }\n    function actionGameLoadGameLoaded(state, game) {\n      loading.send(false);\n      const user = R.view(USER_NAME_LENS, state);\n      return R.threadP(game)(\n        R.when(\n          gameModel.isOnline,\n          gameConnectionModel.openP$(user)\n        ),\n        (game) => appActionService\n          .do('Game.set', game)\n      );\n    }\n    function actionGameConnectionClose(state) {\n      return R.thread(state)(\n        R.over(GAME_LENS, gameConnectionModel.cleanup),\n        gameSaveCurrent\n      );\n    }\n    function actionGameCommandExecute(state, cmd, args) {\n      const user_name = R.view(USER_NAME_LENS, state);\n      return R.threadP(state.game)(\n        gameModel.executeCommandP$(cmd, args, user_name),\n        (game) => appActionService.do('Game.set', game)\n      ).catch(appErrorService.emit);\n    }\n    function actionGameCommandUndo(state, cmd) {\n      return R.threadP(state.game)(\n        gameModel.undoCommandP$(cmd),\n        (game) => appActionService.do('Game.set', game)\n      ).catch(appErrorService.emit);\n    }\n    function actionGameCommandUndoLast(state) {\n      return R.threadP(state.game)(\n        gameModel.undoLastCommandP,\n        (game) => appActionService.do('Game.set', game)\n      ).catch(appErrorService.emit);\n    }\n    function actionGameCommandReplay(state, cmd) {\n      return R.threadP(state.game)(\n        gameModel.replayCommandP$(cmd),\n        (game) => appActionService.do('Game.set', game)\n      ).catch(appErrorService.emit);\n    }\n    function actionGameCommandReplayNext(state) {\n      return R.threadP(state.game)(\n        gameModel.replayNextCommandP,\n        (game) => appActionService.do('Game.set', game)\n      ).catch(appErrorService.emit);\n    }\n    function actionGameViewScrollLeft() {\n      view.send('scrollLeft');\n    }\n    function actionGameViewScrollRight() {\n      view.send('scrollRight');\n    }\n    function actionGameViewScrollUp() {\n      view.send('scrollUp');\n    }\n    function actionGameViewScrollDown() {\n      view.send('scrollDown');\n    }\n    function actionGameViewZoomIn() {\n      view.send('zoomIn');\n    }\n    function actionGameViewZoomOut() {\n      view.send('zoomOut');\n    }\n    function actionGameViewZoomReset() {\n      view.send('zoomReset');\n    }\n    function actionGameViewFlipMap(state) {\n      return R.over(FLIP_MAP_LENS, R.not, state);\n    }\n    function actionGameViewMoveMap(state, set) {\n      return R.set(MOVE_MAP_LENS, set, state);\n    }\n    function actionGameViewToggleMenu() {\n      view.send('toggleMenu');\n    }\n    function actionGameViewEditLabel(state, new_label) {\n      const edit_label = R.view(EDIT_LABEL_LENS, state);\n      appActionService\n        .defer('Game.command.execute',\n               `on${s.capitalize(edit_label.type)}s`, [\n                 'addLabel',\n                 [new_label],\n                 [edit_label.element.state.stamp]\n               ]);\n      return R.set(EDIT_LABEL_LENS, null, state);\n    }\n    function actionGameBoardSet(state, name) {\n      const board = gameBoardModel.forName(name, state.boards);\n      return appStateService\n        .onAction(state, [ 'Game.command.execute',\n                           'setBoard', [board] ]);\n    }\n    function actionGameBoardSetRandom(state) {\n      let board, name = gameBoardModel.name(state.game.board);\n      while(name === gameBoardModel.name(state.game.board)) {\n        board = state.boards[R.randomRange(0, state.boards.length-1)];\n        name = gameBoardModel.name(board);\n      }\n      return appStateService\n        .onAction(state, [ 'Game.command.execute',\n                           'setBoard', [board] ]);\n    }\n    function actionGameBoardImportFile(_state_, file) {\n      return R.threadP(file)(\n        fileImportService.readP$('json'),\n        (data) => appActionService\n          .do('Game.command.execute', 'setBoardData', [data])\n      ).catch(appErrorService.emit);\n    }\n    function gameBoardExport(previous, game) {\n      fileExportService.cleanup(previous.url);\n      const data = {\n        board: R.view(BOARD_LENS, game),\n        terrain: {\n          base: { x: 0, y: 0, r: 0 },\n          terrains: R.thread(game)(\n            R.viewOr(gameTerrainsModel.create(), TERRAINS_LENS),\n            gameTerrainsModel.copyAll\n          )\n        }\n      };\n      console.warn('Export board', arguments, data);\n      return {\n        name: 'clicknfeat_board.json',\n        url: fileExportService.generate('json', data)\n      };\n    }\n    function actionGameScenarioSet(state, name, group) {\n      const scenario = gameScenarioModel.forName(name, group);\n      return appStateService\n        .onAction(state, [ 'Game.command.execute',\n                           'setScenario', [scenario] ]);\n    }\n    function actionGameScenarioSetRandom(state) {\n      const group = gameScenarioModel.group('SR15', state.scenarios);\n      let scenario, name = gameScenarioModel.name(state.game.scenario);\n      while(name === gameScenarioModel.name(state.game.scenario)) {\n        scenario = group[1][R.randomRange(0, group[1].length-1)];\n        name = gameScenarioModel.name(scenario);\n      }\n      return appStateService\n        .onAction(state, [ 'Game.command.execute',\n                           'setScenario', [scenario] ]);\n    }\n    function actionGameTemplateCreate(state, type) {\n      return R.thread(state)(\n        R.set(CREATE_LENS, {\n          base: { x: 240, y: 240, r: 0 },\n          templates: [ { type: type, x: 0, y: 0, r: 0 } ]\n        }),\n        appStateService.onAction$(R.__, ['Modes.switchTo', 'CreateTemplate'])\n      );\n    }\n    function actionGameTemplatesSet(state, templates) {\n      return R.over(\n        GAME_LENS,\n        R.set(TEMPLATES_LENS, templates),\n        state);\n    }\n    function actionGameTemplatesSetDeviationMax(state, stamps, max) {\n      return R.threadP(state)(\n        R.viewOr({}, GAME_LENS),\n        R.viewOr({}, TEMPLATES_LENS),\n        gameTemplatesModel.onStampsP$('setMaxDeviation', [max], stamps),\n        (templates) => appActionService\n          .do('Game.templates.set', templates)\n      );\n    }\n    function actionGameTerrainCreate(state, path) {\n      return R.thread(state)(\n        R.set(CREATE_LENS, {\n          base: { x: 240, y: 240, r: 0 },\n          terrains: [ { info: path, x: 0, y: 0, r: 0 } ],\n          infos: state.terrains\n        }),\n        appStateService.onAction$(R.__, ['Modes.switchTo', 'CreateTerrain'])\n      );\n    }\n    function actionGameTerrainsSet(state, terrains) {\n      return R.over(\n        GAME_LENS,\n        R.set(TERRAINS_LENS, terrains),\n        state);\n    }\n    function actionGameTerrainsReset(state) {\n      return R.thread(state)(\n        R.view(GAME_LENS),\n        R.view(TERRAINS_LENS),\n        gameTerrainsModel.all,\n        R.pluck('state'),\n        R.pluck('stamp'),\n        (stamps) => appStateService\n          .onAction(state, [ 'Game.command.execute',\n                             'deleteTerrain', [stamps]\n                           ])\n      );\n    }\n    // function stateGameOnCommandReplayBatch(state, _event_, [cmds]) {\n    //   return R.threadP(state.game)(\n    //     gameModel.replayCommandsBatchP$(cmds),\n    //     (game) => appStateService.reduce('Game.set', game)\n    //   ).catch((error) => appStateService.emit('Game.error', error));\n    // }\n    // function stateGameOnSetCmds(state, _event_, [set]) {\n    //   return R.over(\n    //     GAME_LENS,\n    //     R.assoc(set.where, set.cmds),\n    //     state\n    //   );\n    // }\n    // function stateGameOnSetPlayers(state, _event_, [players]) {\n    //   return R.over(\n    //     GAME_LENS,\n    //     R.assoc('players', players),\n    //     state\n    //   );\n    // }\n    // function stateGameOnNewChatMsg(state, _event_, [msg]) {\n    //   return R.over(\n    //     GAME_LENS,\n    //     R.over(R.lensProp('chat'),\n    //            R.compose(R.append(msg.chat), R.defaultTo([]))),\n    //     state\n    //   );\n    // }\n    // function stateGameOnUiStateFlip(state) {\n    //   return R.over(\n    //     UI_STATE_LENS,\n    //     R.over(R.lensProp('flipped'), R.not),\n    //     state\n    //   );\n    // }\n    // function stateGameOnInvitePlayer(state, _event_, to) {\n    //   const msg = [\n    //     s.capitalize(R.pathOr('Unknown', ['user','state','name'], state)),\n    //     'has invited you to join a game'\n    //   ].join(' ');\n    //   const link = self.window.location.hash;\n    //   console.log('Invite player', to, msg, link);\n\n    //   appStateService\n    //     .chainReduce('User.sendChatMsg',\n    //                  { to: [to], msg: msg, link: link });\n    // }\n    // function stateGameOnModelCreate(state, _event_, [model_path, repeat]) {\n    //   appStateService.chainReduce('Modes.switchTo', 'CreateModel');\n    //   return R.assoc('create', {\n    //     base: { x: 240, y: 240, r: 0 },\n    //     models: R.times((i) => ({\n    //       info: model_path,\n    //       x: 20*i, y: 0, r: 0\n    //     }), R.defaultTo(1, repeat))\n    //   }, state);\n    // }\n    // function stateGameOnModelCopy(state, _event_, [create]) {\n    //   appStateService.chainReduce('Modes.switchTo', 'CreateModel');\n    //   return R.assoc('create', create, state);\n    // }\n    // function stateGameOnModelImportList(state, _event_, [list]) {\n    //   const user = R.pathOr('Unknown', ['user','state','name'], state);\n    //   appStateService.chainReduce('Modes.switchTo', 'CreateModel');\n    //   return R.assoc(\n    //     'create',\n    //     gameFactionsModel.buildModelsList(list, user, state.factions.references),\n    //     state\n    //   );\n    // }\n    // function stateGameOnModelImportFile(_state_, _event_, [file]) {\n    //   return R.threadP(file)(\n    //     fileImportService.readP$('json'),\n    //     (create) => {\n    //       appStateService.reduce('Game.model.importFileData', create);\n    //     }\n    //   ).catch(error => appStateService.emit('Game.error', error));\n    // }\n    // function stateGameOnModelImportFileData(state, _event_, [create]) {\n    //   appStateService.chainReduce('Modes.switchTo', 'CreateModel');\n    //   return R.assoc('create', create, state);\n    // }\n    // // function stateGameOnModelSelectionLocalChange(state, _event_) {\n    // //   // console.warn('onModelSelectionLocalChange', arguments);\n    // //   const local_model_selection = gameModelSelectionModel\n    // //           .get('local', state.game.model_selection);\n    // //   const length = R.length(local_model_selection);\n    // //   const previous_selection = R.path(['_model_selection_listener','stamp'], state);\n    // //   if(length === 1 &&\n    // //      local_model_selection[0] === previous_selection) {\n    // //     return;\n    // //   }\n    // //   cleanupModelSelectionListener(state);\n    // //   if(length === 1) {\n    // //     setupModelSelectionListener(local_model_selection[0], state);\n    // //   }\n    // //   else {\n    // //     appStateService.emit('Game.model.selection.local.updateSingle',\n    // //                             null, null);\n    // //   }\n    // // }\n    // // function setupModelSelectionListener(stamp, state) {\n    // //   // console.warn('setupModelSelectionListener', arguments);\n    // //   state._model_selection_listener = {\n    // //     stamp: stamp,\n    // //     unsubscribe: state\n    // //       .onChangeEvent(`Game.model.change.${stamp}`,\n    // //                      onModelSelectionChange(stamp, state))\n    // //   };\n    // // }\n    // // function onModelSelectionChange(stamp, state) {\n    // //   return () => {\n    // //     // console.warn('onModelSelectionChange', arguments);\n    // //     return R.threadP(state.game)(\n    // //       R.prop('models'),\n    // //       gameModelsModel.findStampP$(stamp),\n    // //       (model) => {\n    // //         appStateService.emit('Game.model.selection.local.updateSingle',\n    // //                                 stamp, model);\n    // //       }\n    // //     );\n    // //   };\n    // // }\n    // // function cleanupModelSelectionListener(state) {\n    // //   // console.warn('cleanupModelSelectionListener', arguments);\n    // //   const unsubscribe = R.thread(state)(\n    // //     R.path(['_model_selection_listener','unsubscribe']),\n    // //     R.defaultTo(() => {})\n    // //   );\n    // //   unsubscribe();\n    // //   state._model_selection_listener = {};\n    // // }\n    // // function stateGameOnTemplateSelectionLocalChange(state, _event_) {\n    // //   console.warn('onTemplateSelectionLocalChange', arguments);\n    // //   const local_template_selection = gameTemplateSelectionModel\n    // //           .get('local', state.game.template_selection);\n    // //   const length = R.length(local_template_selection);\n    // //   const previous_selection =\n    // //           R.path(['_template_selection_listener','stamp'], state);\n    // //   if(length === 1 &&\n    // //      local_template_selection[0] === previous_selection) {\n    // //     return;\n    // //   }\n    // //   cleanupTemplateSelectionListener(state);\n    // //   if(length === 1) {\n    // //     setupTemplateSelectionListener(local_template_selection[0], state);\n    // //   }\n    // //   else {\n    // //     appStateService.emit('Game.template.selection.local.updateSingle',\n    // //                             null, null);\n    // //   }\n    // // }\n    // // function setupTemplateSelectionListener(stamp, state) {\n    // //   console.warn('setupTemplateSelectionListener', arguments);\n    // //   state._template_selection_listener = {\n    // //     stamp: stamp,\n    // //     unsubscribe: state\n    // //       .onChangeEvent(`Game.template.change.${stamp}`,\n    // //                      onTemplateSelectionChange(stamp, state))\n    // //   };\n    // // }\n    // // function onTemplateSelectionChange(stamp, state) {\n    // //   return () => {\n    // //     console.warn('onTemplateSelectionChange', arguments);\n    // //     return R.threadP(state.game)(\n    // //       R.prop('templates'),\n    // //       gameTemplatesModel.findStampP$(stamp),\n    // //       (template) => {\n    // //         appStateService.emit('Game.template.selection.local.updateSingle',\n    // //                                 stamp, template);\n    // //       }\n    // //     );\n    // //   };\n    // // }\n    // // function cleanupTemplateSelectionListener(state) {\n    // //   console.warn('cleanupTemplateSelectionListener', arguments);\n    // //   const unsubscribe = R.thread(state)(\n    // //     R.path(['_template_selection_listener','unsubscribe']),\n    // //     R.defaultTo(() => {})\n    // //   );\n    // //   unsubscribe();\n    // //   state._template_selection_listener = {};\n    // // }\n    // // function stateGameOnScenarioRefresh(state, _event_) {\n    // //   appStateService.emit('Game.scenario.refresh');\n    // // }\n    // function stateGameOnScenarioGenerateObjectives(state, _event_) {\n    //   R.thread(state.game)(\n    //     deleteCurrentObjectives,\n    //     () => gameScenarioModel\n    //       .createObjectives(state.game.scenario),\n    //     (objectives) => {\n    //       const is_flipped = R.path(['ui_state','flip_map'], state);\n    //       return appStateService\n    //         .chainReduce('Game.command.execute',\n    //                      'createModel',\n    //                      [objectives, is_flipped]);\n    //     }\n    //   ).catch(gameModel.actionError$(state));\n\n    //   function deleteCurrentObjectives(game) {\n    //     return R.threadP(game)(\n    //       R.prop('models'),\n    //       gameModelsModel.all,\n    //       R.filter(R.pipe(\n    //         R.path(['state','info']),\n    //         R.head,\n    //         R.equals('scenario')\n    //       )),\n    //       R.map(R.path(['state','stamp'])),\n    //       R.unless(\n    //         R.isEmpty,\n    //         (stamps) => {\n    //           appStateService\n    //             .chainReduce('Game.command.execute',\n    //                          'deleteModel', [stamps]);\n    //         }\n    //       )\n    //     );\n    //   }\n    // }\n    // function stateGameUpdateExport(exp, current_game) {\n    //   fileExportService.cleanup(exp.url);\n    //   return {\n    //     name: 'clicknfeat_game.json',\n    //     url: fileExportService.generate('json', current_game)\n    //   };\n    // }\n    // function stateGameUpdateModelsExport(exp) {\n    //   fileExportService.cleanup(exp.url);\n    //   const state = appStateService.current();\n    //   const data = R.thread(state)(\n    //      R.path(['game','model_selection']),\n    //      gameModelSelectionModel.get$('local'),\n    //      gameModelsModel\n    //        .copyStamps$(R.__, R.path(['game', 'models'], state))\n    //   );\n    //   return {\n    //     name: 'clicknfeat_models.json',\n    //     url: fileExportService.generate('json', data)\n    //   };\n    // }\n    // function stateGameUpdateBoardExport(exp) {\n    //   fileExportService.cleanup(exp.url);\n    //   const state = appStateService.current();\n    //   const data = R.thread(state)(\n    //     R.prop('game'),\n    //     (game) => ({\n    //       board: game.board,\n    //       terrain: {\n    //         base: { x: 0, y: 0, r: 0 },\n    //         terrains: R.thread(game.terrains)(\n    //           gameTerrainsModel.all,\n    //           R.pluck('state'),\n    //           R.map(R.pick(['x','y','r','info','lk']))\n    //         )\n    //       }\n    //     })\n    //   );\n    //   return {\n    //     name: 'clicknfeat_board.json',\n    //     url: fileExportService.generate('json', data)\n    //   };\n    // }\n    function appGameCheckMode() {\n      const game = appGameService.game.sample();\n      const modes = appModesService.modes.sample();\n      const current_mode = modesModel.currentModeName(modes);\n      const mode = R.thread()(\n        () => gameTerrainSelectionModel\n          .checkMode(R.viewOr({}, TERRAIN_SELECTION_LENS, game)),\n        R.unless(\n          R.exists,\n          () => gameTemplateSelectionModel\n          .checkMode(R.viewOr({}, TEMPLATES_LENS, game),\n                     R.viewOr({}, TEMPLATE_SELECTION_LENS, game))\n        ),\n        // R.unless(\n        //   R.exists,\n        //   () => gameModelSelectionModel\n        //     .checkMode(game.models, R.propOr({}, 'model_selection', game))\n        // )\n        R.defaultTo('Default')\n      );\n      console.warn('CheckMode', mode);\n      if(R.exists(mode) &&\n         mode !== current_mode) {\n        appActionService.defer('Modes.switchTo', mode);\n      }\n    }\n    function observeTemplatesChanges(olds, news) {\n      return R.thread(gameTemplatesModel.all(news))(\n        R.symmetricDifference(gameTemplatesModel.all(olds)),\n        R.map(R.path(['state','stamp'])),\n        R.uniq\n      );\n    }\n    function observeTerrainsChanges(olds, news) {\n      return R.thread(gameTerrainsModel.all(news))(\n        R.symmetricDifference(gameTerrainsModel.all(olds)),\n        R.map(R.path(['state','stamp'])),\n        R.uniq\n      );\n    }\n  }\n})();\n"]}