{"version":3,"sources":["error.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,UADX,EACuB,sBADvB,EADU;;AAIV,yBAAuB,OAAvB,GAAiC,CAC/B,YAD+B,EAE/B,QAF+B,CAAjC,CAJU;AAQV,WAAS,sBAAT,CAAgC,UAAhC,EACgC,aADhC,EAC+C;AAC7C,QAAM,eAAe;AACnB,YAAM,SAAN;AACA,mBAAa,gBAAb;AACA,sBAAgB,mBAAhB;KAHI,CADuC;AAM7C,MAAE,YAAF,CAAe,YAAf,EAN6C;;AAQ7C,QAAI,QAAQ,EAAE,MAAF,GACV;aAAM,cAAc,MAAd;KAAN,EACA,cAAc,YAAd,CAA2B,OAA3B,EAAoC,oBAApC,CAFU,CAAR,CARyC;AAY7C,SAAK,MAAL,CAAY,OAAZ,GAAsB,oBAAtB,CAZ6C;AAa7C,WAAO,YAAP,CAb6C;;AAe7C,aAAS,SAAT,GAA4B;wCAAN;;OAAM;;AAC1B,oBAAc,IAAd,CAAmB,OAAnB,EAA4B,IAA5B,EAAkC,KAAlC,EAD0B;KAA5B;;AAIA,aAAS,gBAAT,CAA0B,QAA1B,EAAoC;AAClC,cAAQ,cACL,WADK,CACO,OADP,EACgB,QADhB,EAC0B,KAD1B,CAAR,CADkC;KAApC;;AAKA,aAAS,mBAAT,CAA6B,QAA7B,EAAuC;AACrC,cAAQ,cACL,cADK,CACU,OADV,EACmB,QADnB,EAC6B,KAD7B,CAAR,CADqC;KAAvC;;AAKA,aAAS,oBAAT,CAA8B,OAA9B,EAAuC,IAAvC,EAA6C;AAC3C,cAAQ,KAAR,CAAc,eAAd,EAA+B,IAA/B,EAD2C;KAA7C;;AAIA,aAAS,oBAAT,CAA8B,GAA9B,EAAmC,GAAnC,EAAwC,IAAxC,EAA8C;AAC5C,gBAAa,YAAO,YAAO,IAA3B,EAD4C;AAE5C,iBAAW,OAAX,GAF4C;AAG5C,aAAO,IAAP,CAH4C;KAA9C;GAlCF;CARD,CAAD","file":"error.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('appError', appErrorServiceFactory);\n\n  appErrorServiceFactory.$inject=  [\n    '$rootScope',\n    'pubSub',\n  ];\n  function appErrorServiceFactory($rootScope,\n                                  pubSubService) {\n    const errorService = {\n      emit: errorEmit,\n      addListener: errorAddListener,\n      removeListener: errorRemoveListener\n    };\n    R.curryService(errorService);\n\n    let event = R.thread()(\n      () => pubSubService.create(),\n      pubSubService.addListener$('error', defaultErrorListener)\n    );\n    self.window.onerror = uncaughtErrorHandler;\n    return errorService;\n\n    function errorEmit(...args) {\n      pubSubService.emit('error', args, event);\n    }\n\n    function errorAddListener(listener) {\n      event = pubSubService\n        .addListener('error', listener, event);\n    }\n\n    function errorRemoveListener(listener) {\n      event = pubSubService\n        .removeListener('error', listener, event);\n    }\n\n    function defaultErrorListener(_event_, args) {\n      console.error('APP ERROR ***', args);\n    }\n\n    function uncaughtErrorHandler(msg, url, line) {\n      errorEmit(`${msg} ${url}:${line}`);\n      $rootScope.$digest();\n      return true;\n    }\n  }\n})();\n"]}