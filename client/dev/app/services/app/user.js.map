{"version":3,"sources":["user.es6"],"names":[],"mappings":"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","file":"user.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('appUser', appUserServiceFactory);\n\n  appUserServiceFactory.$inject=  [\n    'prompt',\n    'behaviours',\n    'appError',\n    'appAction',\n    'appState',\n    'user',\n    'userConnection',\n  ];\n  function appUserServiceFactory(promptService,\n                                 behaviours,\n                                 appErrorService,\n                                 appActionService,\n                                 appStateService,\n                                 userModel,\n                                 userConnectionModel) {\n    const USER_LENS = R.lensProp('user');\n    const CONNECTION_USERS_LENS = R.lensPath(['user', 'connection', 'users']);\n    const CONNECTION_GAMES_LENS = R.lensPath(['user', 'connection', 'games']);\n    const CONNECTION_CHAT_LENS = R.lensPath(['user', 'connection', 'chat']);\n\n    const user = appStateService.state\n            .map(R.view(USER_LENS));\n    user.changes().listen(userModel.saveP);\n    const valid = user.map(userModel.isValid);\n\n    const userService = {\n      user, valid,\n      set: actionUserSet,\n      updateState: actionUserUpdateState,\n      toggleOnline: actionUserToggleOnline,\n      sendChat: actionUserSendChat,\n      connectionChat: actionUserConnectionChat,\n      connectionClose: actionUserConnectionClose,\n      connectionGames: actionUserConnectionGames,\n      connectionUsers: actionUserConnectionUsers\n    };\n    R.curryService(userService);\n\n    mount();\n\n    return userService;\n\n    function mount() {\n      appActionService\n        .register('User.connection.chat', actionUserConnectionChat)\n        .register('User.connection.close', actionUserConnectionClose)\n        .register('User.connection.games', actionUserConnectionGames)\n        .register('User.connection.users', actionUserConnectionUsers)\n        .register('User.sendChat', actionUserSendChat)\n        .register('User.set', actionUserSet)\n        .register('User.toggleOnline', actionUserToggleOnline)\n        .register('User.updateState', actionUserUpdateState);\n      userModel.initP()\n        .then((user) => appActionService.action.send(['User.set', user]));\n    }\n\n    function actionUserSet(state, user) {\n      return R.set(USER_LENS, user, state);\n    }\n    function actionUserUpdateState(state, user_state) {\n      return R.over(\n        USER_LENS,\n        R.assoc('state', user_state),\n        state\n      );\n    }\n    function actionUserToggleOnline(state) {\n      return R.threadP(state)(\n        R.view(USER_LENS),\n        userModel.toggleOnlineP,\n        (user) => {\n          appActionService.do('User.set', user);\n        }\n      );\n    }\n    function actionUserSendChat(state, chat) {\n      return R.threadP(state)(\n        R.view(USER_LENS),\n        userConnectionModel.sendChatP$(chat)\n      );\n    }\n    function actionUserConnectionClose(state) {\n      return R.threadP(state)(\n        R.view(USER_LENS),\n        R.when(\n          userModel.isOnline,\n          () => R.threadP()(\n            () => promptService\n              .promptP('alert','Server connection lost.')\n              .catch(R.always(null)),\n            () => {\n              appActionService.do('User.toggleOnline');\n            }\n          )\n        )\n      );\n    }\n    function actionUserConnectionUsers(state, msg) {\n      return R.thread(msg)(\n        R.propOr([], 'users'),\n        R.sortBy(R.compose(R.toLower, R.prop('name'))),\n        R.set(CONNECTION_USERS_LENS, R.__, state)\n      );\n    }\n    function actionUserConnectionGames(state, msg) {\n      return R.thread(msg)(\n        R.propOr([], 'games'),\n        R.set(CONNECTION_GAMES_LENS, R.__, state)\n      );\n    }\n    function actionUserConnectionChat(state, msg) {\n      return R.over(\n        CONNECTION_CHAT_LENS,\n        R.pipe(\n          R.defaultTo([]),\n          R.append(msg)\n        ),\n        state\n      );\n    }\n  }\n})();\n"]}