{"version":3,"sources":["games.es6"],"names":[],"mappings":"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","file":"games.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('appGames', stateGamesModelFactory);\n\n  stateGamesModelFactory.$inject = [\n    'behaviours',\n    'appAction',\n    'appState',\n    'fileImport',\n    'game',\n    'games',\n  ];\n  function stateGamesModelFactory(behavioursModel,\n                                  appActionService,\n                                  appStateService,\n                                  fileImportService,\n                                  gameModel,\n                                  gamesModel) {\n    const LOCAL_GAMES_LENS = R.lensProp('local_games');\n\n    const local = appStateService.state\n            .map(R.viewOr([], LOCAL_GAMES_LENS));\n    const load = {\n      local: behavioursModel.signalModel.create()\n    };\n\n    const gamesService = {\n      local, load,\n      // create: stateGamesCreate,\n      localSet: actionGamesLocalSet,\n      localUpdate: actionGamesLocalUpdate,\n      localCreate: actionGamesLocalCreate,\n      localLoadFile: actionGamesLocalLoadFile,\n      localLoadNew: actionGamesLocalLoadNew,\n      localLoad: actionGamesLocalLoad,\n      localDelete: actionGamesLocalDelete,\n      // onOnlineCreate: stateGamesOnOnlineCreate,\n      // onOnlineLoadFile: stateGamesOnOnlineLoadFile,\n      // loadNewOnlineGameP: loadNewOnlineGameP,\n      // onOnlineLoad: stateGamesOnOnlineLoad\n    };\n    R.curryService(gamesService);\n\n    mount();\n\n    return gamesService;\n\n    function mount() {\n      appActionService\n        .register('Games.local.set'       , actionGamesLocalSet)\n        .register('Games.local.update'    , actionGamesLocalUpdate)\n        .register('Games.local.create'    , actionGamesLocalCreate)\n        .register('Games.local.loadFile'  , actionGamesLocalLoadFile)\n        .register('Games.local.loadNew'   , actionGamesLocalLoadNew)\n        .register('Games.local.load'      , actionGamesLocalLoad)\n        .register('Games.local.delete'    , actionGamesLocalDelete);\n        // .register('Games.online.create'   , stateGamesModel.onOnlineCreate)\n        // .register('Games.online.load'     , stateGamesModel.onOnlineLoad)\n        // .register('Games.online.loadFile' , stateGamesModel.onOnlineLoadFile);\n\n      gamesService.ready = gamesModel.loadLocalGamesP()\n        .then((games) => {\n          return appActionService.action\n            .send(['Games.local.set', games]);\n        });\n    }\n    function actionGamesLocalSet(state, games) {\n      return R.set(LOCAL_GAMES_LENS, games, state);\n    }\n    function actionGamesLocalUpdate(state, game) {\n      return R.over(\n        LOCAL_GAMES_LENS,\n        gamesModel.updateLocalGame$(game),\n        state\n      );\n    }\n    function actionGamesLocalCreate(state) {\n      return R.thread(state.user.state)(\n        gameModel.create,\n        (game) => actionGamesLocalLoadNew(state, game)\n      );\n    }\n    function actionGamesLocalLoadFile(_state_, file) {\n      return R.threadP(file)(\n        fileImportService.readP$('json'),\n        (data) => appActionService.action\n          .send(['Games.local.loadNew', data])\n      );\n    }\n    function actionGamesLocalLoadNew(state, game) {\n      return R.thread(state)(\n        R.over(LOCAL_GAMES_LENS, gamesModel.newLocalGame$(game)),\n        R.tap(R.pipe(\n          R.view(LOCAL_GAMES_LENS),\n          R.last,\n          R.prop('local_stamp'),\n          (id) => actionGamesLocalLoad(state, id)\n        ))\n      );\n    }\n    function actionGamesLocalLoad(_state_, index) {\n      load.local.send(index);\n    }\n    function actionGamesLocalDelete(state, id) {\n      return R.over(\n        LOCAL_GAMES_LENS,\n        gamesModel.removeLocalGame$(id),\n        state\n      );\n    }\n    // function stateGamesOnOnlineCreate(state) {\n    //   return R.thread(state)(\n    //     R.pathOr({}, ['user','state']),\n    //     gameModel.create,\n    //     stateGamesModel.loadNewOnlineGameP\n    //   );\n    // }\n    // function stateGamesOnOnlineLoadFile(_state_, _event_, [file]) {\n    //   return R.threadP(file)(\n    //     fileImportService.readP$('json'),\n    //     stateGamesModel.loadNewOnlineGameP\n    //   ).catch(R.spyAndDiscardError('Failed to open online game file'));\n    // }\n    // function loadNewOnlineGameP(game) {\n    //   return R.threadP(game)(\n    //     gamesModel.newOnlineGameP,\n    //     R.prop('private_stamp'),\n    //     (id) => appStateService\n    //       .emit('Games.online.load', 'private', id)\n    //   );\n    // }\n    // function stateGamesOnOnlineLoad(_state_, _event_, [id]) {\n    //   appStateService\n    //     .emit('Games.online.load', 'public', id);\n    // }\n  }\n})();\n"]}