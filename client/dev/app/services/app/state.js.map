{"version":3,"sources":["state.es6"],"names":[],"mappings":";;;;;;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,UADX,EACuB,sBADvB,EADU;;AAIV,yBAAuB,OAAvB,GAAiC,CAC/B,YAD+B,EAE/B,UAF+B,EAG/B,WAH+B,CAAjC,CAJU;AASV,WAAS,sBAAT,CAAgC,UAAhC,EACgC,eADhC,EAEgC,gBAFhC,EAEkD;AAChD,QAAM,gBAAgB,iBAAiB,MAAjB,CACb,QADa,CACJ,QADI,EACM;aAAM;KAAN,CADtB,CAD0C;AAGhD,QAAM,WAAW,WAAW,WAAX,CAAuB,MAAvB,EAAX,CAH0C;AAIhD,SAAK,MAAL,CAAY,QAAZ,GAAuB,QAAvB,CAJgD;;AAMhD,QAAM,QAAQ,SACL,MADK,CACE,aADF,EAEL,IAFK,CAEA,EAFA,CAAR,CAN0C;AAShD,QAAM,OAAO,MAAM,KAAN,EAAP,CAT0C;AAUhD,SAAK,MAAL,CAAY,KAAZ,GAAoB,KAApB,CAVgD;;AAYhD,QAAM,eAAe;AACnB,kBADmB,EACZ,KAAK,QAAL;AACP,gBAAU,QAAV;AACA,YAAM,eAAN;KAHI,CAZ0C;AAiBhD,MAAE,YAAF,CAAe,YAAf,EAjBgD;AAkBhD,QAAM,qBAAqB,EAAE,KAAF,CAAQ,iBAAR,CAArB,CAlB0C;;AAoBhD,YApBgD;;AAsBhD,WAAO,YAAP,CAtBgD;;AAwBhD,aAAS,KAAT,GAAiB;AACf,uBAAiB,QAAjB,CAA0B,YAA1B,EAAwC,eAAxC,EADe;KAAjB;;AAIA,aAAS,QAAT,CAAkB,KAAlB,QAA4C;;;UAAlB,kBAAkB;;UAAP,sBAAO;;AAC1C,cAAQ,IAAR,kBAA4B,MAA5B,EAAsC,IAAtC,EAA4C,KAA5C,EAD0C;AAE1C,cAAQ,KAAR,GAF0C;;AAI1C,UAAM,UAAU,EAAE,IAAF,CAAO,MAAP,EAAe,iBAAiB,QAAjB,EAAf,CAAV,CAJoC;AAK1C,UAAG,EAAE,KAAF,CAAQ,OAAR,CAAH,EAAqB;AACnB,wBAAgB,IAAhB,sBAAwC,YAAxC,EADmB;AAEnB,eAAO,IAAP,CAFmB;OAArB;;AAKA,UAAI,MAAM,IAAN,CAVsC;AAW1C,UAAI;AACF,cAAM,QAAQ,KAAR,CAAc,IAAd,GAAsB,iCAAU,MAAhC,CAAN,CADE;OAAJ,CAGA,OAAM,CAAN,EAAS;AACP,0BAAkB,MAAlB,EAA0B,CAA1B,EADO;OAAT;;AAIA,UAAG,cAAc,EAAE,IAAF,CAAO,GAAP,CAAd,EAA2B;AAC5B,YAAI,KAAJ,CAAU,mBAAmB,MAAnB,CAAV,EAD4B;AAE5B,eAAO,IAAP,CAF4B;OAA9B;;AAKA,aAAO,GAAP,CAvB0C;KAA5C;;AA0BA,aAAS,eAAT,GAA2B;AACzB,aAAO,EAAP,CADyB;KAA3B;;AAIA,aAAS,iBAAT,CAA2B,MAA3B,EAAmC,CAAnC,EAAsC;AACpC,sBAAgB,IAAhB,cAAgC,0BAAhC,EAAyD,CAAzD,EADoC;KAAtC;GA5DF;CATD,CAAD","file":"state.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('appState', appStateServiceFactory);\n\n  appStateServiceFactory.$inject=  [\n    'behaviours',\n    'appError',\n    'appAction'\n  ];\n  function appStateServiceFactory(behaviours,\n                                  appErrorService,\n                                  appActionService) {\n    const stateOnAction = appActionService.action\n            .snapshot(onAction, () => loop);\n    const stateSet = behaviours.signalModel.create();\n    self.window.stateSet = stateSet;\n\n    const state = stateSet\n            .orElse(stateOnAction)\n            .hold({});\n    const loop = state.delay();\n    self.window.state = state;\n\n    const stateService = {\n      state, set: stateSet,\n      onAction: onAction,\n      init: actionStateInit\n    };\n    R.curryService(stateService);\n    const handleActionError$ = R.curry(handleActionError);\n\n    mount();\n\n    return stateService;\n\n    function mount() {\n      appActionService.register('State.Init', actionStateInit);\n    }\n\n    function onAction(state, [action, ...args]) {\n      console.info(`===> Action ${action}`, args, state);\n      console.trace();\n\n      const handler = R.prop(action, appActionService.handlers());\n      if(R.isNil(handler)) {\n        appErrorService.emit(`Unknown action \"${action}\"`);\n        return null;\n      }\n\n      let ret = null;\n      try {\n        ret = handler.apply(null, [ state, ...args ]);\n      }\n      catch(e) {\n        handleActionError(action, e);\n      }\n\n      if('Promise' === R.type(ret)) {\n        ret.catch(handleActionError$(action));\n        return null;\n      }\n\n      return ret;\n    }\n\n    function actionStateInit() {\n      return {};\n    }\n\n    function handleActionError(action, e) {\n      appErrorService.emit(`Action \"${action}\" handler error`, e);\n    }\n  }\n})();\n"]}