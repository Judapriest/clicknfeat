{"version":3,"sources":["websocket.es6"],"names":[],"mappings":"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","file":"websocket.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('websocket', websocketServiceFactory);\n\n  websocketServiceFactory.$inject = [\n    'appAction',\n    'appError',\n    'jsonParser',\n    'jsonStringifier',\n  ];\n  function websocketServiceFactory(appActionService,\n                                   appErrorService,\n                                   jsonParserService,\n                                   jsonStringifierService) {\n    const websocketService = {\n      createP: websocketCreateP,\n      send: websocketSend,\n      close: websocketClose\n    };\n    R.curryService(websocketService);\n    return websocketService;\n\n    function websocketCreateP(url, name, actions) {\n      return new self.Promise((resolve, reject) => {\n        name = R.defaultTo(url, name);\n        actions = R.thread(actions)(\n          R.over(R.lensProp('error'), R.defaultTo('Websocket.error')),\n          R.over(R.lensProp('close'), R.defaultTo('Websocket.close'))\n        );\n\n        const scheme = 'ws://';\n        const uri = scheme + self.document.location.host + url;\n        const socket = new self.WebSocket(uri);\n        let resolved = false;\n        socket.onopen = websocketOnOpen;\n        socket.onerror = websocketOnError;\n        socket.onclose = websocketOnClose;\n        socket.onmessage = websocketOnMessage;\n\n        function websocketOnOpen(event) {\n          console.warn('WebSocket open', name, event);\n          resolve(socket);\n          resolved = true;\n        }\n        function websocketOnError(event) {\n          appActionService.do(actions.error, event);\n        }\n        function websocketOnClose(/* event */) {\n          if(!resolved) {\n            reject('Connection error');\n            resolved = true;\n            return;\n          }\n          appActionService.do(actions.close);\n        }\n        function websocketOnMessage(event) {\n          // console.log('WebSocket message', name, event);\n          R.threadP(event.data)(\n            jsonParserService.parseP,\n            R.ifElse(\n              (msg) => R.exists(actions[msg.type]),\n              (msg) => {\n                appActionService.do(actions[msg.type], msg);\n              },\n              (msg) => {\n                appErrorService\n                  .emit(`Websocket: unknown msg type ${msg.type}`, msg);\n              }\n            )\n          );\n        }\n      });\n    }\n    function websocketSend(event, socket) {\n      return R.thread(event)(\n        jsonStringifierService.stringify,\n        (msg) => socket.send(msg),\n        R.always(socket)\n      );\n    }\n    function websocketClose(socket) {\n      socket.close();\n      return socket;\n    }\n  }\n})();\n"]}