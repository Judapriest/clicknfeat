{"version":3,"sources":["context.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,OAAK,OAAL,GAAe,SAAS,OAAT,CAAiB,IAAjB,EAAuB,KAAvB,EAA8B,IAA9B,EAAoC;;AAEjD,QAAI,WAAW,KAAK,EAAL,CAAQ,OAAR,CAFkC;AAGjD,SAAK,EAAL,CAAQ,OAAR,GAAkB,eAAe,QAAf,EAAyB,IAAzB,EAA+B,KAA/B,CAAlB,CAHiD;AAIjD,SAAK,QAAL,CAAc,IAAd,EAAoB,IAApB,EAJiD;AAKjD,SAAK,EAAL,CAAQ,OAAR,GAAkB,QAAlB,CALiD;GAApC,CADL;;AASV,OAAK,QAAL,GAAgB,SAAS,QAAT,CAAkB,IAAlB,EAAwB,KAAxB,EAA+B,IAA/B,EAAqC;AACnD,SAAK,SAAL,CAAe,IAAf,EAAqB,IAArB,EADmD;GAArC,CATN;;AAaV,WAAS,cAAT,CAAwB,QAAxB,EAAkC,KAAlC,EAAyC,KAAzC,EAAgD;AAC9C,QAAI,UAAU,SAAV,OAAU,CAAS,IAAT,EAAe;AAC3B,aAAO,UAAS,IAAT,EAAe;;;AACpB,gBAAQ,GAAR,CAAY,SAAZ,EAAuB,KAAvB,EADoB;AAEpB,aAAK,kBAAL,GAA0B,YAAW;AACnC,eAAK,qBAAL,GAA6B,IAA7B,CADmC;SAAX,CAFN;AAKpB,YAAM,UAAU,IAAI,KAAK,OAAL,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpD,cAAI;AACF,oBAAQ,EAAE,IAAF,CAAO,KAAP,UAAR,EADE;WAAJ,CAGA,OAAM,CAAN,EAAS;AACP,mBAAO,CAAP,EADO;WAAT;SAJ+B,CAAjB,CAOb,KAPa,CAOP,UAAC,KAAD,EAAW;AAClB,kBAAQ,IAAR,CAAa,aAAb,EAA4B,KAA5B,EAAmC,KAAnC,EADkB;AAElB,gBAAK,YAAL,GAAoB,EAAE,MAAF,CAAS,MAAK,YAAL,CAAT,CAClB,EAAE,SAAF,CAAY,EAAZ,CADkB,EAElB,EAAE,MAAF,CAAS,KAAT,CAFkB,CAApB,CAFkB;SAAX,CAPH,CALc;AAmBpB,eAAO,EAAE,OAAF,CAAU,OAAV,EACL,UAAC,OAAD,EAAa;;AAEX,gBAAK,OAAL,GAAe,OAAf,CAFW;SAAb,EAIA,YAAM;AACJ,cAAG,CAAC,MAAK,qBAAL,IACD,EAAE,MAAF,CAAS,MAAK,YAAL,CADT,EAC6B;AAC9B,mBAAO,cAAP,EAAuB,IAAvB,CAA4B,cAA5B,EAD8B;AAE9B,mBAAO,MAAK,YAAL,CAAP,CACG,IADH,CACQ,SADR,EAF8B;WADhC;SADF,EAQA,YAAM;AACJ,iBAAO,SAAS,IAAT,EAAe,KAAf,QAA2B,CAAC,IAAD,CAA3B,CAAP,CADI;SAAN,CAbF,CAnBoB;OAAf,CADoB;KAAf,CADgC;AAwC9C,YAAQ,MAAR,GAAiB,KAAjB,CAxC8C;AAyC9C,WAAO,OAAP,CAzC8C;GAAhD;CAbD,CAAD","file":"context.js","sourcesContent":["(function() {\n  self.context = function context(desc, setup, body) {\n    // console.log('context', desc);\n    let _wrapper = self.it.wrapper;\n    self.it.wrapper = contextWrapper(_wrapper, desc, setup);\n    self.describe(desc, body);\n    self.it.wrapper = _wrapper;\n  };\n\n  self.xcontext = function xcontext(desc, setup, body) {\n    self.xdescribe(desc, body);\n  };\n\n  function contextWrapper(_wrapper, _desc, setup) {\n    let wrapper = function(test) {\n      return function(done) {\n        console.log('wrapper', _desc);\n        this.contextExpectError = function() {\n          this._context_expect_error = true;\n        };\n        const context = new self.Promise((resolve, reject) => {\n          try {\n            resolve(R.bind(setup, this)());\n          }\n          catch(e) {\n            reject(e);\n          }\n        }).catch((error) => {\n          console.warn('Setup error', _desc, error);\n          this.contextError = R.thread(this.contextError)(\n            R.defaultTo([]),\n            R.append(error)\n          );\n        });\n        return R.threadP(context)(\n          (context) => {\n            // console.log('context', _desc, context);\n            this.context = context;\n          },\n          () => {\n            if(!this._context_expect_error &&\n               R.exists(this.contextError)) {\n              expect('This context').toBe('not rejected');\n              expect(this.contextError)\n                .toBe(undefined);\n            }\n          },\n          () => {\n            return _wrapper(test).apply(this, [done]);\n          }\n        );\n      };\n    };\n    wrapper._debug = _desc;\n    return wrapper;\n  }\n})();\n"]}