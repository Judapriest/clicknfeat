{"version":3,"sources":["toBeAMatcher.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,MAAM,eAAe;AACnB,WAAO,eAAe,GAAf,CAAP;AACA,YAAQ,eAAe,IAAf,CAAR;GAFI,CADI;;AAMV,aAAW,YAAW;AACpB,YAAQ,WAAR,CAAoB,YAApB,EADoB;GAAX,CAAX,CANU;;AAUV,WAAS,cAAT,CAAwB,CAAxB,EAA2B;AACzB,WAAO,YAAW;AAChB,aAAO,EAAE,SAAS,OAAT,EAAT,CADgB;KAAX,CADkB;;AAKzB,aAAS,OAAT,CAAiB,MAAjB,EAAyB,QAAzB,EAAmC;AACjC,UAAM,SAAS,EAAT,CAD2B;AAEjC,aAAO,IAAP,GAAe,EAAE,IAAF,CAAO,MAAP,MAAmB,QAAnB,CAFkB;AAGjC,UAAG,OAAO,IAAP,EAAa;AACd,eAAO,OAAP,iBAA6B,yBAAoB,UAAK,QAAtD,CADc;OAAhB,MAGK;AACH,eAAO,OAAP,iBAA6B,qBAAgB,UAAK,QAAlD,CADG;OAHL;AAMA,aAAO,MAAP,CATiC;KAAnC;GALF;CAVD,CAAD","file":"toBeAMatcher.js","sourcesContent":["(function() {\n  const toBeAMatcher = {\n    toBeA: matcherFactory('a'),\n    toBeAn: matcherFactory('an')\n  };\n\n  beforeEach(function() {\n    jasmine.addMatchers(toBeAMatcher);\n  });\n\n  function matcherFactory(a) {\n    return function() {\n      return { compare: compare };\n    };\n\n    function compare(actual, expected) {\n      const result = {};\n      result.pass = (R.type(actual) === expected);\n      if(result.pass) {\n        result.message = `Expected ${actual} not to be ${a} ${expected}`;\n      }\n      else {\n        result.message = `Expected ${actual} to be ${a} ${expected}`;\n      }\n      return result;\n    }\n  }\n})();\n"]}