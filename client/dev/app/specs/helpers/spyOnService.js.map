{"version":3,"sources":["spyOnService.es6"],"names":[],"mappings":";;AAAA,KAAK,YAAL,GAAoB,YAAY;AAC9B,SAAO,SAAS,YAAT,CAAsB,IAAtB,EAA4B;AACjC,QAAI,oBAAJ,CADiC;AAEjC,YAAQ,IAAR,CAAa,MAAb,CAAoB,CAAE,IAAF,EAAQ,UAAC,OAAD,EAAa;AACvC,iBAAW,OAAX,CADuC;AAEvC,QAAE,MAAF,CAAS,OAAT,EACE,EAAE,MAAF,EACA,EAAE,MAAF,CAAS,EAAE,OAAF,CAAU,EAAE,MAAF,CAAS,UAAT,CAAV,EAAgC,EAAE,IAAF,EAAQ,EAAE,IAAF,CAAO,EAAE,IAAF,CAAP,CAAe,OAAf,CAAxC,CAAT,CAFF,EAGE,EAAE,MAAF,CAAS,EAAE,OAAF,CAAU,EAAE,MAAF,CAAS,GAAT,CAAV,EAAyB,EAAE,IAAF,CAAlC,CAHF,EAIE,EAAE,OAAF,CAAU,UAAC,GAAD,EAAS;AACjB,YAAM,QAAQ,QAAQ,GAAR,EAAa,MAAb,CADG;AAEjB,YAAM,oBAAuB,aAAQ,oBAA/B,CAFW;AAGjB,YAAG,EAAE,IAAF,CAAO,GAAP,MAAgB,GAAhB,EAAqB;AACtB,eAAK,YAAL,CAAkB,OAAlB,EAA2B,GAA3B,EACG,WADH,CACe,iBADf,EADsB;SAAxB,MAIK;AACH,gBAAM,OAAN,EAAe,GAAf,EACG,GADH,CACO,WADP,CACmB,iBADnB,EADG;SAJL;AAQA,gBAAQ,MAAI,GAAJ,CAAR,GAAmB,EAAE,MAAF,CAAS,KAAT,EAAgB,QAAQ,GAAR,CAAhB,CAAnB,CAXiB;OAAT,CAJZ,EAFuC;KAAb,CAA5B,EAFiC;AAuBjC,WAAO,QAAP,CAvBiC;GAA5B,CADuB;CAAX,EAArB","file":"spyOnService.js","sourcesContent":["self.spyOnService = (function() {\n  return function spyOnService(name) {\n    let _service;\n    angular.mock.inject([ name, (service) => {\n      _service = service;\n      R.thread(service)(\n        R.keysIn,\n        R.filter(R.compose(R.equals('Function'), R.type, R.flip(R.prop)(service))),\n        R.reject(R.compose(R.equals('$'), R.last)),\n        R.forEach((key) => {\n          const arity = service[key].length;\n          const mock_return_value = `${name}.${key}.returnValue`;\n          if(R.last(key) === 'P') {\n            self.spyOnPromise(service, key)\n              .resolveWith(mock_return_value);\n          }\n          else {\n            spyOn(service, key)\n              .and.returnValue(mock_return_value);\n          }\n          service[key+'$'] = R.curryN(arity, service[key]);\n        })\n      );\n    } ]);\n    return _service;\n  };\n})();\n"]}