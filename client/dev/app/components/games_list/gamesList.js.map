{"version":3,"sources":["gamesList.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,qBAAf,EACG,UADH,CACc,eADd,EAC+B,aAD/B,EAEG,SAFH,CAEa,gBAFb,EAE+B,yBAF/B,EADU;;AAKV,WAAS,yBAAT,GAAqC;AACnC,WAAO;AACL,gBAAU,GAAV;AACA,mBAAa,2CAAb;AACA,aAAO,EAAP;AACA,YAAM,gBAAM,EAAN;AACN,kBAAY,eAAZ;AACA,oBAAc,IAAd;AACA,wBAAkB;AAChB,eAAO,GAAP;AACA,mBAAW,GAAX;AACA,iBAAS,GAAT;OAHF;KAPF,CADmC;GAArC;AAeA,gBAAc,OAAd,GAAwB,CACtB,QADsB,CAAxB,CApBU;AAuBV,WAAS,aAAT,CAAuB,MAAvB,EAA+B;AAC7B,QAAM,KAAK,IAAL,CADuB;AAE7B,YAAQ,GAAR,CAAY,eAAZ,EAA6B,GAAG,KAAH,CAA7B,CAF6B;;AAI7B,OAAG,SAAH,CAAa,IAAb,GAAoB,EAApB,CAJ6B;AAK7B,OAAG,aAAH,GAAmB,aAAnB,CAL6B;AAM7B,OAAG,cAAH,GAAoB,cAApB,CAN6B;;AAQ7B,eAR6B;;AAU7B,aAAS,QAAT,GAAoB;AAClB,aAAO,MAAP,CAAc,UAAd,EAA0B,YAAM;AAAE,uBAAF;OAAN,CAA1B,CADkB;KAApB;AAGA,aAAS,aAAT,CAAuB,KAAvB,EAA8B;AAC5B,aAAO,EAAE,MAAF,CAAS,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,KAAT,CAAP,EAAwB,GAAG,SAAH,CAAa,IAAb,CAAjC,CAAP,CAD4B;KAA9B;AAGA,aAAS,gBAAT,GAA4B;AAC1B,aAAO,EAAE,OAAF,CAAU,GAAG,SAAH,CAAa,IAAb,CAAjB,CAD0B;KAA5B;AAGA,aAAS,cAAT,CAAwB,KAAxB,EAA+B;AAC7B,UAAG,EAAE,MAAF,CAAS,GAAG,OAAH,CAAT,IACA,GAAG,KAAH,CAAS,KAAT,EAAgB,YAAhB,KAAiC,GAAG,OAAH,EAAY,OADhD;;AAGA,mBAAa,KAAb,EAJ6B;KAA/B;AAMA,aAAS,YAAT,CAAsB,KAAtB,EAA6B;AAC3B,QAAE,MAAF,CAAS,KAAT,EACE,EAAE,SAAF,CAAY,EAAE,IAAF,CAAO,GAAG,SAAH,CAAa,IAAb,CAAnB,CADF,EAEE,EAAE,SAAF,CAAY,CAAZ,CAFF,EAGE,EAAE,GAAF,CAAM,EAAE,MAAF,CAAS,GAAG,KAAH,CAAT,GAAmB,CAAnB,CAHR,EAIE,EAAE,GAAF,CAAM,CAAN,CAJF,EAKE,UAAC,KAAD,EAAW;AACT,WAAG,SAAH,CAAa,IAAb,GAAoB,CAAC,KAAD,CAApB,CADS;OAAX,CALF,CAD2B;KAA7B;GAzBF;CAvBD,CAAD","file":"gamesList.js","sourcesContent":["(function() {\n  angular.module('clickApp.directives')\n    .controller('gamesListCtrl', gamesListCtrl)\n    .directive('clickGamesList', gamesListDirectiveFactory);\n\n  function gamesListDirectiveFactory() {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/components/games_list/games_list.html',\n      scope: {},\n      link: () => { },\n      controller: 'gamesListCtrl',\n      controllerAs: 'vm',\n      bindToController: {\n        games: '=',\n        selection: '=',\n        current: '='\n      }\n    };\n  }\n  gamesListCtrl.$inject = [\n    '$scope',\n  ];\n  function gamesListCtrl($scope) {\n    const vm = this;\n    console.log('gamesListCtrl', vm.games);\n\n    vm.selection.list = [];\n    vm.isInSelection = isInSelection;\n    vm.doSetSelection = doSetSelection;\n\n    activate();\n\n    function activate() {\n      $scope.$watch('vm.games', () => { setSelection(); });\n    }\n    function isInSelection(index) {\n      return R.exists(R.find(R.equals(index), vm.selection.list));\n    }\n    function selectionIsEmpty() {\n      return R.isEmpty(vm.selection.list);\n    }\n    function doSetSelection(index) {\n      if(R.exists(vm.current) &&\n         vm.games[index].public_stamp === vm.current) return;\n\n      setSelection(index);\n    }\n    function setSelection(index) {\n      R.thread(index)(\n        R.defaultTo(R.head(vm.selection.list)),\n        R.defaultTo(0),\n        R.min(R.length(vm.games)-1),\n        R.max(0),\n        (index) => {\n          vm.selection.list = [index];\n        }\n      );\n    }\n  }\n})();\n"]}