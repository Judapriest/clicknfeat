{"version":3,"sources":["prompt.es6"],"names":[],"mappings":"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","file":"prompt.js","sourcesContent":["(function() {\n  angular.module('clickApp.directives')\n    .factory('prompt', promptServiceFactory)\n    .directive('prompt', promptDirectiveFactory);\n\n  promptServiceFactory.$inject = [];\n  function promptServiceFactory() {\n    let state;\n    const state_resolves = [];\n    let prompt_resolve;\n\n    const promptService =  {\n      register: promptRegister,\n      promptP: promptPromptP\n    };\n    R.curryService(promptService);\n    return promptService;\n\n    function promptRegister(st) {\n      state = st;\n      state.doValidate = stateDoValidate;\n      state.doCancel = stateDoCancel;\n\n      resolveStateClients();\n\n      return state;\n    }\n    function promptPromptP(prompt_type, msg, input_value) {\n      return R.threadP()(\n        getState,\n        openPrompt,\n        registerPromptResolve\n      );\n\n      function openPrompt(state) {\n        state.open({\n          prompt_type: prompt_type,\n          message: R.type(msg) === 'String' ? [msg] : msg,\n          input_type: R.type(input_value) === 'Number' ? 'number' : 'text',\n          input_value: input_value\n        });\n      }\n    }\n    function registerPromptResolve() {\n      return new self.Promise((resolve, reject) => {\n        prompt_resolve = {\n          resolve: resolve,\n          reject: reject\n        };\n      });\n    }\n    function getState() {\n      return ( R.exists(state)\n               ? state\n               : registerStateClient()\n             );\n    }\n    function registerStateClient() {\n      return new self.Promise((resolve) => {\n        state_resolves.push(resolve);\n      });\n    }\n    function resolveStateClients() {\n      R.forEach((resolve) => {\n        resolve(state);\n      }, state_resolves);\n      state_resolves.length = 0;\n    }\n    function stateDoValidate() {\n      const value = state.close();\n      prompt_resolve.resolve(value);\n      prompt_resolve = null;\n    }\n    function  stateDoCancel() {\n      state.close();\n      prompt_resolve.reject('canceled');\n      prompt_resolve = null;\n    }\n  }\n\n  promptDirectiveFactory.$inject = [\n    'prompt',\n  ];\n  function promptDirectiveFactory(promptService) {\n    const promptDirective = {\n      restrict: 'E',\n      templateUrl: 'app/components/prompt/prompt.html',\n      scope: true,\n      link: link\n    };\n    return promptDirective;\n\n    function link(scope, element) {\n      element = element[0];\n      const form = element.querySelector('form');\n      const msg_container = element.querySelector('p');\n      const input = element.querySelector('input');\n      const cancel = element.querySelector('button.btn-default');\n\n      element.style.display = 'none';\n\n      const state = promptService.register({\n        open: promptOpen,\n        close: promptClose\n      });\n\n      form.addEventListener('submit', state.doValidate);\n      cancel.addEventListener('click', state.doCancel);\n\n      function promptOpen(options = {}) {\n        let { message,\n              input_type,\n              prompt_type,\n              input_value\n            } = options;\n        self.window.requestAnimationFrame(() => {\n          msg_container.innerHTML = R.defaultTo([], message).join('<br />');\n          input.setAttribute('type', R.defaultTo('text', input_type));\n          input.style.display = (prompt_type === 'prompt') ? 'initial' : 'none';\n          cancel.style.display = (prompt_type !== 'alert') ? 'initial' : 'none';\n          element.style.display = 'initial';\n          input.focus();\n          input.value = R.defaultTo(null, input_value);\n        });\n      }\n      function promptClose() {\n        let value = input.value;\n        if(input.getAttribute('type') === 'number') {\n          value = (R.length(value) === 0) ? null : parseFloat(value);\n        }\n        element.style.display = 'none';\n        return value;\n      }\n    }\n  }\n})();\n"]}