{"version":3,"sources":["dragBox.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,qBAAf,EACG,SADH,CACa,kBADb,EACiC,2BADjC,EADU;;AAIV,8BAA4B,OAA5B,GAAsC,CACpC,SADoC,CAAtC,CAJU;AAOV,WAAS,2BAAT,CAAqC,cAArC,EAAqD;AACnD,WAAO;AACL,gBAAU,GAAV;AACA,aAAO,IAAP;AACA,YAAM,IAAN;KAHF,CADmD;;AAOnD,aAAS,IAAT,CAAc,KAAd,EAAqB;AACnB,cAAQ,GAAR,CAAY,aAAZ,EADmB;;AAGnB,YAAM,MAAN,GAAe,EAAE,GAAG,CAAH,EAAM,GAAG,CAAH;AACN,eAAO,CAAP,EAAU,QAAQ,CAAR;OAD3B,CAHmB;;AAOnB,YAAM,YAAN,CAAmB,aAAnB,EAAkC,eAAe,IAAf,CAAoB,QAApB,EAA8B,KAAhE,EAPmB;;AASnB,eAAS,aAAT,CAAuB,QAAvB,EAAiC;AAC/B,YAAG,EAAE,KAAF,CAAQ,SAAS,QAAT,CAAX,EAA+B;AAC7B,gBAAM,MAAN,GAAe,EAAE,GAAG,CAAH,EAAM,GAAG,CAAH;AACN,mBAAO,CAAP,EAAU,QAAQ,CAAR;WAD3B,CAD6B;AAI7B,iBAJ6B;SAA/B;;YAOQ,WAA2B,SAA3B,SARuB;YAQb,eAAiB,SAAjB,aARa;;AAS/B,YAAM,QAAQ,KAAK,GAAL,CAAS,aAAa,CAAb,GAAiB,SAAS,CAAT,CAAlC,CATyB;AAU/B,YAAM,SAAS,KAAK,GAAL,CAAS,aAAa,CAAb,GAAiB,SAAS,CAAT,CAAnC,CAVyB;;AAY/B,cAAM,MAAN,CAAa,CAAb,GAAiB,SAAS,CAAT,CAZc;AAa/B,cAAM,MAAN,CAAa,CAAb,GAAiB,SAAS,CAAT,CAbc;AAc/B,cAAM,MAAN,CAAa,KAAb,GAAqB,KAArB,CAd+B;AAe/B,cAAM,MAAN,CAAa,MAAb,GAAsB,MAAtB,CAf+B;AAgB/B,gBAAQ,IAAR,CAAa,iBAAb,EAAgC,SAAhC,EAA2C,MAAM,MAAN,CAA3C,CAhB+B;OAAjC;KATF;GAPF;CAPD,CAAD","file":"dragBox.js","sourcesContent":["(function() {\n  angular.module('clickApp.directives')\n    .directive('clickGameDragbox', gameDragboxDirectiveFactory);\n\n  gameDragboxDirectiveFactory.$inject = [\n    'appGame',\n  ];\n  function gameDragboxDirectiveFactory(appGameService) {\n    return {\n      restrict: 'A',\n      scope: true,\n      link: link\n    };\n\n    function link(scope) {\n      console.log('gameDragbox');\n\n      scope.render = { x: 0, y: 0,\n                       width: 0, height: 0\n                     };\n\n      scope.listenSignal(updateDragbox, appGameService.view.drag_box, scope);\n\n      function updateDragbox(drag_box) {\n        if(R.isNil(drag_box.top_left)) {\n          scope.render = { x: 0, y: 0,\n                           width: 0, height: 0\n                         };\n          return;\n        }\n\n        const { top_left, bottom_right } = drag_box;\n        const width = Math.abs(bottom_right.x - top_left.x);\n        const height = Math.abs(bottom_right.y - top_left.y);\n\n        scope.render.x = top_left.x;\n        scope.render.y = top_left.y;\n        scope.render.width = width;\n        scope.render.height = height;\n        console.warn('RENDER DRAG_BOX', arguments, scope.render);\n      }\n    }\n  }\n})();\n"]}