{"version":3,"sources":["ruler.es6"],"names":[],"mappings":"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","file":"ruler.js","sourcesContent":["angular.module('clickApp.directives')\n  .directive('clickGameRuler', [\n    'gameMap',\n    'labelElement',\n    'gameRuler',\n    'gameModels',\n    'gameFactions',\n    'modes',\n    function(gameMapService,\n             labelElementService,\n             gameRulerService,\n             gameModelsService,\n             gameFactionsService,\n             modesService) {\n      return {\n        restrict: 'A',\n        link: function(scope, parent) {\n          let map = document.getElementById('map');\n          let svgNS = map.namespaceURI;\n\n          let state = scope.state;\n          let local_element = createRulerElement(svgNS, parent[0]);\n          let remote_element = createRulerElement(svgNS, parent[0]);\n\n          scope.onStateChangeEvent('Game.ruler.local.change', () => {\n            updateRuler(map, state.game.ruler.local, local_element);\n          }, scope);\n          scope.onStateChangeEvent('Game.ruler.remote.change', () => {\n            updateRuler(map, state.game.ruler.remote, remote_element);\n\n            let display = ( gameRulerService.isDisplayed(state.game.ruler) ||\n                            'Ruler' === modesService.currentModeName(state.modes)\n                          );\n            updateOrigin(state.factions, state.game.models,\n                         state.game.ruler, display,\n                         remote_element.origin);\n            updateTarget(state.factions, state.game.models,\n                         state.game.ruler, display,\n                         remote_element.target);\n          }, scope);\n          scope.onStateChangeEvent('Game.map.flipped', () => {\n            updateRulerOnMapFlipped(map, state.game.ruler.local, local_element);\n            updateRulerOnMapFlipped(map, state.game.ruler.remote, remote_element);\n          }, scope);\n        }\n      };\n      function createRulerElement(svgNS, parent) {\n        let group = document.createElementNS(svgNS, 'g');\n        parent.appendChild(group);\n\n        let line = document.createElementNS(svgNS, 'line');\n        line.style['marker-start'] = 'url(#ruler-start)';\n        line.style['marker-end'] = 'url(#ruler-end)';\n        group.appendChild(line);\n\n        let label = labelElementService.create(svgNS, group);\n\n        let origin = document.createElementNS(svgNS, 'circle');\n        origin.classList.add('ruler-origin');\n        origin.setAttribute('cx', '0');\n        origin.setAttribute('cy', '0');\n        origin.setAttribute('r', '0');\n        origin.style.visibility = 'hidden';\n        parent.appendChild(origin);\n\n        let target = document.createElementNS(svgNS, 'circle');\n        target.classList.add('ruler-target');\n        target.setAttribute('cx', '0');\n        target.setAttribute('cy', '0');\n        target.setAttribute('r', '0');\n        target.style.visibility = 'hidden';\n        parent.appendChild(target);\n\n        return { container: group,\n                 line: line,\n                 label: label,\n                 origin: origin,\n                 target: target\n               };\n      }\n      function updateRuler(map, ruler, element) {\n        let map_flipped = gameMapService.isFlipped(map);\n        let zoom_factor = gameMapService.zoomFactor(map);\n        let label_flip_center = {\n          x: (ruler.end.x - ruler.start.x) / 2 + ruler.start.x,\n          y: (ruler.end.y - ruler.start.y) / 2 + ruler.start.y\n        };\n        let label_text = ruler.display ? ruler.length : '';\n        updateLine(ruler.display, ruler, element.line);\n        labelElementService.update(map_flipped,\n                                   zoom_factor,\n                                   label_flip_center,\n                                   label_flip_center,\n                                   label_text,\n                                   element.label);\n      }\n      function updateRulerOnMapFlipped(map, ruler, element) {\n        let label_flip_center = {\n          x: (ruler.end.x - ruler.start.x) / 2 + ruler.start.x,\n          y: (ruler.end.y - ruler.start.y) / 2 + ruler.start.y\n        };\n        labelElementService.updateOnFlipMap(map, label_flip_center, element.label);\n      }\n      function updateLine(visible, ruler, line) {\n        line.style['visibility'] = visible ? 'visible' : 'hidden';\n        line.setAttribute('x1', ruler.start.x+'');\n        line.setAttribute('y1', ruler.start.y+'');\n        line.setAttribute('x2', ruler.end.x+'');\n        line.setAttribute('y2', ruler.end.y+'');\n      }\n      function updateOrigin(factions, models, ruler, display, element) {\n        let origin = gameRulerService.origin(ruler);\n        R.pipeP(\n          function(origin) {\n            if(R.isNil(origin)) {\n              return self.Promise.reject();\n            }\n            return gameModelsService.findStamp(origin, models);\n          },\n          function(origin_model) {\n            if(!display ||\n               R.isNil(origin_model)) {\n              element.style.visibility = 'hidden';\n              return self.Promise.reject();\n            }\n            return R.pipeP(\n              gameFactionsService.getModelInfo$(origin_model.state.info),\n              (info) => {\n                element.setAttribute('cx', origin_model.state.x+'');\n                element.setAttribute('cy', origin_model.state.y+'');\n                element.setAttribute('r', info.base_radius+'');\n                element.style.visibility = 'visible';\n              }\n            )(factions);\n          }\n        )(origin).catch(R.always(null));\n      }\n      function updateTarget(factions, models, ruler, display, element) {\n        let target = gameRulerService.target(ruler);\n        R.pipeP(\n          function(target) {\n            if(R.isNil(target)) {\n              return self.Promise.reject();\n            }\n            return gameModelsService.findStamp(target, models);\n          },\n          function(target_model) {\n            if(!display ||\n               R.isNil(target_model)) {\n              element.style.visibility = 'hidden';\n              return self.Promise.reject();\n            }\n\n            if(gameRulerService.targetReached(ruler)) {\n              element.classList.add('reached');\n            }\n            else {\n              element.classList.remove('reached');\n            }\n\n            return R.pipeP(\n              gameFactionsService.getModelInfo$(target_model.state.info),\n              (info) => {\n                element.setAttribute('cx', target_model.state.x+'');\n                element.setAttribute('cy', target_model.state.y+'');\n                element.setAttribute('r', info.base_radius+'');\n                element.style.visibility = 'visible';\n              }\n            )(factions);\n          }\n        )(target).catch(R.always(null));\n      }\n    }\n  ]);\n"]}