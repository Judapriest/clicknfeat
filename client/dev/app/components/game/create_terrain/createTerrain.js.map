{"version":3,"sources":["createTerrain.es6"],"names":[],"mappings":"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","file":"createTerrain.js","sourcesContent":["(function() {\n  angular.module('clickApp.directives')\n    .directive('clickGameCreateTerrain', clickGameCreateTerrainDirectiveFactory);\n\n  clickGameCreateTerrainDirectiveFactory.$inject = [\n    'gameTerrainInfo',\n    'gameMap',\n  ];\n  function clickGameCreateTerrainDirectiveFactory(gameTerrainInfoModel,\n                                                  gameMapModel) {\n    return {\n      restrict: 'A',\n      link: link\n    };\n\n    function link(scope, parent) {\n      const map = document.getElementById('map');\n      const svgNS = map.namespaceURI;\n\n      console.log('clickCreateTerrain', scope.index);\n      const state = scope.state;\n      const terrain = R.nth(scope.index, state.create.terrains);\n      R.threadP(state.terrains)(\n        gameTerrainInfoModel.getInfoP$(terrain.info),\n        (info) => {\n          const element = createTerrainElement(info, document, svgNS, parent[0]);\n          const is_flipped = gameMapModel.isFlipped(map);\n          setTerrainPosition(info, state.create.base, is_flipped, terrain, element);\n\n          scope.onStateChangeEvent('Game.create.update',\n                                   updateTerrainElement(map, state,\n                                                        info, terrain, element),\n                                   scope);\n        }\n      );\n    }\n    function createTerrainElement(info, document, svgNS, parent) {\n      const element = document.createElementNS(svgNS, 'rect');\n      element.classList.add('create-terrain');\n      element.setAttribute('x', '240');\n      element.setAttribute('y', '240');\n      element.setAttribute('width', info.img.width);\n      element.setAttribute('height', info.img.height);\n      parent.appendChild(element);\n      return element;\n    }\n    function updateTerrainElement(map, state, info, terrain, element) {\n      return () => {\n        const is_flipped = gameMapModel.isFlipped(map);\n        setTerrainPosition(info, state.create.base,\n                           is_flipped, terrain, element);\n      };\n    }\n    function setTerrainPosition(info, base, is_flipped, terrain, element) {\n      const coeff = is_flipped ? -1 : 1;\n      element.setAttribute('x', (base.x + coeff * terrain.x - info.img.width / 2)+'');\n      element.setAttribute('y', (base.y + coeff * terrain.y - info.img.height / 2)+'');\n    }\n  }\n})();\n"]}