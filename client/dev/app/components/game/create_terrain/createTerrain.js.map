{"version":3,"sources":["createTerrain.es6"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,qBAAf,EACG,SADH,CACa,wBADb,EACuC,CACnC,iBADmC,EAEnC,SAFmC,EAGnC,UAAS,sBAAT,EACS,cADT,EACyB;AACvB,SAAO;AACL,cAAU,GAAV;AACA,UAAM,cAAS,KAAT,EAAgB,MAAhB,EAAwB;AAC5B,UAAI,MAAM,SAAS,cAAT,CAAwB,KAAxB,CAAN,CADwB;AAE5B,UAAI,QAAQ,IAAI,YAAJ,CAFgB;;AAI5B,cAAQ,GAAR,CAAY,oBAAZ,EAAkC,MAAM,KAAN,CAAlC,CAJ4B;AAK5B,UAAI,QAAQ,MAAM,KAAN,CALgB;AAM5B,UAAI,UAAU,EAAE,GAAF,CAAM,MAAM,KAAN,EAAa,MAAM,MAAN,CAAa,OAAb,CAAqB,QAArB,CAA7B,CANwB;;AAQ5B,QAAE,KAAF,CACE,uBAAuB,QAAvB,CAAgC,QAAQ,IAAR,CADlC,EAEE,UAAC,IAAD,EAAU;AACR,YAAI,UAAU,qBAAqB,IAArB,EAA2B,QAA3B,EAAqC,KAArC,EAA4C,OAAO,CAAP,CAA5C,CAAV,CADI;AAER,YAAI,aAAa,eAAe,SAAf,CAAyB,GAAzB,CAAb,CAFI;AAGR,2BAAmB,IAAnB,EAAyB,MAAM,MAAN,CAAa,OAAb,CAAqB,IAArB,EAA2B,UAApD,EAAgE,OAAhE,EAAyE,OAAzE,EAHQ;;AAKR,cAAM,kBAAN,CAAyB,oBAAzB,EAA+C,YAAM;AACnD,cAAG,EAAE,KAAF,CAAQ,EAAE,IAAF,CAAO,CAAC,QAAD,EAAU,SAAV,CAAP,EAA6B,KAA7B,CAAR,CAAH,EAAiD,OAAjD;;AAEA,uBAAa,eAAe,SAAf,CAAyB,GAAzB,CAAb,CAHmD;AAInD,6BAAmB,IAAnB,EAAyB,MAAM,MAAN,CAAa,OAAb,CAAqB,IAArB,EAA2B,UAApD,EAAgE,OAAhE,EAAyE,OAAzE,EAJmD;SAAN,EAK5C,KALH,EALQ;OAAV,CAFF,CAcE,MAAM,QAAN,CAdF,CAR4B;KAAxB;GAFR,CADuB;AA4BvB,WAAS,oBAAT,CAA8B,IAA9B,EAAoC,QAApC,EAA8C,KAA9C,EAAqD,MAArD,EAA6D;AAC3D,QAAI,UAAU,SAAS,eAAT,CAAyB,KAAzB,EAAgC,MAAhC,CAAV,CADuD;AAE3D,YAAQ,SAAR,CAAkB,GAAlB,CAAsB,gBAAtB,EAF2D;AAG3D,YAAQ,YAAR,CAAqB,GAArB,EAA0B,KAA1B,EAH2D;AAI3D,YAAQ,YAAR,CAAqB,GAArB,EAA0B,KAA1B,EAJ2D;AAK3D,YAAQ,YAAR,CAAqB,OAArB,EAA8B,KAAK,GAAL,CAAS,KAAT,CAA9B,CAL2D;AAM3D,YAAQ,YAAR,CAAqB,QAArB,EAA+B,KAAK,GAAL,CAAS,MAAT,CAA/B,CAN2D;AAO3D,WAAO,WAAP,CAAmB,OAAnB,EAP2D;AAQ3D,WAAO,OAAP,CAR2D;GAA7D;AAUA,WAAS,kBAAT,CAA4B,IAA5B,EAAkC,IAAlC,EAAwC,UAAxC,EAAoD,OAApD,EAA6D,OAA7D,EAAsE;AACpE,QAAI,QAAQ,aAAa,CAAC,CAAD,GAAK,CAAlB,CADwD;AAEpE,YAAQ,YAAR,CAAqB,GAArB,EAA0B,IAAC,CAAK,CAAL,GAAS,QAAQ,QAAQ,CAAR,GAAY,KAAK,GAAL,CAAS,KAAT,GAAiB,CAAjB,GAAoB,EAAlD,CAA1B,CAFoE;AAGpE,YAAQ,YAAR,CAAqB,GAArB,EAA0B,IAAC,CAAK,CAAL,GAAS,QAAQ,QAAQ,CAAR,GAAY,KAAK,GAAL,CAAS,MAAT,GAAkB,CAAlB,GAAqB,EAAnD,CAA1B,CAHoE;GAAtE;CAvCF,CAJJ","file":"createTerrain.js","sourcesContent":["angular.module('clickApp.directives')\n  .directive('clickGameCreateTerrain', [\n    'gameTerrainInfo',\n    'gameMap',\n    function(gameTerrainInfoService,\n             gameMapService) {\n      return {\n        restrict: 'A',\n        link: function(scope, parent) {\n          var map = document.getElementById('map');\n          var svgNS = map.namespaceURI;\n\n          console.log('clickCreateTerrain', scope.index);\n          let state = scope.state;\n          let terrain = R.nth(scope.index, state.create.terrain.terrains);\n\n          R.pipeP(\n            gameTerrainInfoService.getInfo$(terrain.info),\n            (info) => {\n              var element = createTerrainElement(info, document, svgNS, parent[0]);\n              var is_flipped = gameMapService.isFlipped(map);\n              setTerrainPosition(info, state.create.terrain.base, is_flipped, terrain, element);\n\n              scope.onStateChangeEvent('Game.create.update', () => {\n                if(R.isNil(R.path(['create','terrain'], state))) return;\n\n                is_flipped = gameMapService.isFlipped(map);\n                setTerrainPosition(info, state.create.terrain.base, is_flipped, terrain, element);\n              }, scope);\n            }\n          )(state.terrains);\n        }\n      };\n      function createTerrainElement(info, document, svgNS, parent) {\n        var element = document.createElementNS(svgNS, 'rect');\n        element.classList.add('create-terrain');\n        element.setAttribute('x', '240');\n        element.setAttribute('y', '240');\n        element.setAttribute('width', info.img.width);\n        element.setAttribute('height', info.img.height);\n        parent.appendChild(element);\n        return element;\n      }\n      function setTerrainPosition(info, base, is_flipped, terrain, element) {\n        var coeff = is_flipped ? -1 : 1;\n        element.setAttribute('x', (base.x + coeff * terrain.x - info.img.width / 2)+'');\n        element.setAttribute('y', (base.y + coeff * terrain.y - info.img.height / 2)+'');\n      }\n    }\n  ]);\n"]}