{"version":3,"sources":["createModel.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,qBAAf,EACG,SADH,CACa,sBADb,EACqC,+BADrC,EADU;;AAIV,kCAAgC,OAAhC,GAA0C,CACxC,cADwC,EAExC,SAFwC,CAA1C,CAJU;AAQV,WAAS,+BAAT,CAAyC,mBAAzC,EACyC,cADzC,EACyD;AACvD,WAAO;AACL,gBAAU,GAAV;AACA,YAAM,IAAN;KAFF,CADuD;;AAMvD,aAAS,IAAT,CAAc,KAAd,EAAqB,MAArB,EAA6B;AAC3B,UAAM,MAAM,SAAS,cAAT,CAAwB,KAAxB,CAAN,CADqB;AAE3B,UAAM,QAAQ,IAAI,YAAJ,CAFa;;AAI3B,cAAQ,GAAR,CAAY,kBAAZ,EAAgC,MAAM,KAAN,CAAhC,CAJ2B;AAK3B,UAAM,QAAQ,MAAM,KAAN,CALa;AAM3B,UAAM,QAAQ,EAAE,GAAF,CAAM,MAAM,KAAN,EAAa,MAAM,MAAN,CAAa,MAAb,CAA3B,CANqB;AAO3B,UAAI,mBAAJ,CAP2B;;AAS3B,QAAE,OAAF,CAAU,MAAM,QAAN,CAAV,CACE,oBAAoB,cAApB,CAAmC,MAAM,IAAN,CADrC,EAEE,UAAC,IAAD,EAAU;AACR,kBAAU,mBAAmB,IAAnB,EAAyB,QAAzB,EAAmC,KAAnC,EAA0C,OAAO,CAAP,CAA1C,CAAV,CADQ;AAER,4BAFQ;;AAIR,cAAM,kBAAN,CAAyB,oBAAzB,EAA+C,iBAA/C,EAAkE,KAAlE,EAJQ;OAAV,CAFF,CAQE,MAAM,QAAN,CARF,CAT2B;;AAmB3B,eAAS,iBAAT,GAA6B;AAC3B,YAAG,EAAE,KAAF,CAAQ,EAAE,IAAF,CAAO,CAAC,QAAD,EAAU,QAAV,CAAP,EAA4B,KAA5B,CAAR,CAAH,EAAgD,OAAhD;;AAEA,YAAM,aAAa,eAAe,SAAf,CAAyB,GAAzB,CAAb,CAHqB;AAI3B,yBAAiB,MAAM,MAAN,CAAa,IAAb,EAAmB,UAApC,EAAgD,KAAhD,EAAuD,OAAvD,EAJ2B;OAA7B;KAnBF;AA0BA,aAAS,kBAAT,CAA4B,IAA5B,EAAkC,QAAlC,EAA4C,KAA5C,EAAmD,MAAnD,EAA2D;AACzD,UAAM,UAAU,SAAS,eAAT,CAAyB,KAAzB,EAAgC,QAAhC,CAAV,CADmD;AAEzD,cAAQ,SAAR,CAAkB,GAAlB,CAAsB,cAAtB,EAFyD;AAGzD,cAAQ,YAAR,CAAqB,IAArB,EAA2B,KAA3B,EAHyD;AAIzD,cAAQ,YAAR,CAAqB,IAArB,EAA2B,KAA3B,EAJyD;AAKzD,cAAQ,YAAR,CAAqB,GAArB,EAA0B,KAAK,WAAL,CAA1B,CALyD;AAMzD,aAAO,WAAP,CAAmB,OAAnB,EANyD;AAOzD,aAAO,OAAP,CAPyD;KAA3D;AASA,aAAS,gBAAT,CAA0B,IAA1B,EAAgC,UAAhC,EAA4C,KAA5C,EAAmD,OAAnD,EAA4D;AAC1D,UAAM,QAAQ,aAAa,CAAC,CAAD,GAAK,CAAlB,CAD4C;AAE1D,cAAQ,YAAR,CAAqB,IAArB,EAA2B,IAAC,CAAK,CAAL,GAAS,QAAQ,MAAM,CAAN,GAAS,EAA3B,CAA3B,CAF0D;AAG1D,cAAQ,YAAR,CAAqB,IAArB,EAA2B,IAAC,CAAK,CAAL,GAAS,QAAQ,MAAM,CAAN,GAAS,EAA3B,CAA3B,CAH0D;KAA5D;GA1CF;CARD,CAAD","file":"createModel.js","sourcesContent":["(function() {\n  angular.module('clickApp.directives')\n    .directive('clickGameCreateModel', gameCreateModelDirectiveFactory);\n\n  gameCreateModelDirectiveFactory.$inject = [\n    'gameFactions',\n    'gameMap',\n  ];\n  function gameCreateModelDirectiveFactory(gameFactionsService,\n                                           gameMapService) {\n    return {\n      restrict: 'A',\n      link: link\n    };\n\n    function link(scope, parent) {\n      const map = document.getElementById('map');\n      const svgNS = map.namespaceURI;\n\n      console.log('clickCreateModel', scope.index);\n      const state = scope.state;\n      const model = R.nth(scope.index, state.create.models);\n      let element;\n\n      R.threadP(state.factions)(\n        gameFactionsService.getModelInfoP$(model.info),\n        (info) => {\n          element = createModelElement(info, document, svgNS, parent[0]);\n          updateCreateModel();\n\n          scope.onStateChangeEvent('Game.create.update', updateCreateModel, scope);\n        }\n      )(state.factions);\n\n      function updateCreateModel() {\n        if(R.isNil(R.path(['create','models'], state))) return;\n\n        const is_flipped = gameMapService.isFlipped(map);\n        setModelPosition(state.create.base, is_flipped, model, element);\n      }\n    }\n    function createModelElement(info, document, svgNS, parent) {\n      const element = document.createElementNS(svgNS, 'circle');\n      element.classList.add('create-model');\n      element.setAttribute('cx', '240');\n      element.setAttribute('cy', '240');\n      element.setAttribute('r', info.base_radius);\n      parent.appendChild(element);\n      return element;\n    }\n    function setModelPosition(base, is_flipped, model, element) {\n      const coeff = is_flipped ? -1 : 1;\n      element.setAttribute('cx', (base.x + coeff * model.x)+'');\n      element.setAttribute('cy', (base.y + coeff * model.y)+'');\n    }\n  }\n})();\n"]}