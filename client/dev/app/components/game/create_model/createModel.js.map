{"version":3,"sources":["createModel.es6"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,qBAAf,EACG,SADH,CACa,sBADb,EACqC,CACjC,cADiC,EAEjC,SAFiC,EAGjC,UAAS,mBAAT,EACS,cADT,EACyB;AACvB,SAAO;AACL,cAAU,GAAV;AACA,UAAM,cAAS,KAAT,EAAgB,MAAhB,EAAwB;AAC5B,UAAI,MAAM,SAAS,cAAT,CAAwB,KAAxB,CAAN,CADwB;AAE5B,UAAI,QAAQ,IAAI,YAAJ,CAFgB;;AAI5B,cAAQ,GAAR,CAAY,kBAAZ,EAAgC,MAAM,KAAN,CAAhC,CAJ4B;AAK5B,UAAI,QAAQ,MAAM,KAAN,CALgB;AAM5B,UAAI,QAAQ,EAAE,GAAF,CAAM,MAAM,KAAN,EAAa,MAAM,MAAN,CAAa,KAAb,CAAmB,MAAnB,CAA3B,CANwB;;AAQ5B,QAAE,KAAF,CACE,oBAAoB,aAApB,CAAkC,MAAM,IAAN,CADpC,EAEE,UAAC,IAAD,EAAU;AACR,YAAI,UAAU,mBAAmB,IAAnB,EAAyB,QAAzB,EAAmC,KAAnC,EAA0C,OAAO,CAAP,CAA1C,CAAV,CADI;AAER,YAAI,aAAa,eAAe,SAAf,CAAyB,GAAzB,CAAb,CAFI;AAGR,yBAAiB,MAAM,MAAN,CAAa,KAAb,CAAmB,IAAnB,EAAyB,UAA1C,EAAsD,KAAtD,EAA6D,OAA7D,EAHQ;;AAKR,cAAM,kBAAN,CAAyB,oBAAzB,EAA+C,YAAM;AACnD,cAAG,EAAE,KAAF,CAAQ,EAAE,IAAF,CAAO,CAAC,QAAD,EAAU,OAAV,CAAP,EAA2B,KAA3B,CAAR,CAAH,EAA+C,OAA/C;;AAEA,uBAAa,eAAe,SAAf,CAAyB,GAAzB,CAAb,CAHmD;AAInD,2BAAiB,MAAM,MAAN,CAAa,KAAb,CAAmB,IAAnB,EAAyB,UAA1C,EAAsD,KAAtD,EAA6D,OAA7D,EAJmD;SAAN,EAK5C,KALH,EALQ;OAAV,CAFF,CAcE,MAAM,QAAN,CAdF,CAR4B;KAAxB;GAFR,CADuB;AA4BvB,WAAS,kBAAT,CAA4B,IAA5B,EAAkC,QAAlC,EAA4C,KAA5C,EAAmD,MAAnD,EAA2D;AACzD,QAAI,UAAU,SAAS,eAAT,CAAyB,KAAzB,EAAgC,QAAhC,CAAV,CADqD;AAEzD,YAAQ,SAAR,CAAkB,GAAlB,CAAsB,cAAtB,EAFyD;AAGzD,YAAQ,YAAR,CAAqB,IAArB,EAA2B,KAA3B,EAHyD;AAIzD,YAAQ,YAAR,CAAqB,IAArB,EAA2B,KAA3B,EAJyD;AAKzD,YAAQ,YAAR,CAAqB,GAArB,EAA0B,KAAK,WAAL,CAA1B,CALyD;AAMzD,WAAO,WAAP,CAAmB,OAAnB,EANyD;AAOzD,WAAO,OAAP,CAPyD;GAA3D;AASA,WAAS,gBAAT,CAA0B,IAA1B,EAAgC,UAAhC,EAA4C,KAA5C,EAAmD,OAAnD,EAA4D;AAC1D,QAAI,QAAQ,aAAa,CAAC,CAAD,GAAK,CAAlB,CAD8C;AAE1D,YAAQ,YAAR,CAAqB,IAArB,EAA2B,IAAC,CAAK,CAAL,GAAS,QAAQ,MAAM,CAAN,GAAS,EAA3B,CAA3B,CAF0D;AAG1D,YAAQ,YAAR,CAAqB,IAArB,EAA2B,IAAC,CAAK,CAAL,GAAS,QAAQ,MAAM,CAAN,GAAS,EAA3B,CAA3B,CAH0D;GAA5D;CAtCF,CAJJ","file":"createModel.js","sourcesContent":["angular.module('clickApp.directives')\n  .directive('clickGameCreateModel', [\n    'gameFactions',\n    'gameMap',\n    function(gameFactionsService,\n             gameMapService) {\n      return {\n        restrict: 'A',\n        link: function(scope, parent) {\n          var map = document.getElementById('map');\n          var svgNS = map.namespaceURI;\n\n          console.log('clickCreateModel', scope.index);\n          let state = scope.state;\n          let model = R.nth(scope.index, state.create.model.models);\n\n          R.pipeP(\n            gameFactionsService.getModelInfo$(model.info),\n            (info) => {\n              let element = createModelElement(info, document, svgNS, parent[0]);\n              let is_flipped = gameMapService.isFlipped(map);\n              setModelPosition(state.create.model.base, is_flipped, model, element);\n\n              scope.onStateChangeEvent('Game.create.update', () => {\n                if(R.isNil(R.path(['create','model'], state))) return;\n\n                is_flipped = gameMapService.isFlipped(map);\n                setModelPosition(state.create.model.base, is_flipped, model, element);\n              }, scope);\n            }\n          )(state.factions);\n        }\n      };\n      function createModelElement(info, document, svgNS, parent) {\n        var element = document.createElementNS(svgNS, 'circle');\n        element.classList.add('create-model');\n        element.setAttribute('cx', '240');\n        element.setAttribute('cy', '240');\n        element.setAttribute('r', info.base_radius);\n        parent.appendChild(element);\n        return element;\n      }\n      function setModelPosition(base, is_flipped, model, element) {\n        var coeff = is_flipped ? -1 : 1;\n        element.setAttribute('cx', (base.x + coeff * model.x)+'');\n        element.setAttribute('cy', (base.y + coeff * model.y)+'');\n      }\n    }\n  ]);\n"]}