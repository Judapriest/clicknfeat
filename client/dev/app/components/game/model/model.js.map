{"version":3,"sources":["model.es6"],"names":[],"mappings":"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","file":"model.js","sourcesContent":["angular.module('clickApp.directives')\n  .directive('clickGameModel', [\n    'gameMap',\n    'gameFactions',\n    'gameModels',\n    'gameModelSelection',\n    'gameScenario',\n    'model',\n    'labelElement',\n    'clickGameModelArea',\n    'clickGameModelAura',\n    'clickGameModelBase',\n    'clickGameModelCharge',\n    'clickGameModelCounter',\n    'clickGameModelDamage',\n    'clickGameModelIcon',\n    'clickGameModelLoS',\n    'clickGameModelMelee',\n    function(\n      gameMapService,\n      gameFactionsService,\n      gameModelsService,\n      gameModelSelectionService,\n      gameScenarioService,\n      modelService,\n      labelElementService,\n      clickGameModelAreaService,\n      clickGameModelAuraService,\n      clickGameModelBaseService,\n      clickGameModelChargeService,\n      clickGameModelCounterService,\n      clickGameModelDamageService,\n      clickGameModelIconService,\n      clickGameModelLoSService,\n      clickGameModelMeleeService\n    ) {\n      let clickGameModeDirective = {\n        restrict: 'A',\n        link: function(scope, parent) {\n          let state = scope.state;\n          gameFactionsService\n            .getModelInfo(scope.model.state.info, state.factions)\n            .catch((reason) => {\n              console.error('clickGameModel', reason);\n              return self.Promise.reject(reason);\n            })\n            .then((info) => {\n              console.log('gameModel', scope.model, info);\n\n              return buildModelElement(state, info, scope.model, parent[0], scope);\n            });\n        }\n      };\n      function buildModelElement(state, info, model, container, scope) {\n        let element = createModelElement(info, model, container);\n\n        scope.$on('$destroy', gameModelOnDestroy(element));\n        scope.onStateChangeEvent('Game.map.flipped',\n                                 gameModelOnMapFlipped(info, scope, element),\n                                 scope);\n        let updateModel = gameModelOnUpdate(state, info, scope, element);\n        scope.onStateChangeEvent(`Game.model.change.${model.state.stamp}`,\n                                 updateModel, scope);\n        updateModel();\n\n        scope.onStateChangeEvent('Game.model.selection.local.updateSingle',\n                                 onUpdateSingleModelSelection(state.factions, model, element),\n                                 scope);\n\n        scope.onStateChangeEvent('Game.template.selection.local.updateSingle',\n                                 onUpdateSingleTemplateSelection(state.factions, model, element),\n                                 scope);\n\n        let onUpdateScenarioAura = withModel(scope, (model) => {\n          updateScenarioAura(state, info, model, scope, element);\n        });\n        scope.onStateChangeEvent('Game.scenario.refresh',\n                                 onUpdateScenarioAura, scope);\n        scope.onStateChangeEvent('Game.scenario.change',\n                                 onUpdateScenarioAura, scope);\n      }\n      function createModelElement(info, model, parent) {\n        let map = document.getElementById('map');\n        let under_models_container = document.getElementById('game-under-models');\n        let over_models_container = document.getElementById('game-over-models');\n        let svgNS = map.namespaceURI;\n\n        let aura = clickGameModelAuraService.create(svgNS, parent);\n        let melee = clickGameModelMeleeService.create(svgNS, parent);\n        let base = clickGameModelBaseService.create(svgNS, info, model, parent);\n        let damage = clickGameModelDamageService.create(svgNS, info, parent);\n        let los = clickGameModelLoSService.create(svgNS, info, parent);\n        let label = labelElementService.create(svgNS, over_models_container);\n        let counter = clickGameModelCounterService.create(svgNS, over_models_container, parent);\n        let unit = labelElementService.create(svgNS, parent);\n        let icon = clickGameModelIconService.create(svgNS, parent);\n        let area = clickGameModelAreaService.create(svgNS, parent);\n        let charge = clickGameModelChargeService.create(svgNS,\n                                                        under_models_container,\n                                                        over_models_container,\n                                                        parent);\n\n        return { container: parent,\n                 aura: aura,\n                 base: base,\n                 damage: damage,\n                 los: los,\n                 label: label,\n                 counter: counter,\n                 unit: unit,\n                 icon: icon,\n                 area: area,\n                 melee: melee,\n                 charge: charge\n               };\n      }\n      function gameModelOnDestroy(element) {\n        return () => {\n          console.log('gameModelOnDestroy');\n\n          let under_models_container = document.getElementById('game-under-models');\n          let over_models_container = document.getElementById('game-over-models');\n          over_models_container.removeChild(element.label.label);\n          clickGameModelCounterService.cleanup(under_models_container,\n                                               over_models_container,\n                                               element.counter);\n          clickGameModelChargeService.cleanup(under_models_container,\n                                              over_models_container,\n                                              element.charge);\n        };\n      }\n      function withModel(scope, fn) {\n        return () => {\n          R.pipeP(\n            () => {\n              return gameModelsService\n                .findStamp(scope.model.state.stamp, scope.state.game.models);\n            },\n            fn\n          )();\n        };\n      }\n      function gameModelOnMapFlipped(info, scope, element) {\n        return withModel(scope, (model) => {\n          let map = document.getElementById('map');\n\n          let label_center = computeLabelCenter(info, model);\n          labelElementService.updateOnFlipMap(map,\n                                              label_center.flip,\n                                              element.label);\n          labelElementService.updateOnFlipMap(map,\n                                              model.state,\n                                              element.counter[0]);\n          if(modelService.isCharging(model) ||\n             modelService.isPlacing(model)) {\n            labelElementService.updateOnFlipMap(map,\n                                                model.state.cha.s,\n                                                element.charge[2]);\n          }\n        });\n      }\n      function onUpdateSingleModelSelection(factions, model, element) {\n        return (event, sel_stamp, sel_model) => {\n          // console.log('onUpdateSingleModelSelection',\n          //             sel_stamp, model.state.stamp);\n          if(R.isNil(sel_model) ||\n             sel_stamp === model.state.stamp) {\n            element.container.classList.remove('overlap');\n            element.container.classList.remove('b2b');\n            return;\n          }\n          R.pipeP(\n            modelService.distanceTo$(factions, sel_model),\n            (dist) => {\n              if(dist < -0.1) {\n                element.container.classList.add('overlap');\n                element.container.classList.remove('b2b');\n                return;\n              }\n              else if(dist < 0.1) {\n                element.container.classList.remove('overlap');\n                element.container.classList.add('b2b');\n                return;\n              }\n              else {\n                element.container.classList.remove('overlap');\n                element.container.classList.remove('b2b');\n              }\n            }\n          )(model);\n        };\n      }\n      function onUpdateSingleTemplateSelection(factions, model, element) {\n        return (event, sel_stamp, sel_temp) => {\n          // console.log('onUpdateSingleAoTemplateSelection',\n          //             sel_stamp, model.state.stamp);\n          if(R.isNil(sel_temp)) {\n            element.container.classList.remove('under-aoe');\n            return;\n          }\n          R.pipeP(\n            modelService.distanceToAoE$(factions, sel_temp),\n            (dist) => {\n              if(dist <= 0) {\n                element.container.classList.add('under-aoe');\n              }\n              else {\n                element.container.classList.remove('under-aoe');\n              }\n            }\n          )(model);\n        };\n      }\n      function gameModelOnUpdate(state, info,\n                                 scope, element) {\n        return withModel(scope, (model) => {\n          let map = document.getElementById('map');\n          let map_flipped = gameMapService.isFlipped(map);\n          let zoom_factor = gameMapService.zoomFactor(map);\n\n          let is_wreck = modelService.isWreckDisplayed(model);\n          (is_wreck ?\n           modelService.getWreckImage(state.factions, model) :\n           modelService.getImage(state.factions, model))\n            .then((img) => {\n              let label_text = modelService.fullLabel(model);\n              let label_center = computeLabelCenter(info, model);\n\n              updateModelPosition(img, model, element);\n              updateModelSelection(state.game.model_selection,\n                                   model, element);\n              updateScenarioAura(state, info, model, scope, element);\n              clickGameModelAuraService.update(info, model, img, element.aura);\n              clickGameModelBaseService.update(info, model, img, element.base);\n              clickGameModelDamageService.update(info, model, img, element.damage);\n              labelElementService.update(map_flipped,\n                                         zoom_factor,\n                                         label_center.flip,\n                                         label_center.text,\n                                         label_text,\n                                         element.label);\n              clickGameModelCounterService.update(map_flipped, zoom_factor,\n                                                  info, model, img, element.counter);\n              updateUnit(map_flipped, zoom_factor,\n                         img, info, model, element);\n              clickGameModelIconService.update(info, model, img, element.icon);\n              clickGameModelAreaService.update(state.factions, info, model, img, element.area);\n              clickGameModelMeleeService.update(info, model, img, element.melee);\n              clickGameModelChargeService.update(map_flipped, zoom_factor,\n                                                 state, info, model, img, element.charge);\n            });\n        });\n      }\n      function updateModelPosition(img, model, element) {\n        element.container.setAttribute('transform', [\n          'translate(',\n          model.state.x-img.width/2,\n          ',',\n          model.state.y-img.height/2,\n          ') rotate(',\n          model.state.r,\n          ',',\n          img.width/2,\n          ',',\n          img.height/2,\n          ')'\n        ].join(''));\n      }\n      function updateModelSelection(selection, model, element) {\n        let container = element.container;\n        let stamp = model.state.stamp;\n        if(gameModelSelectionService.in('local', stamp, selection)) {\n          container.classList.add('local-selection');\n        }\n        else {\n          container.classList.remove('local-selection');\n        }\n        if(gameModelSelectionService.in('remote', stamp, selection)) {\n          container.classList.add('remote-selection');\n        }\n        else {\n          container.classList.remove('remote-selection');\n        }\n        if(gameModelSelectionService.inSingle('local', stamp, selection)) {\n          container.classList.add('single-local');\n          container.classList.remove('single-remote');\n        }\n        else if(gameModelSelectionService.inSingle('remote', stamp, selection)) {\n          container.classList.remove('single-local');\n          container.classList.add('single-remote');\n        }\n        else {\n          container.classList.remove('single-local');\n          container.classList.remove('single-remote');\n        }\n      }\n      function updateScenarioAura(state, info, model, scope, element) {\n        let circle = R.pipe(\n          R.pick(['x','y']),\n          R.assoc('radius', info.base_radius)\n        )(model.state);\n\n        if(scope.stateIs('game.setup') &&\n           R.exists(state.game.scenario) &&\n           gameScenarioService.isContesting(circle, state.game.scenario)) {\n          element.container.classList.add('contesting');\n        }\n        else {\n          element.container.classList.remove('contesting');\n        }\n        if(scope.stateIs('game.setup') &&\n           R.exists(state.game.scenario) &&\n           'wardude' === info.type &&\n           gameScenarioService.isKillboxing(circle, state.game.scenario)) {\n          element.container.classList.add('killboxing');\n        }\n        else {\n          element.container.classList.remove('killboxing');\n        }\n      }\n      function updateUnit(map_flipped, zoom_factor, img, info, model, element) {\n        let unit = modelService.unit(model);\n        unit = R.exists(unit) ? unit : '';\n\n        let unit_text = modelService.isUnitDisplayed(model) ? unit+'' : '';\n        unit_text = R.length(unit_text) > 0 ? 'U'+unit_text : unit_text;\n\n        let unit_center = computeUnitCenter(img, info, model);\n        labelElementService.update(map_flipped,\n                                   zoom_factor,\n                                   unit_center.flip,\n                                   unit_center.text,\n                                   unit_text,\n                                   element.unit);\n      }\n      function computeLabelCenter(info, model) {\n        let label_text_center_y_down = model.state.y + info.base_radius + 6;\n        let label_text_center_y_up = model.state.y - info.base_radius - 2;\n        let orientation = ((model.state.r % 360) + 360) % 360;\n        let model_looking_down =  orientation > 90 && orientation < 270;\n        let label_text_center = { x: model.state.x,\n                                  y: model_looking_down ?\n                                  label_text_center_y_down : label_text_center_y_up\n                                };\n        let label_flip_center = { x: label_text_center.x,\n                                  y: label_text_center.y - 2\n                                };\n        return { text: label_text_center,\n                 flip: label_flip_center\n               };\n      }\n      function computeUnitCenter(img, info) {\n        let counter_flip_center = { x: img.width/2, y: img.height/2 };\n        let counter_text_center = { x: counter_flip_center.x - info.base_radius*0.7 - 5,\n                                    y: counter_flip_center.y - info.base_radius*0.7 - 5 };\n        return { text: counter_text_center,\n                 flip: counter_flip_center\n               };\n      }\n      return clickGameModeDirective;\n    }\n  ])\n  .directive('clickGameModelsList', [\n    function() {\n      return {\n        restrict: 'A',\n        templateUrl: 'partials/game/models_list.html',\n        scope: true,\n        link: function(scope, element) {\n          scope.type = element[0].getAttribute('click-game-models-list');\n          scope.digestOnStateChangeEvent('Game.model.create', scope);\n          console.log('clickGameModelsList', scope.type);\n        }\n      };\n    }\n  ]);\n"]}