{"version":3,"sources":["charge.es6"],"names":[],"mappings":"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","file":"charge.js","sourcesContent":["angular.module('clickApp.directives')\n  .factory('clickGameModelCharge', [\n    'labelElement',\n    'model',\n    'point',\n    'gameFactions',\n    'gameModels',\n    'gameModelSelection',\n    function(labelElementService,\n             modelService,\n             pointService,\n             gameFactionsService,\n             gameModelsService,\n             gameModelSelectionService) {\n      return {\n        create: function clickGameModelChargeCreate(svgNS,\n                                                    under_models_container,\n                                                    over_models_container) {\n          let charge_path = document.createElementNS(svgNS, 'rect');\n          charge_path.style.visibility = 'hidden';\n          charge_path.classList.add('model-charge-path');\n          under_models_container.appendChild(charge_path);\n\n          let charge_target = document.createElementNS(svgNS, 'circle');\n          charge_target.style.visibility = 'hidden';\n          charge_target.classList.add('model-charge-target');\n          over_models_container.appendChild(charge_target);\n\n          let charge_label = labelElementService.create(svgNS, over_models_container);\n\n          return [ charge_path, charge_target, charge_label ];\n        },\n        cleanup: function clickGameModelCharge(under_models_container,\n                                               over_models_container,\n                                               element) {\n          let [ charge_path, charge_target, charge_label ] = element;\n\n          over_models_container.removeChild(charge_label.label);\n          over_models_container.removeChild(charge_target);\n          under_models_container.removeChild(charge_path);\n        },\n        update: function clickGameModelChargeUpdate(map_flipped, zoom_factor,\n                                                    state, info, model, img, element) {\n          let [ charge_path, charge_target, charge_label ] = element;\n\n          if(!modelService.isCharging(model)  &&\n             !modelService.isPlacing(model)) {\n            charge_path.style.visibility = 'hidden';\n            charge_target.style.visibility = 'hidden';\n            labelElementService.update(map_flipped,\n                                       zoom_factor,\n                                       model.state,\n                                       model.state,\n                                       '',\n                                       charge_label);\n            return;\n          }\n          let max_dist;\n          if(modelService.isCharging(model)) {\n            let charge_length = pointService.distanceTo(model.state, model.state.cha.s);\n            let charge_dir = model.state.cha.s.r;\n            let charge_middle = pointService.translateInDirection(400,\n                                                                  charge_dir,\n                                                                  model.state.cha.s);\n            charge_path.setAttribute('width', (info.base_radius*2)+'');\n            charge_path.setAttribute('height', '800');\n            charge_path.setAttribute('x', (charge_middle.x-info.base_radius)+'');\n            charge_path.setAttribute('y', (charge_middle.y-400)+'');\n            charge_path.setAttribute('transform', [\n              'rotate(',\n              charge_dir,\n              ',',\n              charge_middle.x,\n              ',',\n              charge_middle.y,\n              ')'\n            ].join(''));\n            charge_path.style.visibility = 'visible';\n\n            let label = (Math.round(charge_length*10)/100)+'\"';\n            max_dist = modelService.chargeMaxLength(model);\n            if(R.exists(max_dist)) {\n              label += '/'+max_dist+'\"';\n            }\n            labelElementService.update(map_flipped,\n                                       zoom_factor,\n                                       model.state.cha.s,\n                                       model.state.cha.s,\n                                       label,\n                                       charge_label);\n\n            if(gameModelSelectionService\n               .in('local', model.state.stamp, state.game.model_selection) &&\n               R.exists(model.state.cha.t)) {\n              R.pipeP(\n                gameModelsService.findStamp$(model.state.cha.t),\n                (target) => {\n                  charge_target.setAttribute('cx', (target.state.x)+'');\n                  charge_target.setAttribute('cy', (target.state.y)+'');\n\n                  let melee_range = 0;\n                  if(modelService.isMeleeDisplayed('mm', model)) {\n                    melee_range = 5;\n                  }\n                  if(modelService.isMeleeDisplayed('mr', model)) {\n                    melee_range = 20;\n                  }\n                  if(modelService.isMeleeDisplayed('ms', model)) {\n                    melee_range = 40;\n                  }\n                  let distance_to_target = pointService.distanceTo(target.state, model.state);\n                  return R.pipeP(\n                    gameFactionsService.getModelInfo$(target.state.info),\n                    (target_info) => {\n                      charge_target.setAttribute('r', (target_info.base_radius)+'');\n\n                      if(distance_to_target <= melee_range + info.base_radius + target_info.base_radius) {\n                        charge_target.classList.add('reached');\n                      }\n                      else {\n                        charge_target.classList.remove('reached');\n                      }\n                      charge_target.style.visibility = 'visible';\n                    }\n                  )(state.factions);\n                }\n              )(state.game.models);\n            }\n          }\n          if(modelService.isPlacing(model)) {\n            let place_length = pointService.distanceTo(model.state, model.state.pla.s);\n            let place_dir = model.state.pla.s.r;\n            let place_middle = pointService.translateInDirection(400,\n                                                                 place_dir,\n                                                                 model.state.pla.s);\n            charge_path.setAttribute('width', (info.base_radius*2)+'');\n            charge_path.setAttribute('height', '800');\n            charge_path.setAttribute('x', (place_middle.x-info.base_radius)+'');\n            charge_path.setAttribute('y', (place_middle.y-400)+'');\n            charge_path.setAttribute('transform', [\n              'rotate(',\n              place_dir,\n              ',',\n              place_middle.x,\n              ',',\n              place_middle.y,\n              ')'\n            ].join(''));\n            charge_path.style.visibility = 'visible';\n\n            let place_label = (Math.round(place_length*10)/100)+'\"';\n            let within = modelService.placeWithin(model);\n            max_dist = modelService.placeMaxLength(model);\n            if(R.exists(max_dist)) {\n              place_label += '/'+(within ? 'w.' : '')+max_dist+'\"';\n            }\n            labelElementService.update(map_flipped,\n                                       zoom_factor,\n                                       model.state.pla.s,\n                                       model.state.pla.s,\n                                       place_label,\n                                       charge_label);\n\n          }\n          charge_target.style.visibility = 'hidden';\n        }\n      };\n    }\n  ]);\n"]}