{"version":3,"sources":["modelDamage.es6"],"names":[],"mappings":"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","file":"modelDamage.js","sourcesContent":["(function() {\n  angular.module('clickApp.directives')\n    .controller('clickGameModelDamageCtrl', gameModelDamageCtrl)\n    .directive('clickGameModelDamage', gameModelDamageDirectiveFactory);\n\n  gameModelDamageCtrl.$inject = [\n    '$rootScope',\n    '$scope',\n    'gameModels',\n  ];\n  function gameModelDamageCtrl($rootScope,\n                               $scope,\n                               gameModelsModel) {\n    const vm = this;\n    console.log('init clickModelDamageCtrl', $scope.info, $scope.state);\n    const state = $rootScope.state;\n\n    vm.range = range;\n    vm.warriorBoxClass = warriorBoxClass;\n    vm.fieldBoxClass = fieldBoxClass;\n    vm.gridBoxClass = gridBoxClass;\n    vm.doResetDamage = doResetDamage;\n    vm.doWarriorDamage = doWarriorDamage;\n    vm.doFieldDamage = doFieldDamage;\n    vm.doGridDamage = doGridDamage;\n    vm.doGridColDamage = doGridColDamage;\n\n    activate();\n\n    function activate() {\n      $rootScope\n        .onStateChangeEvent('Game.models.change',\n                            updateModel,\n                            $scope);\n    }\n    function range(n) {\n      return R.range(0, n);\n    }\n    function warriorBoxClass(i) {\n      if(R.isNil(vm.state) ||\n         R.isNil(vm.state.dmg)) return '';\n      return ( vm.state && vm.state.dmg.n > i\n               ? 'mark'\n               : ''\n             );\n    }\n    function fieldBoxClass(col, line) {\n      if(R.isNil(vm.state) ||\n         R.isNil(vm.state.dmg)) return '';\n      return ( vm.state &&\n               vm.state.dmg.f > line * vm.info.field/2 + col\n               ? 'mark'\n               : ''\n             );\n    }\n    function gridBoxClass(col, line) {\n      if(R.isNil(vm.state) ||\n         R.isNil(vm.state.dmg)) return '';\n      return ( !vm.info[col][line]\n               ? 'none'\n               : ( vm.state && vm.state.dmg[col][line] === 1\n                   ? 'mark'\n                   : ''\n                 )\n             );\n    }\n    function doResetDamage() {\n      if(R.isNil(vm.state)) return;\n\n      $rootScope\n        .stateEvent('Game.command.execute',\n                    'onModels', [\n                      'resetDamage',\n                      [],\n                      [vm.state.stamp]\n                    ]);\n    }\n    function doWarriorDamage(i) {\n      if(R.isNil(vm.state)) return;\n\n      $rootScope\n        .stateEvent('Game.command.execute',\n                    'onModels', [\n                      'setWarriorDamage',\n                      [state.factions, i],\n                      [vm.state.stamp]\n                    ]);\n    }\n    function doFieldDamage(i) {\n      if(R.isNil(vm.state)) return;\n\n      $rootScope\n        .stateEvent('Game.command.execute',\n                    'onModels', [\n                      'setFieldDamage',\n                      [state.factions, i],\n                      [vm.state.stamp]\n                    ]);\n    }\n    function doGridDamage(line, col) {\n      if(R.isNil(vm.state)) return;\n      if(R.isNil(vm.info[col][line])) return;\n\n      $rootScope\n        .stateEvent('Game.command.execute',\n                    'onModels', [\n                      'setGridDamage',\n                      [state.factions, line, col],\n                      [vm.state.stamp]\n                    ]);\n    }\n    function doGridColDamage(col) {\n      if(R.isNil(vm.state)) return;\n\n      $rootScope\n        .stateEvent('Game.command.execute',\n                    'onModels', [\n                      'setGridColDamage',\n                      [state.factions, col],\n                      [vm.state.stamp]\n                    ]);\n    }\n    function updateModel() {\n      if(R.isNil(vm.state)) return;\n\n      R.thread($rootScope.state)(\n        R.path(['game','models']),\n        gameModelsModel.findStamp$(vm.state.stamp),\n        R.ifElse(\n          R.exists,\n          (model) => {\n            vm.state = model.state;\n            $scope.$digest();\n          },\n          () => {\n            vm.state = {};\n            $scope.$digest();\n          }\n        )\n      );\n    }\n  }\n\n  gameModelDamageDirectiveFactory.$inject = [];\n  function gameModelDamageDirectiveFactory() {\n    return {\n      restrict: 'E',\n      scope: {},\n      controller: 'clickGameModelDamageCtrl',\n      controllerAs: 'damage',\n      bindToController: {\n        info: '=',\n        state: '='\n      },\n      templateUrl: 'app/components/game/model/damage/model_damage.html',\n      link: link\n    };\n    function link(scope) {\n      console.log('gameModelDamage', scope);\n    }\n  }\n})();\n"]}