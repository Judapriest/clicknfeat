{"version":3,"sources":["appCtrl.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,sBAAf,EACG,UADH,CACc,SADd,EACyB,OADzB,EADU;;AAIV,UAAQ,OAAR,GAAkB,CAChB,YADgB,EAEhB,QAFgB,EAGhB,OAHgB,EAIhB,MAJgB,CAAlB,CAJU;AAUV,WAAS,OAAT,CAAiB,UAAjB,EACiB,MADjB,EAEiB,YAFjB,EAGiB,SAHjB,EAG4B;AAC1B,YAAQ,GAAR,CAAY,cAAZ,EAD0B;;AAG1B,QAAM,KAAK,IAAL,CAHoB;AAI1B,OAAG,WAAH,GAAiB,WAAjB,CAJ0B;AAK1B,OAAG,OAAH,GAAa,OAAb,CAL0B;AAM1B,OAAG,YAAH,GAAkB,YAAlB,CAN0B;;AAQ1B,eAAW,KAAX,GAAmB,aAAa,MAAb,EAAnB,CAR0B;AAS1B,eAAW,UAAX,GAAwB,UAAxB;;;;;;;;AAT0B,cAiB1B,CAAW,SAAX,GAAuB,SAAvB,CAjB0B;;AAmB1B,eAnB0B;;AAqB1B,aAAS,UAAT,GAA6B;wCAAN;;OAAM;;AAC3B,aAAO,aAAa,WAAb,CAAyB,IAAzB,EAA+B,WAAW,KAAX,CAAtC,CAD2B;KAA7B;;;;;;;;;;;;;;;;;;;;;;;;AArB0B,aA+CjB,WAAT,GAAuB;AACrB,aAAO,EAAE,IAAF,CAAO,CAAC,SAAD,EAAY,MAAZ,EAAoB,UAApB,CAAP,EAAyC,MAAzC,CAAP,CADqB;KAAvB;AAGA,aAAS,OAAT,CAAiB,IAAjB,EAAuB;AACrB,aAAO,OAAO,EAAP,CAAU,IAAV,CAAP,CADqB;KAAvB;AAGA,aAAS,YAAT,CAAsB,KAAtB,EAA6B;AAC3B,aAAO,KAAK,OAAO,OAAP,CAAe,IAAf,CAAoB,OAApB,CAA4B,KAA5B,CAAL,CADoB;KAA7B;AAGA,aAAS,SAAT,GAA4B;yCAAN;;OAAM;;AAC1B,WAAK,UAAL,CAAgB,YAAM;AACpB,eAAO,EAAP,CAAU,KAAV,CAAgB,MAAhB,EAAwB,IAAxB,EADoB;OAAN,EAEb,GAFH,EAD0B;KAA5B;;;;;AAxD0B,aAiEjB,QAAT,GAAoB;AAClB,iBAAW,UAAX,CAAsB,YAAtB,EADkB;AAElB,iBAAW,KAAX,CAAiB,UAAjB,CAA4B,IAA5B,CAAiC,eAAjC;;;AAFkB,KAApB;AAMA,aAAS,eAAT,GAA2B;AACzB,cAAQ,GAAR,CAAY,uBAAZ,EADyB;AAEzB,UAAG,UAAU,OAAV,CAAkB,WAAW,KAAX,CAAiB,IAAjB,CAArB,EAA6C,OAA7C;;AAEA,aAAO,YAAP,CAAoB,MAApB,EAJyB;KAA3B;GA1EF;CAVD,CAAD","file":"appCtrl.js","sourcesContent":["(function() {\n  angular.module('clickApp.controllers')\n    .controller('appCtrl', appCtrl);\n\n  appCtrl.$inject = [\n    '$rootScope',\n    '$state',\n    'state',\n    'user',\n  ];\n  function appCtrl($rootScope,\n                   $state,\n                   stateService,\n                   userModel) {\n    console.log('init appCtrl');\n\n    const vm = this;\n    vm.isNavHidden = isNavHidden;\n    vm.stateIs = stateIs;\n    vm.stateMatches = stateMatches;\n\n    $rootScope.state = stateService.create();\n    $rootScope.stateEvent = stateEvent;\n    // $scope.onStateChangeEvent = onStateChangeEvent;\n    // $scope.digestOnStateChangeEvent = digestOnStateChangeEvent;\n    // $scope.reloadFactions = reloadFactions;\n\n    // $scope.userIsValid = userIsValid;\n    // $scope.checkUser = checkUser;\n\n    $rootScope.goToState = goToState;\n\n    activate();\n\n    function stateEvent(...args) {\n      return stateService.queueEventP(args, $rootScope.state);\n    }\n    // function onStateChangeEvent(event, listener, scope) {\n    //   let unsubscribe = stateService\n    //         .onChangeEvent(event, listener, $scope.state);\n    //   scope.$on('$destroy', () => { unsubscribe(); });\n    // }\n    // function digestOnStateChangeEvent(event, scope) {\n    //   $scope.onStateChangeEvent(event, () => {\n    //     scope.$digest();\n    //   }, scope);\n    // }\n    // function reloadFactions() {\n    //   stateService.event('Factions.reload', $scope.state);\n    // }\n\n    // function userIsValid() {\n    //   return userService.isValid($scope.state.user);\n    // }\n    // function checkUser() {\n    //   if(!$scope.userIsValid()) {\n    //     $state.go('user');\n    //   }\n    // }\n\n    function isNavHidden() {\n      return R.path(['current', 'data', 'hide_nav' ], $state);\n    }\n    function stateIs(name) {\n      return $state.is(name);\n    }\n    function stateMatches(match) {\n      return 0 <= $state.current.name.indexOf(match);\n    }\n    function goToState(...args) {\n      self.setTimeout(() => {\n        $state.go.apply($state, args);\n      }, 100);\n    }\n    // function currentState() {\n    //   return $state.current;\n    // }\n\n    function activate() {\n      $rootScope.stateEvent('State.init');\n      $rootScope.state.user_ready.then(checkUserOnInit);\n    //   $scope.onStateChangeEvent('User.change', $scope.checkUser, $scope);\n    //   $scope.digestOnStateChangeEvent('User.change', $scope);\n    }\n    function checkUserOnInit() {\n      console.log('Checking user on init');\n      if(userModel.isValid($rootScope.state.user)) return;\n\n      $state.transitionTo('user');\n    }\n  }\n})();\n"]}