{"version":3,"sources":["appCtrl.es6"],"names":[],"mappings":"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","file":"appCtrl.js","sourcesContent":["(function() {\n  angular.module('clickApp.controllers')\n    .controller('appCtrl', appCtrl);\n\n  appCtrl.$inject = [\n    '$rootScope',\n    '$state',\n    'appState',\n    'stateData',\n    'stateGame',\n    'stateGames',\n    'stateUser',\n  ];\n  function appCtrl($rootScope,\n                   $state,\n                   appStateService) {\n    console.log('init appCtrl');\n\n    const vm = this;\n    vm.isNavHidden = isNavHidden;\n    vm.stateIs = stateIs;\n    vm.stateMatches = stateMatches;\n    vm.goToState = goToState;\n\n    $rootScope.stateIs = stateIs;\n    $rootScope.goToState = goToState;\n\n    $rootScope.stateEvent = stateEvent;\n    // $rootScope.stateChangeEvent = stateChangeEvent;\n    $rootScope.onStateChangeEvent = onStateChangeEvent;\n    $rootScope.digestOnStateChangeEvent = digestOnStateChangeEvent;\n    $rootScope.bindCell = bindCell;\n\n    activate();\n\n    function activate() {\n      $rootScope.onStateChangeEvent('AppState.change', (_event_, [new_state]) => {\n        $rootScope.state = new_state;\n      }, $rootScope);\n      $rootScope.onStateChangeEvent('User.becomesInvalid', onUserInvalid, $rootScope);\n      $rootScope.digestOnStateChangeEvent('User.state.change', $rootScope);\n      $rootScope.state = appStateService.init();\n    }\n\n    function onUserInvalid() {\n      $state.go('user');\n      $rootScope.$digest();\n    }\n\n    function stateEvent(...args) {\n      return appStateService.reduce.apply(appStateService, args);\n    }\n    // function stateChangeEvent(...args) {\n    //   return appStateService.emit(appStateService, args);\n    // }\n    function onStateChangeEvent(event, listener, scope) {\n      appStateService.addListener(event, listener);\n      scope.$on('$destroy', () => {\n        appStateService.removeListener(event, listener);\n      });\n    }\n    function digestOnStateChangeEvent(event, scope) {\n      onStateChangeEvent(event, () => {\n        scope.$digest();\n      }, scope);\n    }\n    function bindCell(cell, listener, scope) {\n      const unbind = cell.bind(listener);\n      scope.$on('$destroy', unbind);\n    }\n\n    function isNavHidden() {\n      return R.path(['current', 'data', 'hide_nav' ], $state);\n    }\n    function stateIs(name) {\n      return $state.is(name);\n    }\n    function stateMatches(match) {\n      return 0 <= $state.current.name.indexOf(match);\n    }\n    function goToState(...args) {\n      self.setTimeout(() => {\n        $state.go.apply($state, args);\n      }, 100);\n    }\n  }\n})();\n"]}