{"version":3,"sources":["bindingsCtrl.es6"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,sBAAf,EACG,UADH,CACc,sBADd,EACsC,CAClC,QADkC,EAElC,UAAS,MAAT,EAAiB;AACf,UAAQ,GAAR,CAAY,2BAAZ,EADe;;AAGf,SAAO,eAAP,GAAyB,UAAC,IAAD,EAAU;AACjC,WAAO,EAAE,IAAF,CAAO,OAAO,KAAP,CAAa,QAAb,CAAsB,OAAtB,CAA8B,UAA9B,EAA0C,IAA1C,CAAP,EAAwD,IAAxD,EAAP,CADiC;GAAV,CAHV;AAMf,WAAS,WAAT,GAAuB;AACrB,WAAO,KAAP,GAAe,EAAE,IAAF,CAAO,OAAO,KAAP,CAAa,QAAb,CAAsB,OAAtB,CAA8B,UAA9B,CAAP,EAAkD,IAAlD,EAAf,CADqB;AAErB,WAAO,IAAP,GAAc,EAAE,SAAF,CAAY,EAAE,IAAF,CAAO,OAAO,KAAP,CAAnB,EAAkC,OAAO,IAAP,CAAhD,CAFqB;GAAvB;AAIA,SAAO,KAAP,CAAa,UAAb,CAAwB,IAAxB,CAA6B,WAA7B,EAVe;;AAYf,SAAO,eAAP,GAAyB,UAAC,MAAD,EAAY;AACnC,QAAG,OAAO,SAAP,EAAkB,OAArB;AACA,WAAO,SAAP,GAAmB,MAAnB,CAFmC;;AAInC,MAAE,KAAF,CACE,YAAM;AACJ,aAAO,IAAI,KAAK,OAAL,CAAa,UAAC,OAAD,EAAa;AACnC,kBAAU,MAAV,CAAiB,UAAC,GAAD,EAAS;AACxB,kBAAQ,GAAR,CAAY,wBAAZ,EAAsC,GAAtC,EADwB;AAExB,kBAAQ,GAAR,EAFwB;SAAT,CAAjB,CADmC;OAAb,CAAxB,CADI;KAAN,EAQA,UAAC,GAAD,EAAS;AACP,UAAG,EAAE,KAAF,CAAQ,GAAR,KAAgB,EAAE,OAAF,CAAU,GAAV,CAAhB,EAAgC;AACjC,eADiC;OAAnC;AAGA,aAAO,aAAP,CAAqB,QAArB,CAA8B,OAAO,IAAP,CAA9B,CAA2C,MAA3C,IAAqD,IAAI,IAAJ,CAAS,GAAT,CAArD,CAJO;KAAT,EAMA,YAAM;AACJ,aAAO,SAAP,GAAmB,IAAnB,CADI;AAEJ,aAAO,OAAP,GAFI;KAAN,CAfF,GAJmC;GAAZ,CAZV;;AAsCf,SAAO,GAAP,CAAW,UAAX,EAAuB,OAAO,gBAAP,CAAvB,CAtCe;CAAjB,CAHJ","file":"bindingsCtrl.js","sourcesContent":["angular.module('clickApp.controllers')\n  .controller('settingsBindingsCtrl', [\n    '$scope',\n    function($scope) {\n      console.log('init settingsBindingsCtrl');\n\n      $scope.getBindingsKeys = (mode) => {\n        return R.keys($scope.state.settings.default['Bindings'][mode]).sort();\n      };\n      function updateModes() {\n        $scope.modes = R.keys($scope.state.settings.default['Bindings']).sort();\n        $scope.mode = R.defaultTo(R.head($scope.modes), $scope.mode);\n      }\n      $scope.state.data_ready.then(updateModes);\n\n      $scope.doRecordBinding = (action) => {\n        if($scope.recording) return;\n        $scope.recording = action;\n\n        R.pipeP(\n          () => {\n            return new self.Promise((resolve) => {\n              Mousetrap.record((seq) => {\n                console.log('Mousetrap seq recorded', seq);\n                resolve(seq);\n              });\n            });\n          },\n          (seq) => {\n            if(R.isNil(seq) || R.isEmpty(seq)) {\n              return;\n            }\n            $scope.edit_settings.Bindings[$scope.mode][action] = seq.join(' ');\n          },\n          () => {\n            $scope.recording = null;\n            $scope.$digest();\n          }\n        )();\n      };\n\n      $scope.$on('$destroy', $scope.doUpdateSettings);\n    }\n  ]);\n"]}