{"version":3,"sources":["settingsBindingsCtrl.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,sBAAf,EACG,UADH,CACc,sBADd,EACsC,oBADtC,EADU;;AAIV,uBAAqB,OAArB,GAA+B,CAC7B,QAD6B,CAA/B,CAJU;AAOV,WAAS,oBAAT,CAA8B,MAA9B,EAAsC;AACpC,QAAM,KAAK,IAAL,CAD8B;AAEpC,YAAQ,GAAR,CAAY,2BAAZ,EAFoC;;AAIpC,OAAG,sBAAH,GAA4B,sBAA5B,CAJoC;AAKpC,OAAG,eAAH,GAAqB,eAArB,CALoC;;AAOpC,eAPoC;;AASpC,aAAS,QAAT,GAAoB;AAClB,oBADkB;AAElB,aAAO,GAAP,CAAW,UAAX,EAAuB,OAAO,QAAP,CAAgB,gBAAhB,CAAvB,CAFkB;KAApB;AAIA,aAAS,WAAT,GAAuB;AACrB,SAAG,KAAH,GAAW,EAAE,MAAF,CAAS,OAAO,KAAP,CAAT,CACT,EAAE,IAAF,CAAO,CAAC,UAAD,EAAY,SAAZ,EAAsB,UAAtB,CAAP,CADS,EAET,EAAE,IAAF,EACA,EAAE,MAAF,CAAS,EAAE,QAAF,CAHA,CAAX,CADqB;AAMrB,SAAG,IAAH,GAAU,EAAE,SAAF,CAAY,EAAE,IAAF,CAAO,GAAG,KAAH,CAAnB,EAA8B,GAAG,IAAH,CAAxC,CANqB;KAAvB;AAQA,aAAS,sBAAT,GAAkC;AAChC,aAAO,EAAE,MAAF,CAAS,OAAO,KAAP,CAAT,CACL,EAAE,IAAF,CAAO,CAAC,UAAD,EAAY,SAAZ,EAAsB,UAAtB,EAAkC,GAAG,IAAH,CAAzC,CADK,EAEL,EAAE,IAAF,EACA,EAAE,MAAF,CAAS,EAAE,QAAF,CAHJ,CAAP,CADgC;KAAlC;AAOA,aAAS,eAAT,CAAyB,MAAzB,EAAiC;AAC/B,UAAG,GAAG,SAAH,EAAc,OAAO,IAAP,CAAjB;AACA,SAAG,SAAH,GAAe,MAAf,CAF+B;;AAI/B,aAAO,EAAE,OAAF,CAAU,IAAI,KAAK,OAAL,CAAa,MAAjB,CAAV,EACL,qBADK,EAEL,cAFK,CAAP,CAJ+B;;AAS/B,eAAS,MAAT,CAAgB,OAAhB,EAAyB;AACvB,kBAAU,MAAV,CAAiB,UAAC,GAAD,EAAS;AACxB,kBAAQ,GAAR,CAAY,wBAAZ,EAAsC,GAAtC,EADwB;AAExB,kBAAQ,GAAR,EAFwB;SAAT,CAAjB,CADuB;OAAzB;AAMA,eAAS,qBAAT,CAA+B,GAA/B,EAAoC;AAClC,YAAG,EAAE,KAAF,CAAQ,GAAR,KAAgB,EAAE,OAAF,CAAU,GAAV,CAAhB,EAAgC;AACjC,iBADiC;SAAnC;AAGA,gBAAQ,GAAR,CAAY,GAAZ,EAJkC;AAKlC,eAAO,QAAP,CAAgB,IAAhB,CAAqB,QAArB,CAA8B,GAAG,IAAH,CAA9B,CAAuC,MAAvC,IAAiD,IAAI,IAAJ,CAAS,GAAT,CAAjD,CALkC;OAApC;AAOA,eAAS,cAAT,GAA0B;AACxB,WAAG,SAAH,GAAe,IAAf,CADwB;AAExB,eAAO,OAAP,GAFwB;OAA1B;KAtBF;GA5BF;CAPD,CAAD","file":"settingsBindingsCtrl.js","sourcesContent":["(function() {\n  angular.module('clickApp.controllers')\n    .controller('settingsBindingsCtrl', settingsBindingsCtrl);\n\n  settingsBindingsCtrl.$inject = [\n    '$scope',\n  ];\n  function settingsBindingsCtrl($scope) {\n    const vm = this;\n    console.log('init settingsBindingsCtrl');\n\n    vm.getBindingsKeysForMode = getBindingsKeysForMode;\n    vm.doRecordBinding = doRecordBinding;\n\n    activate();\n\n    function activate() {\n      updateModes();\n      $scope.$on('$destroy', $scope.settings.doUpdateSettings);\n    }\n    function updateModes() {\n      vm.modes = R.thread($scope.state)(\n        R.path(['settings','default','Bindings']),\n        R.keys,\n        R.sortBy(R.identity)\n      );\n      vm.mode = R.defaultTo(R.head(vm.modes), vm.mode);\n    }\n    function getBindingsKeysForMode() {\n      return R.thread($scope.state)(\n        R.path(['settings','default','Bindings', vm.mode]),\n        R.keys,\n        R.sortBy(R.identity)\n      );\n    }\n    function doRecordBinding(action) {\n      if(vm.recording) return null;\n      vm.recording = action;\n\n      return R.threadP(new self.Promise(record))(\n        updateRecordedBinding,\n        resetViewModel\n      );\n\n      function record(resolve) {\n        Mousetrap.record((seq) => {\n          console.log('Mousetrap seq recorded', seq);\n          resolve(seq);\n        });\n      }\n      function updateRecordedBinding(seq) {\n        if(R.isNil(seq) || R.isEmpty(seq)) {\n          return;\n        }\n        console.log(seq);\n        $scope.settings.edit.Bindings[vm.mode][action] = seq.join(' ');\n      }\n      function resetViewModel() {\n        vm.recording = null;\n        $scope.$digest();\n      }\n    }\n  }\n})();\n"]}