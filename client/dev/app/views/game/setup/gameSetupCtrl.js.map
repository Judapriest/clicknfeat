{"version":3,"sources":["gameSetupCtrl.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,sBAAf,EACG,UADH,CACc,eADd,EAC+B,aAD/B,EADU;;AAIV,gBAAc,OAAd,GAAwB,CACtB,QADsB,EAEtB,cAFsB,CAAxB,CAJU;AAQV,WAAS,aAAT,CAAuB,MAAvB,EACuB,mBADvB,EAC4C;AAC1C,QAAM,KAAK,IAAL,CADoC;AAE1C,YAAQ,GAAR,CAAY,oBAAZ;;;;;;;AAF0C,MAS1C,CAAG,aAAH,GAAmB,aAAnB;;;;;;;;;AAT0C,YAkB1C,GAlB0C;;AAoB1C,aAAS,QAAT,GAAoB;AAClB,aAAO,KAAP,CAAa,UAAb,CAAwB,IAAxB,CAA6B,WAA7B;;;;;;;;AADkB,YASlB,CAAO,kBAAP,CAA0B,oBAA1B,EAAgD,YAAhD,EAA8D,MAA9D;;AATkB,UAWlB,CAAK,qBAAL,CAA2B,YAA3B;;;;;;AAXkB,KAApB;;AAmBA,aAAS,WAAT,GAAuB;AACrB,SAAG,MAAH,GAAY,OAAO,KAAP,CAAa,MAAb,CADS;AAErB,SAAG,QAAH,GAAc,OAAO,KAAP,CAAa,QAAb;;;AAFO,QAKrB,CAAG,SAAH,GAAe,OAAO,KAAP,CAAa,SAAb,CALM;AAMrB,aAAO,OAAP,GANqB;KAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAvC0C,aA8EjC,YAAT,GAAwB;AACtB,SAAG,MAAH,GAAY,EAAE,IAAF,CAAO,CAAC,OAAD,EAAS,MAAT,EAAgB,QAAhB,CAAP,EAAkC,MAAlC,CAAZ,CADsB;AAEtB,aAAO,OAAP,GAFsB;KAAxB;AAIA,aAAS,aAAT,CAAuB,CAAvB,EAA0B;AACxB,aAAO,UAAP,CAAkB,sBAAlB,EACkB,WADlB,EAC+B,CAAC,QAAD,EAAW,CAAX,CAD/B,EADwB;KAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlF0C,GAD5C;CARD,CAAD","file":"gameSetupCtrl.js","sourcesContent":["(function() {\n  angular.module('clickApp.controllers')\n    .controller('gameSetupCtrl', gameSetupCtrl);\n\n  gameSetupCtrl.$inject = [\n    '$scope',\n    'gameScenario',\n  ];\n  function gameSetupCtrl($scope,\n                         gameScenarioService) {\n    const vm = this;\n    console.log('init gameSetupCtrl');\n\n    // vm.doSetBoard = doSetBoard;\n    // vm.doSetRandomBoard = doSetRandomBoard;\n    // vm.doSetScenario = doSetScenario;\n    // vm.doSetRandomScenario = doSetRandomScenario;\n    // vm.doGenerateObjectives = doGenerateObjectives;\n    vm.doToggleLayer = doToggleLayer;\n    // vm.onAmbianceChange = onAmbianceChange;\n    // vm.onCategoryChange = onCategoryChange;\n    // vm.onEntryChange = onEntryChange;\n    // vm.getTerrain = getTerrain;\n    // vm.doCreateTerrain = doCreateTerrain;\n    // vm.doResetTerrain = doResetTerrain;\n    // vm.doImportBoardFile = doImportBoardFile;\n\n    activate();\n\n    function activate() {\n      $scope.state.data_ready.then(onDataReady);\n\n      // $scope.onStateChangeEvent('Game.board.change', updateBoardName, $scope);\n      // self.requestAnimationFrame(updateBoardName);\n\n      // $scope.onStateChangeEvent('Game.scenario.change', updateScenario, $scope);\n      // self.requestAnimationFrame(updateScenario);\n\n      $scope.onStateChangeEvent('Game.layers.change', updateLayers, $scope);\n      // $scope.onStateChangeEvent('Game.load.success', updateLayers, $scope);\n      self.requestAnimationFrame(updateLayers);\n\n      // $scope.$on('$destroy', () => {\n      //   $scope.stateEvent('Game.scenario.refresh');\n      // });\n      // $scope.stateEvent('Game.scenario.refresh');\n    }\n\n    function onDataReady() {\n      vm.boards = $scope.state.boards;\n      vm.terrains = $scope.state.terrains;\n      // vm.ambiance = R.head(R.keys(vm.terrains));\n      // vm.onAmbianceChange();\n      vm.scenarios = $scope.state.scenarios;\n      $scope.$digest();\n    }\n\n    // function updateBoardName() {\n    //   vm.board_name = R.path(['game','board','name'], $scope.state);\n    //   $scope.$digest();\n    // }\n    // function doSetBoard() {\n    //   $scope.stateEvent('Game.board.set', vm.board_name);\n    // }\n    // function doSetRandomBoard() {\n    //   $scope.stateEvent('Game.board.setRandom');\n    // }\n\n    // function updateScenario() {\n    //   vm.scenario_name = R.path(['state','game','scenario','name'], $scope);\n    //   vm.scenario_group = gameScenarioService\n    //     .groupForName(vm.scenario_name, vm.scenarios);\n    //   $scope.$digest();\n    // }\n    // function doSetScenario() {\n    //   if(R.isNil(vm.scenario_name)) return;\n\n    //   $scope.stateEvent('Game.scenario.set',\n    //                     vm.scenario_name, vm.scenario_group);\n    // }\n    // function doSetRandomScenario() {\n    //   $scope.stateEvent('Game.scenario.setRandom');\n    // }\n    // function doGenerateObjectives() {\n    //   $scope.stateEvent('Game.scenario.generateObjectives');\n    // }\n\n    function updateLayers() {\n      vm.layers = R.path(['state','game','layers'], $scope);\n      $scope.$digest();\n    }\n    function doToggleLayer(l) {\n      $scope.stateEvent('Game.command.execute',\n                        'setLayers', ['toggle', l]);\n    }\n\n    // function onAmbianceChange() {\n    //   vm.category = R.head(R.keys(vm.terrains[vm.ambiance]));\n    //   vm.onCategoryChange();\n    // }\n    // function onCategoryChange() {\n    //   vm.entry = R.head(R.keys(vm.terrains[vm.ambiance][vm.category]));\n    //   vm.onEntryChange();\n    // }\n    // function onEntryChange() {\n    // }\n    // function getTerrainPath() {\n    //   return [ vm.ambiance,\n    //            vm.category,\n    //            vm.entry\n    //          ];\n    // }\n    // function getTerrain() {\n    //   return R.path([\n    //     vm.ambiance,\n    //     vm.category,\n    //     vm.entry\n    //   ], vm.terrains);\n    // }\n    // function doCreateTerrain() {\n    //   const terrain_path = getTerrainPath();\n    //   $scope.stateEvent('Game.terrain.create', terrain_path);\n    // }\n    // function doResetTerrain() {\n    //   $scope.stateEvent('Game.terrain.reset');\n    // }\n\n    // function doImportBoardFile(files) {\n    //   $scope.stateEvent('Game.board.importFile', files[0]);\n    // }\n  }\n})();\n"]}