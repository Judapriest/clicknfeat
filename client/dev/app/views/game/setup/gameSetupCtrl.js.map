{"version":3,"sources":["gameSetupCtrl.es6"],"names":[],"mappings":"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","file":"gameSetupCtrl.js","sourcesContent":["(function() {\n  angular.module('clickApp.controllers')\n    .controller('gameSetupCtrl', gameSetupCtrl);\n\n  gameSetupCtrl.$inject = [\n    '$scope',\n    // 'gameBoard',\n    // 'gameScenario',\n  ];\n  function gameSetupCtrl($scope) {\n                         // gameBoardService,\n    // gameScenarioService) {\n    const vm = this;\n    console.log('init gameSetupCtrl');\n\n    vm.doSetBoard = doSetBoard;\n    vm.doSetRandomBoard = doSetRandomBoard;\n    // vm.doSetScenario = doSetScenario;\n    // vm.doSetRandomScenario = doSetRandomScenario;\n    // vm.doGenerateObjectives = doGenerateObjectives;\n    vm.doToggleLayer = doToggleLayer;\n    vm.onAmbianceChange = onAmbianceChange;\n    vm.onCategoryChange = onCategoryChange;\n    vm.onEntryChange = onEntryChange;\n    vm.getTerrain = getTerrain;\n    vm.doCreateTerrain = doCreateTerrain;\n    vm.doResetTerrain = doResetTerrain;\n    vm.doImportBoardFile = doImportBoardFile;\n\n    activate();\n\n    function activate() {\n      $scope.state.data_ready.then(onDataReady);\n\n      $scope.onStateChangeEvent('Game.board.change', updateBoardName, $scope);\n      self.requestAnimationFrame(updateBoardName);\n\n      // $scope.onStateChangeEvent('Game.scenario.change', updateScenario, $scope);\n      // // $scope.onStateChangeEvent('Game.load.success', updateScenario, $scope);\n      // self.requestAnimationFrame(updateScenario);\n\n      $scope.onStateChangeEvent('Game.layers.change', updateLayers, $scope);\n      $scope.onStateChangeEvent('Game.load.success', updateLayers, $scope);\n      self.requestAnimationFrame(updateLayers);\n\n      $scope.$on('$destroy', () => {\n        $scope.stateChangeEvent('Game.scenario.refresh');\n      });\n      $scope.stateChangeEvent('Game.scenario.refresh');\n    }\n\n    function onDataReady() {\n      vm.boards = $scope.state.boards;\n      vm.terrains = $scope.state.terrains;\n      vm.ambiance = R.head(R.keys(vm.terrains));\n      vm.onAmbianceChange();\n    //   vm.scenarios = $scope.state.scenarios;\n      $scope.$digest();\n    }\n\n    function updateBoardName() {\n      vm.board_name = R.path(['game','board','name'], $scope.state);\n      $scope.$digest();\n    }\n    function doSetBoard() {\n      $scope.stateEvent('Game.board.set', vm.board_name);\n    }\n    function doSetRandomBoard() {\n      $scope.stateEvent('Game.board.setRandom');\n    }\n\n    // function updateScenario() {\n    //   vm.scenario_name = R.path(['state','game','scenario','name'], $scope);\n    //   vm.scenario_group = gameScenarioService\n    //     .groupForName(vm.scenario_name, vm.scenarios);\n    //   $scope.$digest();\n    // }\n    // function doSetScenario() {\n    //   $scope.stateEvent('Game.scenario.set',\n    //                     vm.scenario_name, vm.scenario_group);\n    // }\n    // function doSetRandomScenario() {\n    //   $scope.stateEvent('Game.scenario.setRandom');\n    // }\n    // function doGenerateObjectives() {\n    //   $scope.stateEvent('Game.scenario.generateObjectives');\n    // }\n\n    function updateLayers() {\n      vm.layers = R.path(['state','game','layers'], $scope);\n      $scope.$digest();\n    }\n    function doToggleLayer(l) {\n      $scope.stateEvent('Game.command.execute',\n                        'setLayers', ['toggle', l]);\n    }\n\n    function onAmbianceChange() {\n      vm.category = R.head(R.keys(vm.terrains[vm.ambiance]));\n      vm.onCategoryChange();\n    }\n    function onCategoryChange() {\n      vm.entry = R.head(R.keys(vm.terrains[vm.ambiance][vm.category]));\n      vm.onEntryChange();\n    }\n    function onEntryChange() {\n    }\n    function getTerrainPath() {\n      return [ vm.ambiance,\n               vm.category,\n               vm.entry\n             ];\n    }\n    function getTerrain() {\n      return R.path([\n        vm.ambiance,\n        vm.category,\n        vm.entry\n      ], vm.terrains);\n    }\n    function doCreateTerrain() {\n      const terrain_path = getTerrainPath();\n      $scope.stateEvent('Game.terrain.create', terrain_path);\n    }\n    function doResetTerrain() {\n      $scope.stateEvent('Game.terrain.reset');\n    }\n\n    function doImportBoardFile(files) {\n      $scope.stateEvent('Game.board.importFile', files[0]);\n    }\n  }\n})();\n"]}