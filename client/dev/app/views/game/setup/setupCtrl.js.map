{"version":3,"sources":["setupCtrl.es6"],"names":[],"mappings":"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","file":"setupCtrl.js","sourcesContent":["angular.module('clickApp.controllers')\n  .controller('gameSetupCtrl', [\n    '$scope',\n    'gameBoard',\n    'gameScenario',\n    function($scope,\n             gameBoardService,\n             gameScenarioService) {\n      console.log('init gameSetupCtrl');\n\n      $scope.$on('$destroy', () => {\n        $scope.state.changeEvent('Game.scenario.refresh');\n      });\n      $scope.state.changeEvent('Game.scenario.refresh');\n\n      $scope.state.data_ready.then(() => {\n        $scope.boards = $scope.state.boards;\n        $scope.terrains = $scope.state.terrains;\n        $scope.scenarios = $scope.state.scenarios;\n        $scope.ambiance = R.head(R.keys($scope.terrains));\n        $scope.onAmbianceChange();\n        $scope.$digest();\n      });\n\n      function updateBoardName() {\n        $scope.board_name = R.path(['state','game','board','name'], $scope);\n        $scope.$digest();\n      }\n      $scope.onStateChangeEvent('Game.board.change', updateBoardName, $scope);\n      // $scope.onStateChangeEvent('Game.load.success', updateBoardName, $scope);\n      self.requestAnimationFrame(updateBoardName);\n\n      $scope.doSetBoard = () => {\n        $scope.stateEvent('Game.board.set', $scope.board_name);\n      };\n      $scope.doSetRandomBoard = () => {\n        $scope.stateEvent('Game.board.setRandom');\n      };\n\n      function updateScenario() {\n        $scope.scenario_name = R.path(['state','game','scenario','name'], $scope);\n        $scope.scenario_group = gameScenarioService.groupForName($scope.scenario_name,\n                                                                 $scope.scenarios);\n        $scope.$digest();\n      }\n      $scope.onStateChangeEvent('Game.scenario.change', updateScenario, $scope);\n      // $scope.onStateChangeEvent('Game.load.success', updateScenario, $scope);\n      self.requestAnimationFrame(updateScenario);\n\n      $scope.doSetScenario = () => {\n        $scope.stateEvent('Game.scenario.set', $scope.scenario_name, $scope.scenario_group);\n      };\n      $scope.doSetRandomScenario = () => {\n        $scope.stateEvent('Game.scenario.setRandom');\n      };\n      $scope.doGenerateObjectives = () => {\n        $scope.stateEvent('Game.scenario.generateObjectives');\n      };\n\n      function updateLayers() {\n        $scope.layers = R.path(['state','game','layers'], $scope);\n        $scope.$digest();\n      }\n      $scope.onStateChangeEvent('Game.layers.change', updateLayers, $scope);\n      $scope.onStateChangeEvent('Game.load.success', updateLayers, $scope);\n      self.requestAnimationFrame(updateLayers);\n\n      $scope.doToggleLayer = (l) => {\n        $scope.stateEvent('Game.command.execute',\n                          'setLayers', ['toggle', l]);\n      };\n\n      $scope.onAmbianceChange = () => {\n        $scope.category = R.head(R.keys($scope.terrains[$scope.ambiance]));\n        $scope.onCategoryChange();\n      };\n      $scope.onCategoryChange = () => {\n        $scope.entry = R.head(R.keys($scope.terrains[$scope.ambiance][$scope.category]));\n        $scope.onEntryChange();\n      };\n      $scope.onEntryChange = () => {\n      };\n      function getTerrainPath() {\n        return [ $scope.ambiance,\n                 $scope.category,\n                 $scope.entry\n               ];\n      }\n      $scope.getTerrain = () => {\n        return R.path([\n                 $scope.ambiance,\n                 $scope.category,\n                 $scope.entry\n               ], $scope.terrains);\n      };\n      $scope.doCreateTerrain = () => {\n        let terrain_path = getTerrainPath();\n        $scope.stateEvent('Game.terrain.create', terrain_path);\n      };\n      $scope.doResetTerrain = () => {\n        $scope.stateEvent('Game.terrain.reset');\n      };\n\n      $scope.doImportBoardFile = (files) => {\n        $scope.stateEvent('Game.board.importFile', files[0]);\n      };\n    }\n  ]);\n"]}