{"version":3,"sources":["gameModelCtrl.es6"],"names":[],"mappings":"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","file":"gameModelCtrl.js","sourcesContent":["(function() {\n  angular.module('clickApp.controllers')\n    .controller('gameModelCtrl', gameModelCtrl);\n\n  gameModelCtrl.$inject = [\n    '$scope',\n  ];\n  function gameModelCtrl($scope) {\n    const vm = this;\n    console.log('init gameModelCtrl');\n\n    vm.onFactionChange = onFactionChange;\n    vm.onSectionChange = onSectionChange;\n    vm.onEntryChange = onEntryChange;\n    vm.onTypeChange = onTypeChange;\n    vm.onModelChange = onModelChange;\n\n    vm.getEntries = getEntries;\n    vm.getModel = getModel;\n\n    vm.doCreateModel = doCreateModel;\n    vm.doImportList = doImportList;\n    vm.doImportModelsFile = doImportModelsFile;\n\n    activate();\n\n    function activate() {\n      vm.import_list = null;\n\n      $scope.state.data_ready.then(updateFactions);\n    }\n    function updateFactions() {\n      vm.factions = R.path(['state','factions','current'], $scope);\n      vm.faction = R.head(R.keys(vm.factions));\n      vm.onFactionChange();\n      $scope.$digest();\n    }\n    function onFactionChange() {\n      vm.section = R.head(R.keys(vm.factions[vm.faction].models));\n      vm.onSectionChange();\n    }\n    function onSectionChange() {\n      vm.entry = R.head(R.keys(vm.factions[vm.faction].models[vm.section]));\n      vm.onEntryChange();\n    }\n    function onEntryChange() {\n      const entries = vm.getEntries();\n      if(R.isNil(entries)) {\n        vm.model = $scope.entry;\n        vm.onModelChange();\n        return;\n      }\n      vm.type = R.head(R.keys(entries));\n      vm.onTypeChange();\n    }\n    function onTypeChange() {\n      const entries = vm.getEntries();\n      vm.model = R.thread(entries)(\n        R.defaultTo({}),\n        R.prop(vm.type),\n        R.defaultTo({}),\n        R.keys(),\n        R.head()\n      );\n      vm.onModelChange();\n    }\n    function onModelChange() {\n      vm.repeat = 1;\n    }\n    function getEntries() {\n      return R.path([ vm.faction,\n                      'models',\n                      vm.section,\n                      vm.entry,\n                      'entries'\n                    ], vm.factions);\n    }\n    function getModel() {\n      const entries = vm.getEntries();\n      if(R.isNil(entries)) {\n        return R.path([ vm.faction,\n                        'models',\n                        vm.section,\n                        vm.entry\n                      ], vm.factions);\n      }\n      else {\n        return R.path([ vm.type,\n                        vm.model\n                      ], entries);\n      }\n    }\n    function getModelPath() {\n      const entries = vm.getEntries();\n      if(R.isNil(entries)) {\n        return [ vm.faction,\n                 'models',\n                 vm.section,\n                 vm.entry\n               ];\n      }\n      else {\n        return [ vm.faction,\n                 'models',\n                 vm.section,\n                 vm.entry,\n                 'entries',\n                 vm.type,\n                 vm.model\n               ];\n      }\n    }\n    function doCreateModel() {\n      const model_path = getModelPath();\n      $scope.stateEvent('Game.model.create',\n                        model_path, vm.repeat);\n    }\n    function doImportList() {\n      // TODO : find min unit number for user\n      $scope.stateEvent('Game.model.importList', vm.import_list);\n    }\n    function doImportModelsFile(files) {\n      $scope.stateEvent('Game.model.importFile', files[0]);\n    }\n  }\n})();\n"]}