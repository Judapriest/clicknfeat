{"version":3,"sources":["modelCtrl.es6"],"names":[],"mappings":"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","file":"modelCtrl.js","sourcesContent":["angular.module('clickApp.controllers')\n  .controller('gameModelCtrl', [\n    '$scope',\n    function($scope) {\n      console.log('init gameModelCtrl');\n\n      function updateFactions() {\n        $scope.factions = R.path(['state','factions','current'], $scope);\n        $scope.faction = R.head(R.keys($scope.factions));\n        $scope.onFactionChange();\n        $scope.$digest();\n      }\n      $scope.state.data_ready.then(updateFactions);\n      \n      $scope.onFactionChange = () => {\n        $scope.section = R.head(R.keys($scope.factions[$scope.faction].models));\n        $scope.onSectionChange();\n      };\n      $scope.onSectionChange = () => {\n        $scope.entry = R.head(R.keys($scope.factions[$scope.faction].models[$scope.section]));\n        $scope.onEntryChange();\n      };\n      $scope.onEntryChange = () => {\n        var entries = $scope.getEntries();\n        if(R.isNil(entries)) {\n          $scope.model = $scope.entry;\n          $scope.onModelChange();\n          return;\n        }\n        $scope.type = R.head(R.keys(entries));\n        $scope.onTypeChange();\n      };\n      $scope.onTypeChange = () => {\n        var entries = $scope.getEntries();\n        $scope.model = R.pipe(\n          R.defaultTo({}),\n          R.prop($scope.type),\n          R.defaultTo({}),\n          R.keys(),\n          R.head()\n        )(entries);\n        $scope.onModelChange();\n      };\n      $scope.onModelChange = () => {\n        $scope.repeat = 1;\n      };\n\n      $scope.getEntries = () => {\n        return R.path([ $scope.faction,\n                        'models',\n                        $scope.section,\n                        $scope.entry,\n                        'entries'\n                      ], $scope.factions);\n      };\n      $scope.getModel = () => {\n        var entries = $scope.getEntries();\n        if(R.isNil(entries)) {\n          return R.path([ $scope.faction,\n                          'models',\n                          $scope.section,\n                          $scope.entry\n                        ], $scope.factions);\n        }\n        else {\n          return R.path([ $scope.type,\n                          $scope.model\n                        ], entries);\n        }\n      };\n\n      function getModelPath() {\n        var entries = $scope.getEntries();\n        if(R.isNil(entries)) {\n          return [ $scope.faction,\n                   'models',\n                   $scope.section,\n                   $scope.entry\n                 ];\n        }\n        else {\n          return [ $scope.faction,\n                   'models',\n                   $scope.section,\n                   $scope.entry,\n                   'entries',\n                   $scope.type,\n                   $scope.model\n                 ];\n        }\n      }\n      $scope.doCreateModel = () => {\n        let model_path = getModelPath();\n        $scope.stateEvent('Game.model.create',\n                          model_path, $scope.repeat);\n      };\n\n      $scope.import = {\n        list: null\n      };\n      $scope.doImportList = () => {\n        // TODO : find min unit number for user\n        $scope.stateEvent('Game.model.importList', $scope.import.list);\n      };\n\n      $scope.doImportModelsFile = (files) => {\n        $scope.stateEvent('Game.model.importFile', files[0]);\n      };\n    }\n  ]);\n"]}