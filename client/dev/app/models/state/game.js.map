{"version":3,"sources":["game.es6"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('stateGame', [\n    '$window',\n    'games',\n    'game',\n    'gameBoard',\n    'gameConnection',\n    'gameFactions',\n    'gameModels',\n    'gameModelSelection',\n    'gameScenario',\n    'gameTerrains',\n    'fileImport',\n    'stateExports',\n    'allCommands',\n    'allTemplates',\n    function stateGamesServiceFactory($window,\n                                      gamesService,\n                                      gameService,\n                                      gameBoardService,\n                                      gameConnectionService,\n                                      gameFactionsService,\n                                      gameModelsService,\n                                      gameModelSelectionService,\n                                      gameScenarioService,\n                                      gameTerrainsService,\n                                      fileImportService,\n                                      stateExportsService) {\n      let stateGameService = {\n        init: function stateGamesInit(state) {\n          state.game = null;\n\n          state.onEvent('Game.load',\n                        stateGameService.onGameLoad$(state));\n          state.onEvent('Game.connection.close',\n                        stateGameService.onGameConnectionClose$(state));\n          state.onEvent('Game.command.execute',\n                        stateGameService.onGameCommandExecute$(state));\n          state.onEvent('Game.command.undo',\n                        stateGameService.onGameCommandUndo$(state));\n          state.onEvent('Game.command.replay',\n                        stateGameService.onGameCommandReplay$(state));\n          state.onEvent('Game.command.replayBatch',\n                        stateGameService.onGameCommandReplayBatch$(state));\n          state.onEvent('Game.command.undoLast',\n                        stateGameService.onGameCommandUndoLast$(state));\n          state.onEvent('Game.command.replayNext',\n                        stateGameService.onGameCommandReplayNext$(state));\n          state.onEvent('Game.setCmds',\n                        stateGameService.onGameSetCmds$(state));\n          state.onEvent('Game.setPlayers',\n                        stateGameService.onGameSetPlayers$(state));\n          state.onEvent('Game.newChatMsg',\n                        stateGameService.onGameNewChatMsg$(state));\n          state.onEvent('Game.update',\n                        stateGameService.onGameUpdate$(state));\n          state.onEvent('Game.invitePlayer',\n                        stateGameService.onGameInvitePlayer$(state));\n          state.onEvent('Game.model.create',\n                        stateGameService.onGameModelCreate$(state));\n          state.onEvent('Game.model.copy',\n                        stateGameService.onGameModelCopy$(state));\n          state.onEvent('Game.model.importList',\n                        stateGameService.onGameModelImportList$(state));\n          state.onEvent('Game.model.importFile',\n                        stateGameService.onGameModelImportFile$(state));\n          state.onEvent('Game.template.create',\n                        stateGameService.onGameTemplateCreate$(state));\n          state.onEvent('Game.terrain.create',\n                        stateGameService.onGameTerrainCreate$(state));\n          state.onEvent('Game.terrain.reset',\n                        stateGameService.onGameTerrainReset$(state));\n          state.onEvent('Game.board.set',\n                        stateGameService.onGameBoardSet$(state));\n          state.onEvent('Game.board.setRandom',\n                        stateGameService.onGameBoardSetRandom$(state));\n          state.onEvent('Game.board.importFile',\n                        stateGameService.onGameBoardImportFile$(state));\n          state.onEvent('Game.scenario.set',\n                        stateGameService.onGameScenarioSet$(state));\n          state.onEvent('Game.scenario.setRandom',\n                        stateGameService.onGameScenarioSetRandom$(state));\n          state.onEvent('Game.scenario.generateObjectives',\n                        stateGameService.onGameScenarioGenerateObjectives$(state));\n\n          return state;\n        },\n        save: function stateGameSave(state) {\n          return R.pipePromise(\n            R.always(saveCurrentGame(state)),\n            R.always(exportCurrentGame(state)),\n            R.always(exportCurrentModelSelection(state)),\n            R.always(exportCurrentBoard(state))\n          )();\n        },\n        onGameLoad: function stateGameOnLoad(state, event, is_online, is_private, id) {\n          return R.pipePromise(\n            R.always(state.data_ready),\n            R.always(state.user_ready),\n            R.always(state.games_ready),\n            ()=> {\n              if(is_online) {\n                return gamesService\n                  .loadOnlineGame(is_private, id);\n              }\n              else {\n                return gamesService\n                  .loadLocalGame(id, state.local_games);\n              }\n            },\n            (game) => {\n              state.changeEventUnbuffered('Game.loading');\n              return game;\n            },\n            setGame$(state),\n            (game) => {\n              return R.pipeP(\n                () => { return state.event('Modes.reset'); },\n                R.always(game)\n              )();\n            },\n            gameService.load$(state),\n            (game) => {\n              state.changeEvent('Game.loaded');\n              return game;\n            },\n            (game) => {\n              if(!is_online) return game;\n              return gameConnectionService\n                .open$(R.path(['user','state','name'], state), state, game);\n            },\n            setGame$(state),\n            () => {\n              state.changeEvent('Game.load.success');\n            }\n          )().catch((error) => {\n            state.changeEvent('Game.load.error', error);\n          });\n        },\n        onGameConnectionClose: function stateGameOnConnectionClose(state, event) {\n          event = event;\n          return R.pipe(\n            gameConnectionService.cleanup,\n            setGame$(state)\n          )(state.game);\n        },\n        onGameCommandExecute: function stateGameOnCommandExecute(state, event, cmd, args) {\n          return R.pipeP(\n            gameService.executeCommand$(cmd, args, state),\n            setGame$(state)\n          )(state.game).catch(gameActionError$(state));\n        },\n        onGameCommandUndo: function stateGameOnCommandUndo(state, event, cmd) {\n          return R.pipeP(\n            gameService.undoCommand$(cmd, state),\n            setGame$(state)\n          )(state.game);\n        },\n        onGameCommandUndoLast: function stateGameOnCommandUndoLast(state, event) {\n          event = event;\n          return R.pipeP(\n            gameService.undoLastCommand$(state),\n            setGame$(state)\n          )(state.game).catch(gameActionError$(state));\n        },\n        onGameCommandReplay: function stateGameOnCommandReplay(state, event, cmd) {\n          return R.pipeP(\n            gameService.replayCommand$(cmd, state),\n            setGame$(state)\n          )(state.game);\n        },\n        onGameCommandReplayBatch: function stateGameOnCommandReplayBatch(state, event, cmds) {\n          return R.pipeP(\n            gameService.replayCommandsBatch$(cmds, state),\n            setGame$(state)\n          )(state.game);\n        },\n        onGameCommandReplayNext: function stateGameOnCommandReplayNext(state, event) {\n          event = event;\n          return R.pipeP(\n            gameService.replayNextCommand$(state),\n            setGame$(state)\n          )(state.game).catch(gameActionError$(state));\n        },\n        onGameSetCmds: function stateGameOnSetCmds(state, event, set) {\n          return R.pipe(\n            R.assoc(set.where, set.cmds),\n            setGame$(state)\n          )(state.game);\n        },\n        onGameSetPlayers: function stateGameOnSetPlayers(state, event, players) {\n          return R.pipe(\n            R.assoc('players', players),\n            setGame$(state)\n          )(state.game);\n        },\n        onGameNewChatMsg: function stateGameOnNewChatMsg(state, event, msg) {\n          return R.pipe(\n            R.over(R.lensProp('chat'),\n                   R.compose(R.append(msg.chat), R.defaultTo([]))),\n            setGame$(state),\n            () => { state.changeEvent('Game.chat'); }\n          )(state.game);\n        },\n        onGameUpdate: function stateGameOnUpdate(state, event, lens, update) {\n          return R.pipe(\n            R.over(lens, update),\n            setGame$(state)\n          )(state.game);\n        },\n        onGameInvitePlayer: function stateGameOnInvitePlayer(state, event, to) {\n          var msg = [\n            s.capitalize(R.pathOr('Unknown', ['user','state','name'], state)),\n            'has invited you to join a game'\n          ].join(' ');\n          var link = $window.location.hash;\n          console.log('Invite player', to, msg, link);\n\n          return state.event('User.sendChatMsg',\n                             { to: to, msg: msg, link: link });\n        },\n        onGameModelCreate: function stateGameOnModelCreate(state, event, model_path, repeat = 1) {\n          state.create = R.assoc('model', {\n            base: { x: 240, y: 240, r: 0 },\n            models: R.times((i) => {\n              return {\n                info: model_path,\n                x: 20*i, y: 0, r: 0\n              };\n            }, repeat)\n          }, R.defaultTo({}, state.create));\n          return state.event('Modes.switchTo', 'CreateModel');\n        },\n        onGameModelCopy: function stateGameOnModelCopy(state, event, create) {\n          state.create = R.assoc('model', create, state.create);\n          return state.event('Modes.switchTo', 'CreateModel');\n        },\n        onGameModelImportList: function stateGameOnModelImportList(state, event, list) {\n          let user = R.pathOr('Unknown', ['user','state','name'], state);\n          state.create = R.assoc(\n            'model',\n            gameFactionsService\n              .buildModelsList(list, user, state.factions.references),\n            state.create\n          );\n          console.info('doImportList', list, state.create.model);\n          return state.event('Modes.switchTo', 'CreateModel');\n        },\n        onGameModelImportFile: function stateGameOnModelImportFile(state, event, file) {\n          return R.pipeP(\n            fileImportService.read$('json'),\n            (create) => {\n              state.create = R.assoc('model', create, state.create);\n              return state.event('Modes.switchTo', 'CreateModel');\n            }\n          )(file).catch(gameActionError$(state));\n        },\n        onGameTemplateCreate: function stateGameOnModelCreate(state, event, type) {\n          state.create = R.assoc('template', {\n            base: { x: 240, y: 240, r: 0 },\n            templates: [ { type: type, x: 0, y: 0, r: 0 } ]\n          }, R.defaultTo({}, state.create));\n          return state.event('Modes.switchTo', 'CreateTemplate');\n        },\n        onGameTerrainCreate: function stateGameOnTerrainCreate(state, event, path) {\n          state.create = R.assoc('terrain', {\n            base: { x: 240, y: 240, r: 0 },\n            terrains: [ {\n              info: path,\n              x: 0, y: 0, r: 0\n            } ]\n          }, R.defaultTo({}, state.create));\n          return state.event('Modes.switchTo', 'CreateTerrain');\n        },\n        onGameTerrainReset: function stateGameOnTerrainReset(state, event) {\n          event = event;\n          return R.pipePromise(\n            () => {\n              return gameTerrainsService.all(state.game.terrains);\n            },\n            R.pluck('state'),\n            R.pluck('stamp'),\n            (stamps) => {\n              return state.event('Game.command.execute',\n                                 'deleteTerrain', [stamps]);\n          }\n          )().catch(gameActionError$(state));\n        },\n        onGameBoardSet: function stateGameOnBoardSet(state, event, name) {\n          let board = gameBoardService.forName(name, state.boards);\n          return state.event('Game.command.execute',\n                             'setBoard', [board]);\n        },\n        onGameBoardSetRandom: function stateGameOnBoardSetRandom(state, event) {\n          event = event;\n          let board, name = gameBoardService.name(state.game.board);\n          while(name === gameBoardService.name(state.game.board)) {\n            board = state.boards[R.randomRange(0, state.boards.length-1)];\n            name = gameBoardService.name(board);\n          }\n          return state.event('Game.command.execute',\n                             'setBoard', [board]);\n        },\n        onGameBoardImportFile: function stateGameOnBoardImportFile(state, event, file) {\n          return R.pipeP(\n            fileImportService.read$('json'),\n            (board_info) => {\n              return R.pipePromise(\n                () => {\n                  if(!board_info.board) return self.Promise.reject();\n\n                  return state.event('Game.command.execute',\n                                     'setBoard', [board_info.board]);\n                },\n                () => {\n                  if(R.isEmpty(R.pathOr([], ['terrain','terrains'], board_info))) {\n                    return self.Promise.reject();\n                  }\n\n                  return state.event('Game.terrain.reset');\n                },\n                () => {\n                  return state.event('Game.command.execute',\n                                     'createTerrain', [board_info.terrain, false]);\n                }\n              )();\n            }\n          )(file).catch(R.always(null));\n        },\n        onGameScenarioSet: function stateGameOnScenarioSet(state, event, name, group) {\n          let scenario = gameScenarioService.forName(name, group);\n          return state.event('Game.command.execute',\n                             'setScenario', [scenario]);\n        },\n        onGameScenarioSetRandom: function stateGameOnScenarioSetRandom(state, event) {\n          event = event;\n          var group = gameScenarioService.group('SR15', state.scenarios);\n          var scenario, name = gameScenarioService.name(state.game.scenario);\n          while(name === gameScenarioService.name(state.game.scenario)) {\n            scenario = group[1][R.randomRange(0, group[1].length-1)];\n            name = gameScenarioService.name(scenario);\n          }\n          return state.event('Game.command.execute',\n                             'setScenario', [scenario]);\n        },\n        onGameScenarioGenerateObjectives: function stateGameOnScenarioGenerateObjectives(state, event) {\n          event = event;\n          return R.pipePromise(\n            () => {\n              return gameModelsService.all(state.game.models);\n            },\n            R.filter(R.pipe(\n              R.path(['state','info']),\n              R.head,\n              R.equals('scenario')\n            )),\n            R.map(R.path(['state','stamp'])),\n            (stamps) => {\n              return state.event('Game.command.execute',\n                                 'deleteModel', [stamps]);\n            },\n            () => {\n              return gameScenarioService\n                .createObjectives(state.game.scenario);\n            },\n            (objectives) => {\n              var is_flipped = R.path(['ui_state','flip_map'], state);\n              return state.event('Game.command.execute',\n                                 'createModel', [objectives, is_flipped]);\n            }\n          )();\n        }\n      };\n      var setGame$ = R.curry((state, game) => {\n        state.game = game;\n        console.log('stateGame', state.game);\n        state.changeEvent('Game.change');\n        return game;\n      });\n      var gameActionError$ = R.curry((state, error) => {\n        state.changeEvent('Game.action.error', error);\n        return null;\n        // return self.Promise.reject(error);\n      });\n      function saveCurrentGame(state) {\n        if(state._game === state.game) return null;\n        state._game = state.game;\n\n        if(R.isNil(R.path(['game','local_stamp'], state))) return null;\n        return R.pipePromise(\n          R.always(state.local_games),\n          gamesService.updateLocalGame$(state.game),\n          (games) => {\n            state.local_games = games;\n            console.log('stateSetLocalGames', state.local_games);\n            state.changeEvent('Games.local.change');\n          }\n        )();\n      }\n      var exportCurrentGame = stateExportsService\n            .export$('game', R.prop('game'));\n      function exportCurrentModelSelection(state) {\n        return stateExportsService\n          .export('models', R.pipePromise(\n            R.path(['game','model_selection']),\n            stateExportsService.rejectIf$(R.isNil),\n            gameModelSelectionService.get$('local'),\n            stateExportsService.rejectIf$(R.isEmpty),\n            (stamps) => {\n              return gameModelsService\n                .copyStamps(stamps, R.path(['game', 'models'], state));\n            },\n            stateExportsService.rejectIf$(R.isEmpty)\n          ), state);\n      }\n      var exportCurrentBoard = stateExportsService\n            .export$('board', R.pipePromise(\n              R.prop('game'),\n              stateExportsService.rejectIf$(R.isNil),\n              (game) => {\n                return {\n                  board: game.board,\n                  terrain: {\n                    base: { x: 0, y: 0, r: 0 },\n                    terrains: R.pipe(\n                      gameTerrainsService.all,\n                      R.pluck('state'),\n                      R.map(R.pick(['x','y','r','info','lk']))\n                    )(game.terrains)\n                  }\n                };\n              }\n            ));\n      R.curryService(stateGameService);\n      return stateGameService;\n    }\n  ]);\n"]}