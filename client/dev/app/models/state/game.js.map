{"version":3,"sources":["game.es6"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('stateGame', stateGameModelFactory);\n\n  stateGameModelFactory.$inject = [\n    'games',\n    'game',\n    'gameBoard',\n    // 'gameConnection',\n    'gameFactions',\n    'gameModels',\n    'gameModelSelection',\n    'gameScenario',\n    'gameTerrainInfo',\n    'gameTerrains',\n    'fileImport',\n    'stateExports',\n    'allCommands',\n    'allTemplates',\n  ];\n  function stateGameModelFactory(gamesModel,\n                                 gameModel,\n                                 gameBoardModel,\n                                 // gameConnectionModel,\n                                 gameFactionsModel,\n                                 gameModelsModel,\n                                 gameModelSelectionModel,\n                                 gameScenarioModel,\n                                 gameTerrainInfoModel,\n                                 gameTerrainsModel,\n                                 fileImportService,\n                                 stateExportsModel) {\n    const stateGameModel = {\n      create: stateGamesCreate,\n      save: stateGameSave,\n      onGameLoad: stateGameOnLoad,\n      // onGameConnectionClose: stateGameOnConnectionClose,\n      onGameCommandExecute: stateGameOnCommandExecute,\n      // onGameCommandUndo: stateGameOnCommandUndo,\n      onGameCommandUndoLast: stateGameOnCommandUndoLast,\n      // onGameCommandReplay: stateGameOnCommandReplay,\n      onGameCommandReplayNext: stateGameOnCommandReplayNext,\n      // onGameCommandReplayBatch: stateGameOnCommandReplayBatch,\n      // onGameSetCmds: stateGameOnSetCmds,\n      // onGameSetPlayers: stateGameOnSetPlayers,\n      // onGameNewChatMsg: stateGameOnNewChatMsg,\n      onGameUpdate: stateGameOnUpdate,\n      // onGameInvitePlayer: stateGameOnInvitePlayer,\n      onGameModelCreate: stateGameOnModelCreate,\n      onGameModelCopy: stateGameOnModelCopy,\n      onGameModelImportList: stateGameOnModelImportList,\n      onGameModelImportFile: stateGameOnModelImportFile,\n      onGameTemplateCreate: stateGameOnTemplateCreate,\n      onGameTerrainCreate: stateGameOnTerrainCreate,\n      onGameTerrainReset: stateGameOnTerrainReset,\n      onGameBoardSet: stateGameOnBoardSet,\n      onGameBoardSetRandom: stateGameOnBoardSetRandom,\n      onGameBoardImportFile: stateGameOnBoardImportFile,\n      onGameScenarioSet: stateGameOnScenarioSet,\n      onGameScenarioSetRandom: stateGameOnScenarioSetRandom,\n      onGameScenarioRefresh: stateGameOnScenarioRefresh,\n      // onGameScenarioGenerateObjectives: stateGameOnScenarioGenerateObjectives,\n    };\n\n    const setGame$ = R.curry(setGame);\n    const exportCurrentGame = stateExportsModel\n            .exportP$('game', R.prop('game'));\n    const exportCurrentBoard = stateExportsModel\n            .exportP$('board', exportBoardData);\n\n    R.curryService(stateGameModel);\n    return stateGameModel;\n\n    function stateGamesCreate(state) {\n      state.game = null;\n\n      state.onEvent('Game.load',\n                    stateGameModel.onGameLoad$(state));\n      // state.onEvent('Game.connection.close',\n      //               stateGameModel.onGameConnectionClose$(state));\n      state.onEvent('Game.command.execute',\n                    stateGameModel.onGameCommandExecute$(state));\n      // state.onEvent('Game.command.undo',\n      //               stateGameModel.onGameCommandUndo$(state));\n      // state.onEvent('Game.command.replay',\n      //               stateGameModel.onGameCommandReplay$(state));\n      // state.onEvent('Game.command.replayBatch',\n      //               stateGameModel.onGameCommandReplayBatch$(state));\n      state.onEvent('Game.command.undoLast',\n                    stateGameModel.onGameCommandUndoLast$(state));\n      state.onEvent('Game.command.replayNext',\n                    stateGameModel.onGameCommandReplayNext$(state));\n      // state.onEvent('Game.setCmds',\n      //               stateGameModel.onGameSetCmds$(state));\n      // state.onEvent('Game.setPlayers',\n      //               stateGameModel.onGameSetPlayers$(state));\n      // state.onEvent('Game.newChatMsg',\n      //               stateGameModel.onGameNewChatMsg$(state));\n      state.onEvent('Game.update',\n                    stateGameModel.onGameUpdate$(state));\n      // state.onEvent('Game.invitePlayer',\n      //               stateGameModel.onGameInvitePlayer$(state));\n      state.onEvent('Game.model.create',\n                    stateGameModel.onGameModelCreate$(state));\n      state.onEvent('Game.model.copy',\n                    stateGameModel.onGameModelCopy$(state));\n      state.onEvent('Game.model.importList',\n                    stateGameModel.onGameModelImportList$(state));\n      state.onEvent('Game.model.importFile',\n                    stateGameModel.onGameModelImportFile$(state));\n      state.onEvent('Game.template.create',\n                    stateGameModel.onGameTemplateCreate$(state));\n      state.onEvent('Game.terrain.create',\n                    stateGameModel.onGameTerrainCreate$(state));\n      state.onEvent('Game.terrain.reset',\n                    stateGameModel.onGameTerrainReset$(state));\n      state.onEvent('Game.board.set',\n                    stateGameModel.onGameBoardSet$(state));\n      state.onEvent('Game.board.setRandom',\n                    stateGameModel.onGameBoardSetRandom$(state));\n      state.onEvent('Game.board.importFile',\n                    stateGameModel.onGameBoardImportFile$(state));\n      state.onEvent('Game.scenario.set',\n                    stateGameModel.onGameScenarioSet$(state));\n      state.onEvent('Game.scenario.setRandom',\n                    stateGameModel.onGameScenarioSetRandom$(state));\n      state.onEvent('Game.scenario.refresh',\n                    stateGameModel.onGameScenarioRefresh$(state));\n      // state.onEvent('Game.scenario.generateObjectives',\n      //               stateGameModel.onGameScenarioGenerateObjectives$(state));\n\n      return state;\n    }\n    function stateGameSave(state) {\n      return R.thread()(\n        () => saveCurrentGame(state),\n        () => exportCurrentGame(state),\n        () => exportCurrentModelSelectionP(state),\n        () => exportCurrentBoard(state)\n      );\n    }\n    function stateGameOnLoad(state, event, is_online, is_private, id) {\n      return R.threadP(waitForDataReady())(\n        loadStoredGameData,\n        broadcast('Game.loading'),\n        setGame$(state),\n        resetModes,\n        gameModel.loadP$(state),\n        // (game) => {\n        //   return new self.Promise((resolve, reject) => {\n        //     setTimeout(resolve, 3000);\n        //   });\n        // },\n        (game) => {\n          state.queueChangeEventP('Game.loaded');\n          return game;\n        },\n        // connectOnlineGame,\n        setGame$(state),\n        broadcast('Game.load.success')\n      ).catch(onError);\n\n      function waitForDataReady() {\n        return self.Promise.all([\n          state.data_ready,\n          state.user_ready,\n          state.games_ready\n        ]);\n      }\n      function loadStoredGameData() {\n        return ( is_online\n                 ? gamesModel.loadOnlineGame(is_private, id)\n                 : gamesModel.loadLocalGameP(id, state.local_games)\n               );\n      }\n      function broadcast(event) {\n        return (game) => {\n          state.changeEventP(event);\n          return game;\n        };\n      }\n      function resetModes(game) {\n        return state.eventP('Modes.reset')\n          .then(R.always(game));\n      }\n      // function connectOnlineGame(game) {\n      //   if(!is_online) return game;\n\n      //   return gameConnectionModel\n      //     .open$(R.path(['user','state','name'], state), state, game);\n      // }\n      function onError(error) {\n        state.changeEventP('Game.load.error', error);\n      }\n    }\n    // function stateGameOnConnectionClose(state, event) {\n    //   event = event;\n    //   return R.pipe(\n    //     gameConnectionModel.cleanup,\n    //     setGame$(state)\n    //   )(state.game);\n    // }\n    function stateGameOnCommandExecute(state, event, cmd, args) {\n      return R.threadP(state.game)(\n        gameModel.executeCommandP$(cmd, args, state),\n        setGame$(state)\n      ).catch(gameModel.actionError$(state));\n    }\n    // function stateGameOnCommandUndo(state, event, cmd) {\n    //   return R.pipeP(\n    //     gameModel.undoCommand$(cmd, state),\n    //     setGame$(state)\n    //   )(state.game);\n    // }\n    function stateGameOnCommandUndoLast(state, event) {\n      return R.threadP(state.game)(\n        gameModel.undoLastCommandP$(state),\n        setGame$(state)\n      ).catch(gameModel.actionError$(state));\n    }\n    // function stateGameOnCommandReplay(state, event, cmd) {\n    //   return R.pipeP(\n    //     gameModel.replayCommand$(cmd, state),\n    //     setGame$(state)\n    //   )(state.game);\n    // }\n    // function stateGameOnCommandReplayBatch(state, event, cmds) {\n    //   return R.pipeP(\n    //     gameModel.replayCommandsBatch$(cmds, state),\n    //     setGame$(state)\n    //   )(state.game);\n    // }\n    function stateGameOnCommandReplayNext(state, event) {\n      return R.threadP(state.game)(\n        gameModel.replayNextCommandP$(state),\n        setGame$(state)\n      ).catch(gameModel.actionError$(state));\n    }\n    // function stateGameOnSetCmds(state, event, set) {\n    //   return R.pipe(\n    //     R.assoc(set.where, set.cmds),\n    //     setGame$(state)\n    //   )(state.game);\n    // }\n    // function stateGameOnSetPlayers(state, event, players) {\n    //   return R.pipe(\n    //     R.assoc('players', players),\n    //     setGame$(state)\n    //   )(state.game);\n    // }\n    // function stateGameOnNewChatMsg(state, event, msg) {\n    //   return R.pipe(\n    //     R.over(R.lensProp('chat'),\n    //            R.compose(R.append(msg.chat), R.defaultTo([]))),\n    //     setGame$(state),\n    //     () => { state.changeEvent('Game.chat'); }\n    //   )(state.game);\n    // }\n    function stateGameOnUpdate(state, event, lens, update) {\n      return R.thread(state.game)(\n        R.over(lens, update),\n        setGame$(state)\n      );\n    }\n    // function stateGameOnInvitePlayer(state, event, to) {\n    //   var msg = [\n    //     s.capitalize(R.pathOr('Unknown', ['user','state','name'], state)),\n    //     'has invited you to join a game'\n    //   ].join(' ');\n    //   var link = $window.location.hash;\n    //   console.log('Invite player', to, msg, link);\n\n    //   return state.event('User.sendChatMsg',\n    //                      { to: to, msg: msg, link: link });\n    // }\n    function stateGameOnModelCreate(state, event, model_path, repeat = 1) {\n      state.create = {\n        base: { x: 240, y: 240, r: 0 },\n        models: R.times((i) => ({\n          info: model_path,\n          x: 20*i, y: 0, r: 0\n        }), repeat)\n      };\n      return state.eventP('Modes.switchTo', 'CreateModel');\n    }\n    function stateGameOnModelCopy(state, event, create) {\n      state.create = create;\n      return state.eventP('Modes.switchTo', 'CreateModel');\n    }\n    function stateGameOnModelImportList(state, event, list) {\n      const user = R.pathOr('Unknown', ['user','state','name'], state);\n      state.create = gameFactionsModel\n        .buildModelsList(list, user, state.factions.references);\n      console.info('doImportList', list, state.create);\n      return state.eventP('Modes.switchTo', 'CreateModel');\n    }\n    function stateGameOnModelImportFile(state, event, file) {\n      return R.threadP(file)(\n        fileImportService.readP$('json'),\n        (create) => {\n          state.create = create;\n          return state.eventP('Modes.switchTo', 'CreateModel');\n        }\n      ).catch(gameModel.actionError$(state));\n    }\n    function stateGameOnTemplateCreate(state, event, type) {\n      state.create = {\n        base: { x: 240, y: 240, r: 0 },\n        templates: [ { type: type, x: 0, y: 0, r: 0 } ]\n      };\n      return state.eventP('Modes.switchTo', 'CreateTemplate');\n    }\n    function stateGameOnTerrainCreate(state, event, path) {\n      state.create = {\n        base: { x: 240, y: 240, r: 0 },\n        terrains: [ {\n          info: path,\n          x: 0, y: 0, r: 0\n        } ]\n      };\n      return state.eventP('Modes.switchTo', 'CreateTerrain');\n    }\n    function stateGameOnTerrainReset(state, event) {\n      return R.threadP(state.game)(\n        R.prop('terrains'),\n        gameTerrainsModel.all,\n        R.pluck('state'),\n        R.pluck('stamp'),\n        (stamps) => state.eventP('Game.command.execute',\n                                 'deleteTerrain', [stamps])\n      ).catch(gameModel.actionError$(state));\n    }\n    function stateGameOnBoardSet(state, event, name) {\n      let board = gameBoardModel.forName(name, state.boards);\n      return state.eventP('Game.command.execute',\n                          'setBoard', [board]);\n    }\n    function stateGameOnBoardSetRandom(state, event) {\n      let board, name = gameBoardModel.name(state.game.board);\n      while(name === gameBoardModel.name(state.game.board)) {\n        board = state.boards[R.randomRange(0, state.boards.length-1)];\n        name = gameBoardModel.name(board);\n      }\n      return state.eventP('Game.command.execute',\n                          'setBoard', [board]);\n    }\n    function stateGameOnBoardImportFile(state, event, file) {\n      return R.threadP(file)(\n        fileImportService.readP$('json'),\n        (data) => R.threadP(data)(\n          R.prop('board'),\n          R.rejectIf(R.isNil, 'No board'),\n          () => state.eventP('Game.command.execute',\n                             'setBoard', [data.board]),\n          R.always(data),\n          R.path(['terrain', 'terrains']),\n          R.rejectIf(R.isEmpty, 'No terrain'),\n          () => state.eventP('Game.terrain.reset'),\n          () => state.eventP('Game.command.execute',\n                             'createTerrain', [data.terrain, false])\n        )\n      ).catch(R.spyAndDiscardError('Import board file'));\n    }\n    function stateGameOnScenarioSet(state, event, name, group) {\n      const scenario = gameScenarioModel.forName(name, group);\n      return state.eventP('Game.command.execute',\n                          'setScenario', [scenario]);\n    }\n    function stateGameOnScenarioSetRandom(state, event) {\n      const group = gameScenarioModel.group('SR15', state.scenarios);\n      let scenario, name = gameScenarioModel.name(state.game.scenario);\n      while(name === gameScenarioModel.name(state.game.scenario)) {\n        scenario = group[1][R.randomRange(0, group[1].length-1)];\n        name = gameScenarioModel.name(scenario);\n      }\n      return state.eventP('Game.command.execute',\n                          'setScenario', [scenario]);\n    }\n    function stateGameOnScenarioRefresh(state, event) {\n      state.queueChangeEventP('Game.scenario.refresh');\n    }\n    // function stateGameOnScenarioGenerateObjectives(state, event) {\n    //   event = event;\n    //   return R.pipePromise(\n    //     () => {\n    //       return gameModelsModel.all(state.game.models);\n    //     },\n    //     R.filter(R.pipe(\n    //       R.path(['state','info']),\n    //       R.head,\n    //       R.equals('scenario')\n    //     )),\n    //     R.map(R.path(['state','stamp'])),\n    //     (stamps) => {\n    //       return state.event('Game.command.execute',\n    //                          'deleteModel', [stamps]);\n    //     },\n    //     () => {\n    //       return gameScenarioModel\n    //         .createObjectives(state.game.scenario);\n    //     },\n    //     (objectives) => {\n    //       var is_flipped = R.path(['ui_state','flip_map'], state);\n    //       return state.event('Game.command.execute',\n    //                          'createModel', [objectives, is_flipped]);\n    //     }\n    //   )();\n    // }\n    function setGame(state, game) {\n      state.game = game;\n      console.log('stateGame', state.game);\n      state.queueChangeEventP('Game.change');\n      return game;\n    }\n    function saveCurrentGame(state) {\n      if(state._game === state.game) return null;\n      state._game = state.game;\n\n      if(R.isNil(R.path(['game','local_stamp'], state))) {\n        return null;\n      }\n      return R.thread(state.local_games)(\n        gamesModel.updateLocalGame$(state.game),\n        (games) => {\n          state.local_games = games;\n          console.log('stateSetLocalGames', state.local_games);\n          state.queueChangeEventP('Games.local.change');\n        }\n      );\n    }\n    function exportCurrentModelSelectionP(state) {\n      return stateExportsModel\n        .exportP('models', (state) => R.threadP(state)(\n          R.path(['game','model_selection']),\n          R.rejectIf(R.isNil, 'selection is nil'),\n          gameModelSelectionModel.get$('local'),\n          R.rejectIf(R.isEmpty, 'selection is empty'),\n          (stamps) => gameModelsModel\n            .copyStampsP(stamps, R.path(['game', 'models'], state)),\n          R.rejectIf(R.isEmpty, 'selection models not found')\n        ), state);\n    }\n    function exportBoardData(state) {\n      return R.thread(state)(\n        R.prop('game'),\n        (game) => ({\n          board: game.board,\n          terrain: {\n            base: { x: 0, y: 0, r: 0 },\n            terrains: R.thread(game.terrains)(\n              gameTerrainsModel.all,\n              R.pluck('state'),\n              R.map(R.pick(['x','y','r','info','lk']))\n            )\n          }\n        })\n      );\n    }\n  }\n})();\n"]}