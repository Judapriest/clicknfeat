{"version":3,"sources":["user.es6"],"names":[],"mappings":"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","file":"user.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('stateUser', stateUserServiceFactory);\n\n  const KEEP_ALIVE_INTERVAL_SECONDS = 60;\n  stateUserServiceFactory.$inject = [\n    'user',\n    'userConnection',\n    'http',\n    'prompt',\n  ];\n  function stateUserServiceFactory(userModel,\n                                   userConnectionModel,\n                                   httpService,\n                                   promptService) {\n    const stateUserModel = {\n      create: stateUserCreate,\n      save: stateUserSave,\n      onStateInit: stateUserOnInit,\n      onUserSet: stateUserOnSet,\n      onUserToggleOnline: stateOnUserToggleOnline,\n      onUserSendChatMsg: stateOnUserSendChatMsg,\n      onUserConnectionClose: stateOnUserConnectionClose,\n      onUserSetOnlineUsers: stateOnUserSetOnlineUsers,\n      onUserSetOnlineGames: stateOnUserSetOnlineGames,\n      onUserNewChatMsg: stateOnUserNewChatMsg,\n      onUserChange: stateUserOnChange\n    };\n    const setUser$ = R.curry(setUser);\n    R.curryService(stateUserModel);\n    return stateUserModel;\n\n    function stateUserCreate(state) {\n      state.user = {};\n      state.user_ready = new self.Promise((resolve) => {\n        state.onEvent('State.init',\n                      stateUserModel.onStateInit$(state, resolve));\n      });\n\n      state.onEvent('User.set',\n                    stateUserModel.onUserSet$(state));\n      state.onEvent('User.toggleOnline',\n                    stateUserModel.onUserToggleOnline$(state));\n      state.onEvent('User.sendChatMsg',\n                    stateUserModel.onUserSendChatMsg$(state));\n      state.onEvent('User.connection.close',\n                    stateUserModel.onUserConnectionClose$(state));\n      state.onEvent('User.setOnlineUsers',\n                    stateUserModel.onUserSetOnlineUsers$(state));\n      state.onEvent('User.setOnlineGames',\n                    stateUserModel.onUserSetOnlineGames$(state));\n      state.onEvent('User.newChatMsg',\n                    stateUserModel.onUserNewChatMsg$(state));\n      state.onChangeEvent('User.change',\n                          stateUserModel.onUserChange$(state));\n\n      return state;\n    }\n    function stateUserSave(state) {\n      if(state._user === state.user) return null;\n      state._user = state.user;\n      return userModel.save(state.user);\n    }\n    function stateUserOnInit(state, ready, _event_) {\n      return R.threadP(state)(\n        userModel.initP,\n        setUser$(state),\n        () => { state.user_ready.fulfilled = true; },\n        ready\n      );\n    }\n    function stateUserOnSet(state, _event_, user_state) {\n      return R.threadP(state.user)(\n        R.assoc('state', user_state),\n        userModel.checkOnlineP$(state),\n        setUser$(state)\n      );\n    }\n    function stateOnUserToggleOnline(state, _event_) {\n      return R.threadP(state.user)(\n        userModel.toggleOnlineP$(state),\n        setUser$(state)\n      );\n    }\n    function stateOnUserSendChatMsg(state, _event_, chat) {\n      return userConnectionModel\n        .sendChatP$(chat, state.user);\n    }\n    function stateOnUserConnectionClose(state, _event_) {\n      return R.threadP(state.user)(\n        userModel.online,\n        R.rejectIf(R.not, 'User not online when connection close'),\n        () => promptService\n          .promptP('alert','Server connection lost.')\n          .catch(R.always(null)),\n        () => userModel.toggleOnlineP(state, state.user),\n        setUser$(state)\n      );\n    }\n    function stateOnUserSetOnlineUsers(state, _event_, users) {\n      return R.thread(state.user)(\n        R.assocPath(['connection','users'], users),\n        setUser$(state)\n      );\n    }\n    function stateOnUserSetOnlineGames(state, _event_, games) {\n      return R.thread(state.user)(\n        R.assocPath(['connection','games'], games),\n        setUser$(state)\n      );\n    }\n    function stateOnUserNewChatMsg(state, _event_, msg) {\n      state.queueChangeEventP('User.chat', msg);\n      return R.thread(state.user)(\n        R.over(R.lensPath(['connection','chat']), R.pipe(\n          R.defaultTo([]),\n          R.append(msg)\n        )),\n        setUser$(state)\n      );\n    }\n    function stateUserOnChange(state, _event_) {\n      if(userModel.online(state.user)) {\n        registerKeepAliveInterval(state);\n      }\n      else {\n        clearKeepAliveInterval(state);\n      }\n    }\n    function registerKeepAliveInterval(state) {\n      if(R.exists(state._keep_alive_interval)) return;\n\n      state._keep_alive_interval =\n        self.window.setInterval(keepAliveRequest(state),\n                                KEEP_ALIVE_INTERVAL_SECONDS * 1000);\n    }\n    function clearKeepAliveInterval(state) {\n      if(R.isNil(state._keep_alive_interval)) return;\n\n      self.window.clearInterval(state._keep_alive_interval);\n      state._keep_alive_interval = null;\n    }\n    function keepAliveRequest(state) {\n      return () => {\n        httpService\n          .getP(`/api/users/${state.user.state.stamp}`)\n          .then(R.spyInfo('** keepAlive'));\n      };\n    }\n    function setUser(state, user) {\n      state.user = user;\n      console.log('stateSetUser', state.user);\n      state.queueChangeEventP('User.change');\n    }\n  }\n})();\n"]}