{"version":3,"sources":["data.es6"],"names":[],"mappings":"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","file":"data.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('stateData', [\n    'pubSub',\n    'stateExports',\n    'fileImport',\n    'settings',\n    'gameBoard',\n    'gameTerrainInfo',\n    'gameFactions',\n    'gameScenario',\n    function stateDataServiceFactory(pubSubService,\n                                     stateExportsService,\n                                     fileImportService,\n                                     settingsService,\n                                     gameBoardService,\n                                     gameTerrainInfoService,\n                                     gameFactionsService,\n                                     gameScenarioService) {\n      var stateDataService = {\n        init: function stateDataInit(state) {\n          let boards_ready = gameBoardService.init()\n                .then((boards) => {\n                  state.boards = boards;\n                  console.log('board', boards);\n                });\n          let terrains_ready = gameTerrainInfoService.init()\n                .then((terrains) => {\n                  state.terrains = terrains;\n                  console.log('terrains', terrains);\n                });\n          let factions_ready = gameFactionsService.init()\n                .then((factions) => {\n                  state.factions = factions;\n                });\n          let scenario_ready = gameScenarioService.init()\n                .then((scenarios) => {\n                  state.scenarios = scenarios;\n                  console.log('scenarios', scenarios);\n                });\n          let settings_ready = settingsService.init()\n                .then((settings) => {\n                  state.settings = settings;\n                  exportCurrentSettings(state);\n                });\n          state.data_ready = self.Promise.all([\n            boards_ready,\n            terrains_ready,\n            factions_ready,\n            scenario_ready,\n            settings_ready,\n          ]).then(() => {\n            console.log('data ready');\n          });\n\n          state.onEvent('Settings.loadFile',\n                        stateDataService.onSettingsLoadFile$(state));\n          state.onEvent('Settings.reset',\n                        stateDataService.onSettingsReset$(state));\n          state.onEvent('Factions.loadDescFile',\n                        stateDataService.onFactionsLoadDescFile$(state));\n          state.onEvent('Factions.clearDesc',\n                        stateDataService.onFactionsClearDesc$(state));\n          state.onEvent('Factions.clearAllDesc',\n                        stateDataService.onFactionsClearAllDesc$(state));\n          // state.onEvent('Factions.reload',\n          //               stateDataService.onReloadFactions$(state));\n\n          return state;\n        },\n        save: function stateDataSave(state) {\n          return R.pipeP(\n            R.always(exportCurrentSettings(state)),\n            R.always(storeCurrentSettings(state)),\n            R.always(storeCurrentFactions(state))\n          )();\n        },\n        onSettingsLoadFile: function stateOnSettingsLoadFile(state, event, file) {\n          return R.pipeP(\n            fileImportService.read$('json'),\n            settingsService.bind,\n            settingsService.update,\n            setSettings$(state),\n            () => {\n              state.changeEvent('Settings.loadFile', 'Settings loaded');\n            }\n          )(file).catch((error) => {\n            state.changeEvent('Settings.loadFile', error);\n          });\n        },\n        onSettingsReset: function stateOnSettingsReset(state, event, data) {\n          return R.pipePromise(\n            settingsService.bind,\n            settingsService.update,\n            setSettings$(state)\n          )(data);\n        },\n        onFactionsLoadDescFile: function stateOnFactionsLoadDescFile(state, event, faction, file) {\n          return R.pipeP(\n            fileImportService.read$('json'),\n            (faction_desc) => {\n              return R.assocPath(['desc', faction], faction_desc, state.factions);\n            },\n            gameFactionsService.updateDesc,\n            setFactions$(state),\n            () => {\n              state.changeEvent('Factions.loadDescFile', 'File loaded');\n            }\n          )(file).catch((error) => {\n            state.changeEvent('Factions.loadDescFile', error);\n          });\n        },\n        onFactionsClearDesc: function stateOnFactionsClearDesc(state, event, faction) {\n          return R.pipePromise(\n            R.dissocPath(['desc', faction]),\n            gameFactionsService.updateDesc,\n            setFactions$(state)\n          )(state.factions);\n        },\n        onFactionsClearAllDesc: function stateOnFactionsClearAllDesc(state, event) {\n          event = event;\n          return R.pipePromise(\n            R.assoc('desc', {}),\n            gameFactionsService.updateDesc,\n            setFactions$(state)\n          )(state.factions);\n        }\n      };\n      var setSettings$ = R.curry((state, settings) => {\n        state.settings = settings;\n        state.changeEvent('Settings.change');\n      });\n      var setFactions$ = R.curry((state, factions) => {\n        state.factions = factions;\n        state.changeEvent('Factions.change');\n      });\n      var exportCurrentSettings = stateExportsService\n            .export$('settings', R.path(['settings','current']));\n      var storeCurrentSettings = (state) => {\n        if(state._settings === state.settings) return null;\n        state._settings = state.settings;\n        return settingsService.store(state.settings);\n      };\n      var storeCurrentFactions = (state) => {\n        if(state._factions === state.factions) return null;\n        state._factions = state.factions;\n        return gameFactionsService.storeDesc(state.factions);\n      };\n\n      R.curryService(stateDataService);\n      return stateDataService;\n    }\n  ]);\n"]}