{"version":3,"sources":["data.es6"],"names":[],"mappings":"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","file":"data.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('stateData', stateDataModelFactory);\n\n  stateDataModelFactory.$inject = [\n    'fileExport',\n    'fileImport',\n    'settings',\n    'gameBoard',\n    'gameTerrainInfo',\n    'gameFactions',\n    'gameScenario',\n    'appState',\n    'state',\n  ];\n  function stateDataModelFactory(fileExportService,\n                                 fileImportService,\n                                 settingsModel,\n                                 gameBoardModel,\n                                 gameTerrainInfoModel,\n                                 gameFactionsModel,\n                                 gameScenarioModel,\n                                 appStateService,\n                                 stateModel) {\n    const BOARDS_LENS = R.lensProp('boards');\n    const FACTIONS_LENS = R.lensProp('factions');\n    const SCENARIOS_LENS = R.lensProp('scenarios');\n    const SETTINGS_LENS = R.lensProp('settings');\n    const TERRAINS_LENS = R.lensProp('terrains');\n\n    const stateDataModel = {\n      create: stateDataCreate,\n      onBoardsSet: stateDataOnBoardsSet,\n      onFactionsSet: stateDataOnFactionsSet,\n      onScenariosSet: stateDataOnScenariosSet,\n      onSettingsSet: stateDataOnSettingsSet,\n      onTerrainsSet: stateDataOnTerrainsSet,\n      onSettingsLoadFile: stateDataOnSettingsLoadFile,\n      onSettingsReset: stateDataOnSettingsReset,\n      settingsStoreCurrent: stateDataSettingsStoreCurrent,\n      settingsUpdateExport: stateDataSettingsUpdateExport,\n      onFactionsLoadDescFile: stateDataOnFactionsLoadDescFile,\n      onFactionsClearDesc: stateDataOnFactionsClearDesc,\n      onFactionsClearAllDesc: stateDataOnFactionsClearAllDesc,\n      onFactionsUpdateDesc: stateDataOnFactionsUpdateDesc,\n      factionsStoreDesc: stateDataFactionsStoreDesc\n    };\n    R.curryService(stateDataModel);\n    stateModel.register(stateDataModel);\n    return stateDataModel;\n\n    function stateDataCreate(state) {\n      appStateService\n        .addReducer('Boards.set'               , stateDataModel.onBoardsSet)\n        .addReducer('Terrains.set'             , stateDataModel.onTerrainsSet)\n        .addReducer('Factions.set'             , stateDataModel.onFactionsSet)\n        .addReducer('Scenarios.set'            , stateDataModel.onScenariosSet)\n        .addReducer('Settings.set'             , stateDataModel.onSettingsSet)\n        .addReducer('Settings.loadFile'        , stateDataModel.onSettingsLoadFile)\n        .addReducer('Settings.reset'           , stateDataModel.onSettingsReset)\n        .addReducer('Factions.loadDescFile'    , stateDataModel.onFactionsLoadDescFile)\n        .addReducer('Factions.updateDesc'      , stateDataModel.onFactionsUpdateDesc)\n        .addReducer('Factions.clearDesc'       , stateDataModel.onFactionsClearDesc)\n        .addReducer('Factions.clearAllDesc'    , stateDataModel.onFactionsClearAllDesc)\n        .addListener('Factions.desc.change'    , stateDataModel.factionsStoreDesc)\n        .addListener('Settings.current.change' , stateDataModel.settingsStoreCurrent);\n\n      const boards_ready = gameBoardModel.initP()\n              .then((boards) => appStateService.reduce('Boards.set', boards));\n      const factions_ready = gameFactionsModel.initP()\n              .then((factions) => appStateService.reduce('Factions.set', factions));\n      const terrains_ready = gameTerrainInfoModel.initP()\n              .then((terrains) => appStateService.reduce('Terrains.set', terrains));\n      const scenarios_ready = gameScenarioModel.initP()\n              .then((scenarios) => appStateService.reduce('Scenarios.set', scenarios));\n      const settings_ready = settingsModel.initP()\n              .then((settings) => appStateService.reduce('Settings.set', settings));\n\n      appStateService\n        .onChange('AppState.change',\n                  'Factions.desc.change',\n                  R.compose(R.prop('desc'), R.view(FACTIONS_LENS)));\n      appStateService\n        .onChange('AppState.change',\n                  'Settings.current.change',\n                  R.compose(R.prop('current'), R.view(SETTINGS_LENS)));\n      const settings_export_cell = appStateService\n        .cell('Settings.current.change',\n              stateDataModel.settingsUpdateExport,\n              {});\n\n      return R.thread(state)(\n        R.set(BOARDS_LENS, []),\n        R.set(FACTIONS_LENS, {}),\n        R.set(SCENARIOS_LENS, {}),\n        R.set(SETTINGS_LENS, {}),\n        R.set(TERRAINS_LENS, {}),\n        R.assocPath(['exports', 'settings'], settings_export_cell),\n        R.assoc('data_ready', R.allP([\n          boards_ready,\n          terrains_ready,\n          factions_ready,\n          scenarios_ready,\n          settings_ready,\n        ]))\n      );\n    }\n    function stateDataOnBoardsSet(state, _event_, [boards]) {\n      return R.set(BOARDS_LENS, boards, state);\n    }\n    function stateDataOnFactionsSet(state, _event_, [factions]) {\n      return R.set(FACTIONS_LENS, factions, state);\n    }\n    function stateDataOnScenariosSet(state, _event_, [scenarios]) {\n      return R.set(SCENARIOS_LENS, scenarios, state);\n    }\n    function stateDataOnSettingsSet(state, _event_, [settings]) {\n      return R.set(SETTINGS_LENS, settings, state);\n    }\n    function stateDataOnTerrainsSet(state, _event_, [terrains]) {\n      return R.set(TERRAINS_LENS, terrains, state);\n    }\n    function stateDataOnSettingsLoadFile(_state_, _event_, [file]) {\n      return R.threadP(file)(\n        fileImportService.readP$('json'),\n        settingsModel.bind,\n        settingsModel.update,\n        (settings) => {\n          appStateService.reduce('Settings.set', settings);\n          appStateService.emit('Settings.loadFile', 'Settings loaded');\n        }\n      ).catch((error) => {\n        appStateService.emit('Settings.loadFile', error);\n      });\n    }\n    function stateDataOnSettingsReset(state, _event_, [data]) {\n      return R.thread(data)(\n        settingsModel.bind,\n        settingsModel.update,\n        (settings) => R.set(SETTINGS_LENS, settings, state)\n      );\n    }\n    function stateDataOnFactionsLoadDescFile(_state_, _event_, [faction, file]) {\n      return R.threadP(file)(\n        fileImportService.readP$('json'),\n        (desc) => {\n          appStateService\n            .reduce('Factions.updateDesc', faction, desc);\n          appStateService\n            .emit('Factions.loadDescFile', 'File loaded');\n        }\n      ).catch((error) => {\n        appStateService.emit('Factions.loadDescFile', error);\n      });\n    }\n    function stateDataOnFactionsUpdateDesc(state, _event_, [faction, desc]) {\n      return R.over(\n        FACTIONS_LENS,\n        (factions) => R.thread(factions)(\n          R.assocPath(['desc', faction], desc),\n          gameFactionsModel.updateDesc\n        ),\n        state\n      );\n    }\n    function stateDataOnFactionsClearDesc(state, _event_, [faction]) {\n      return R.over(\n        FACTIONS_LENS,\n        (factions) => R.thread(factions)(\n          R.dissocPath(['desc', faction]),\n          gameFactionsModel.updateDesc\n        ),\n        state\n      );\n    }\n    function stateDataOnFactionsClearAllDesc(state) {\n      return R.over(\n        FACTIONS_LENS,\n        (factions) => R.thread(factions)(\n          R.assoc('desc', {}),\n          gameFactionsModel.updateDesc\n        ),\n        state\n      );\n    }\n    function stateDataSettingsStoreCurrent() {\n      const settings = R.view(SETTINGS_LENS, appStateService.current());\n      return settingsModel.store(settings);\n    }\n    function stateDataFactionsStoreDesc(_state_) {\n      const factions = R.view(FACTIONS_LENS, appStateService.current());\n      return gameFactionsModel.storeDesc(factions);\n    }\n    function stateDataSettingsUpdateExport(exp, current_settings) {\n      fileExportService.cleanup(exp.url);\n      return {\n        name: 'clicknfeat_settings.json',\n        url: fileExportService.generate('json', current_settings)\n      };\n    }\n  }\n})();\n"]}