{"version":3,"sources":["games.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,YADX,EACyB,sBADzB,EADU;;AAIV,yBAAuB,OAAvB,GAAiC,CAC/B,MAD+B,EAE/B,OAF+B,CAAjC,CAJU;;;AASV,WAAS,sBAAT,CAAgC,SAAhC,EACgC,UADhC,EAC4C;;AAE1C,QAAM,oBAAoB;AACxB,cAAQ,gBAAR;AACA,YAAM,cAAN;AACA,mBAAa,gBAAb;AACA,0BAAoB,uBAApB;;;AAGA,0BAAoB,uBAApB;KAPI,CAFoC;AAW1C,QAAM,iBAAiB,EAAE,KAAF,CAAQ,aAAR,CAAjB,CAXoC;AAY1C,QAAM,oBAAoB,EAAE,KAAF,CAAQ,gBAAR,CAApB,CAZoC;;AAc1C,MAAE,YAAF,CAAe,iBAAf,EAd0C;AAe1C,WAAO,iBAAP,CAf0C;;AAiB1C,aAAS,gBAAT,CAA0B,KAA1B,EAAiC;AAC/B,YAAM,WAAN,GAAoB,EAApB,CAD+B;AAE/B,YAAM,WAAN,GAAoB,IAAI,KAAK,OAAL,CAAa,UAAC,OAAD,EAAa;AAChD,cAAM,OAAN,CAAc,YAAd,EACc,kBAAkB,YAAlB,CAA+B,KAA/B,EAAsC,OAAtC,CADd,EADgD;OAAb,CAArC,CAF+B;;AAO/B,YAAM,OAAN,CAAc,oBAAd,EACc,kBAAkB,mBAAlB,CAAsC,KAAtC,CADd;;;;;AAP+B,WAa/B,CAAM,OAAN,CAAc,oBAAd,EACc,kBAAkB,mBAAlB,CAAsC,KAAtC,CADd,EAb+B;;AAgB/B,aAAO,KAAP,CAhB+B;KAAjC;AAkBA,aAAS,cAAT,CAAwB,KAAxB,EAA+B;AAC7B,aAAO,KAAP,CAD6B;KAA/B;AAGA,aAAS,gBAAT,CAA0B,KAA1B,EAAiC,KAAjC,EAAwC,KAAxC,EAA+C;AAC7C,cAAQ,KAAR,CAD6C;AAE7C,aAAO,EAAE,OAAF,GACL,WAAW,eAAX,EACA,eAAe,KAAf,CAFK,EAGL,KAHK,CAAP,CAF6C;KAA/C;AAQA,aAAS,uBAAT,CAAiC,KAAjC,EAAwC,KAAxC,EAA+C;AAC7C,cAAQ,KAAR,CAD6C;AAE7C,aAAO,EAAE,MAAF,CAAS,MAAM,IAAN,CAAW,KAAX,CAAT,CACL,UAAU,MAAV,EACA,kBAAkB,KAAlB,CAFK,CAAP,CAF6C;KAA/C;;;;;;;;;;AA9C0C,aA8DjC,uBAAT,CAAiC,KAAjC,EAAwC,KAAxC,EAA+C,EAA/C,EAAmD;AACjD,aAAO,EAAE,MAAF,CAAS,MAAM,WAAN,CAAT,CACL,WAAW,gBAAX,CAA4B,EAA5B,CADK,EAEL,eAAe,KAAf,CAFK,CAAP,CADiD;KAAnD;AAMA,aAAS,aAAT,CAAuB,KAAvB,EAA8B,KAA9B,EAAqC;AACnC,YAAM,WAAN,GAAoB,KAApB,CADmC;AAEnC,cAAQ,GAAR,CAAY,oBAAZ,EAAkC,MAAM,WAAN,CAAlC,CAFmC;AAGnC,YAAM,iBAAN,CAAwB,oBAAxB,EAHmC;KAArC;AAKA,aAAS,gBAAT,CAA0B,KAA1B,EAAiC,IAAjC,EAAuC;AACrC,aAAO,EAAE,MAAF,CAAS,MAAM,WAAN,CAAT,CACL,WAAW,aAAX,CAAyB,IAAzB,CADK,EAEL,eAAe,KAAf,CAFK,EAGL,YAAM;AACJ,cAAM,iBAAN,CACE,kBADF,EAEE,EAAE,IAAF,CAAO,aAAP,EAAsB,EAAE,IAAF,CAAO,MAAM,WAAN,CAA7B,CAFF,EADI;OAAN,CAHF,CADqC;KAAvC;GA1EF;CATD,CAAD","file":"games.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('stateGames', stateGamesModelFactory);\n\n  stateGamesModelFactory.$inject = [\n    'game',\n    'games',\n    // 'fileImport',\n  ];\n  function stateGamesModelFactory(gameModel,\n                                  gamesModel) {\n                                  // fileImportService) {\n    const stateGamesService = {\n      create: stateGamesCreate,\n      save: stateGamesSave,\n      onStateInit: stateGamesOnInit,\n      onGamesLocalCreate: stateGamesOnLocalCreate,\n      // onGamesLocalLoad: stateOnGamesLocalLoad,\n      // onGamesLocalLoadFile: stateOnGamesLocalLoadFile,\n      onGamesLocalDelete: stateOnGamesLocalDelete,\n    };\n    const setLocalGames$ = R.curry(setLocalGames);\n    const loadNewLocalGame$ = R.curry(loadNewLocalGame);\n\n    R.curryService(stateGamesService);\n    return stateGamesService;\n\n    function stateGamesCreate(state) {\n      state.local_games = {};\n      state.games_ready = new self.Promise((resolve) => {\n        state.onEvent('State.init',\n                      stateGamesService.onStateInit$(state, resolve));\n      });\n\n      state.onEvent('Games.local.create',\n                    stateGamesService.onGamesLocalCreate$(state));\n      // state.onEvent('Games.local.load',\n      //               stateGamesService.onGamesLocalLoad$(state));\n      // state.onEvent('Games.local.loadFile',\n      //               stateGamesService.onGamesLocalLoadFile$(state));\n      state.onEvent('Games.local.delete',\n                    stateGamesService.onGamesLocalDelete$(state));\n\n      return state;\n    }\n    function stateGamesSave(state) {\n      return state;\n    }\n    function stateGamesOnInit(state, ready, event) {\n      event = event;\n      return R.threadP()(\n        gamesModel.loadLocalGamesP,\n        setLocalGames$(state),\n        ready\n      );\n    }\n    function stateGamesOnLocalCreate(state, event) {\n      event = event;\n      return R.thread(state.user.state)(\n        gameModel.create,\n        loadNewLocalGame$(state)\n      );\n    }\n    // function stateOnGamesLocalLoad(state, event, index) {\n    //   state.changeEvent('Games.local.load', index);\n    // }\n    // function stateOnGamesLocalLoadFile(state, event, file) {\n    //   return R.pipePromise(\n    //     fileImportService.read$('json'),\n    //     stateGamesService.loadNewLocalGame$(state)\n    //   )(file);\n    // }\n    function stateOnGamesLocalDelete(state, event, id) {\n      return R.thread(state.local_games)(\n        gamesModel.removeLocalGame$(id),\n        setLocalGames$(state)\n      );\n    }\n    function setLocalGames(state, games) {\n      state.local_games = games;\n      console.log('stateSetLocalGames', state.local_games);\n      state.queueChangeEventP('Games.local.change');\n    }\n    function loadNewLocalGame(state, game) {\n      return R.thread(state.local_games)(\n        gamesModel.newLocalGame$(game),\n        setLocalGames$(state),\n        () => {\n          state.queueChangeEventP(\n            'Games.local.load',\n            R.prop('local_stamp', R.last(state.local_games))\n          );\n        }\n      );\n    }\n  }\n})();\n"]}