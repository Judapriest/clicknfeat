{"version":3,"sources":["geom.es6"],"names":[],"mappings":"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","file":"geom.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('point', [\n    function pointServiceFactory() {\n      var pointService = {\n        moveFront: function pointMoveFront(dist, point) {\n          var rad = point.r * Math.PI / 180;\n          return R.pipe(\n            R.assoc('x', point.x + dist * Math.sin(rad)),\n            R.assoc('y', point.y - dist * Math.cos(rad))\n          )(point);\n        },\n        moveBack: function pointMoveBack(dist, point) {\n          var rad = point.r * Math.PI / 180;\n          return R.pipe(\n            R.assoc('x', point.x - dist * Math.sin(rad)),\n            R.assoc('y', point.y + dist * Math.cos(rad))\n          )(point);\n        },\n        rotateLeft: function pointRotateLeft(angle, point) {\n          return R.assoc('r', point.r - angle, point);\n        },\n        rotateLeftAround: function pointRotateLeftAround(angle, center, point) {\n          var direction = pointService.directionTo(point, center);\n          var distance = pointService.distanceTo(point, center);\n          var new_direction = direction - angle;\n          return R.pipe(\n            R.assoc('x', center.x + distance * Math.sin(new_direction * Math.PI / 180)),\n            R.assoc('y', center.y - distance * Math.cos(new_direction * Math.PI / 180))\n          )(point);\n        },\n        rotateRight: function pointRotateRight(angle, point) {\n          return R.assoc('r', point.r + angle, point);\n        },\n        rotateRightAround: function pointRotateLeftAround(angle, center, point) {\n          var direction = pointService.directionTo(point, center);\n          var distance = pointService.distanceTo(point, center);\n          var new_direction = direction + angle;\n          return R.pipe(\n            R.assoc('x', center.x + distance * Math.sin(new_direction * Math.PI / 180)),\n            R.assoc('y', center.y - distance * Math.cos(new_direction * Math.PI / 180))\n          )(point);\n        },\n        rotateAroundTo: function pointRotateAroundTo(direction, center, point) {\n          var distance = pointService.distanceTo(point, center);\n          return R.pipe(\n            R.assoc('x', center.x + distance * Math.sin(direction * Math.PI / 180)),\n            R.assoc('y', center.y - distance * Math.cos(direction * Math.PI / 180))\n          )(point);\n        },\n        shiftLeft: function pointShiftLeft(dist, point) {\n          return R.assoc('x', point.x - dist, point);\n        },\n        shiftRight: function pointShiftRight(dist, point) {\n          return R.assoc('x', point.x + dist, point);\n        },\n        shiftUp: function pointShiftUp(dist, point) {\n          return R.assoc('y', point.y - dist, point);\n        },\n        shiftDown: function pointShiftDown(dist, point) {\n          return R.assoc('y', point.y + dist, point);\n        },\n        distanceTo: function pointDistanceTo(other, point) {\n          return Math.sqrt( Math.pow(other.x - point.x, 2) +\n                            Math.pow(other.y - point.y, 2)\n                          );\n        },\n        directionTo: function pointDirectionTo(other, point) {\n          return 180 * Math.atan2(\n            other.x - point.x,\n            point.y - other.y\n          ) / Math.PI;\n        },\n        translateInDirection: function pointTranslateInDirection(distance, direction, point) {\n          direction = direction * Math.PI / 180;\n          return R.pipe(\n            R.assoc('x', point.x + distance * Math.sin(direction)), \n            R.assoc('y', point.y - distance * Math.cos(direction))\n          )(point);\n        },\n        translateInVector: function pointTranslateInVector(distance, vector, point) {\n          return R.pipe(\n            R.assoc('x', point.x + distance * vector.x), \n            R.assoc('y', point.y + distance * vector.y)\n          )(point);\n        },\n        addToWithFlip: function pointAddToWithFlip(flip, other, point) {\n          var coeff = flip ? -1 : 1;\n          var phase = flip ? 180 : 0;\n          return R.pipe(\n            R.assoc('x', other.x + coeff * point.x),\n            R.assoc('y', other.y + coeff * point.y),\n            R.assoc('r', other.r + point.r + phase)\n          )(point);\n        },\n        differenceFrom: function pointDifferenceFrom(other, point) {\n          return R.pipe(\n            R.assoc('x', point.x - other.x),\n            R.assoc('y', point.y - other.y),\n            R.assoc('r', point.r - other.r)\n          )(point);\n        },\n        vectorProduct: function pointVectorProduct(other, point) {\n          return other.y * point.x - other.x * point.y;\n        },\n        scalarProduct: function pointScalarProduct(other, point) {\n          return other.x * point.x + other.y * point.y;\n        }\n      };\n      R.curryService(pointService);\n      return pointService;\n    }\n  ])\n  .factory('line', [\n    'point',\n    function lineServiceFactory(pointService) {\n      let lineService = {\n        length: function lineLength(line) {\n          return pointService.distanceTo(line.end, line.start);\n        },\n        vector: function lineVector(line) {\n          let length = lineService.length(line);\n          return {\n            x: (line.end.x - line.start.x) / length,\n            y: (line.end.y - line.start.y) / length\n          };\n        }\n      };\n      R.curryService(lineService);\n      return lineService;\n    }\n  ])\n  .factory('circle', [\n    'point',\n    'line',\n    function circleServiceFactory(pointService,\n                                  lineService) {\n      let circleService = {\n        positionToLine: function circlePositionToLine (line, circle) {\n          let delta = pointService.differenceFrom(line.start, circle);\n          let line_length = lineService.length(line);\n          let line_vector = lineService.vector(line);\n          let vect_prod = pointService.vectorProduct(line_vector, delta);\n          let scal_prod = pointService.scalarProduct(line_vector, delta);\n          \n          return [vect_prod, scal_prod, line_length];\n        },\n        isLeftOfLine: function circleIsLeftOfLine(line, circle) {\n          let [ vect_prod, scal_prod, line_length ] =\n                circleService.positionToLine(line, circle);\n\n          return ( vect_prod + circle.radius >= 0 &&\n                   scal_prod + circle.radius >= 0 &&\n                   scal_prod - circle.radius <= line_length\n                 );\n        },\n        isRightOfLine: function circleIsRightOfLine(line, circle) {\n          let [ vect_prod, scal_prod, line_length ] =\n                circleService.positionToLine(line, circle);\n          \n          return ( vect_prod - circle.radius <= 0 &&\n                   scal_prod + circle.radius >= 0 &&\n                   scal_prod - circle.radius <= line_length\n                 );\n        },\n        isInEnvelope: function circleIsInEnvelope(envelope, circle) {\n          return ( circleService.isRightOfLine(envelope.left, circle) &&\n                   circleService.isLeftOfLine(envelope.right, circle)\n                 );\n        },\n        isInBox: function circleIsInBox(box, circle) {\n          var dx, dy;\n          if(circle.x >= box.low.x &&\n             circle.x <= box.high.x &&\n             circle.y >= box.low.y &&\n             circle.y <= box.high.x) return true;\n          if(circle.x >= box.low.x - circle.radius &&\n             circle.x <  box.low.x) {\n            dx = box.low.x - circle.x;\n            dy = Math.sqrt(circle.radius * circle.radius - dx * dx);\n            return ( circle.y + dy >= box.low.y &&\n                     circle.y - dy <= box.high.y\n                   );\n          }\n          if(circle.x <= box.high.x + circle.radius &&\n             circle.x >  box.high.x) {\n            dx = box.high.x - circle.x;\n            dy = Math.sqrt(circle.radius * circle.radius - dx * dx);\n            return ( circle.y + dy >= box.low.y &&\n                     circle.y - dy <= box.high.y\n                   );\n          }\n          if(circle.y >= box.low.y - circle.radius &&\n             circle.y <  box.low.y) {\n            dy = box.low.y - circle.y;\n            dx = Math.sqrt(circle.radius * circle.radius - dy * dy);\n            return ( circle.x + dx >= box.low.x &&\n                     circle.x - dx <= box.high.x\n                   );\n          }\n          if(circle.y <= box.high.y + circle.radius &&\n             circle.y >  box.high.y) {\n            dy = box.high.y - circle.y;\n            dx = Math.sqrt(circle.radius * circle.radius - dy * dy);\n            return ( circle.x + dx >= box.low.x &&\n                     circle.x - dx <= box.high.x\n                   );\n          }\n          return false;\n        },\n        intersectLine: function circleIntersectLine(line, circle) {\n          let [ vect_prod, scal_prod, line_length ] =\n                circleService.positionToLine(line, circle);\n          \n          return ( Math.abs(vect_prod) < circle.radius &&\n                   scal_prod + circle.radius >= 0 &&\n                   scal_prod - circle.radius <= line_length\n                 );\n        },\n        pointOnEdgeInDirection: function circlePointOnEdgeInDirection(direction, circle) {\n          return {\n            x: circle.x + Math.sin(Math.PI * direction / 180) * circle.radius,\n            y: circle.y - Math.cos(Math.PI * direction / 180) * circle.radius\n          };\n        },\n        pointOnEdgeTangentTo: function circlePointOnEdgeTangentTo(point, left, circle) {\n          let distance = pointService.distanceTo(circle, point);\n          let direction = pointService.directionTo(circle, point);\n          let delta_direction = 180 * Math.acos(circle.radius / distance) / Math.PI;\n          let tangent_direction = ( !left ?\n                                    direction + 180 - delta_direction :\n                                    direction - 180 + delta_direction\n                                  );\n          \n          return circleService.pointOnEdgeInDirection(tangent_direction, circle);\n        },\n        envelopeDirectionsTo: function circleEnvelopeDirectionsTo(target, origin) {\n          let direction = pointService.directionTo(target, origin);\n          let distance = pointService.distanceTo(target, origin);\n          let delta_radius = Math.abs(origin.radius - target.radius);\n          let delta_direction = 180 * ( Math.asin(delta_radius/distance) *\n                                        (origin.radius >= target.radius ? 1 : -1)\n                                      ) / Math.PI;\n          return {\n            right: direction - delta_direction + 90,\n            left: direction + delta_direction - 90\n          };\n        },\n        envelopeTo: function circleEnvelopeTo(target, origin) {\n          let directions = circleService.envelopeDirectionsTo(target, origin);\n          let envelop = {\n            left: {\n              start: circleService\n                .pointOnEdgeInDirection(directions.left, origin),\n              end: circleService\n                .pointOnEdgeInDirection(directions.left, target)\n            },\n            right: {\n              start: circleService\n                .pointOnEdgeInDirection(directions.right, origin),\n              end: circleService\n                .pointOnEdgeInDirection(directions.right, target)\n            }\n          };\n          return envelop;\n        },\n        outsideEnvelopeTo: function circleOutsideEnvelopeTo(target,\n                                                            intervenings,\n                                                            origin) {\n          let directions = circleService.envelopeDirectionsTo(target, origin);\n          let envelope = {\n            left: findLeftEnvelopeLine(directions, target, intervenings, origin),\n            right: findRightEnvelopeLine(directions, target, intervenings, origin)\n          };\n          envelope.left.vector = lineService.vector(envelope.left);\n          envelope.right.vector = lineService.vector(envelope.right);\n\n          let outside_envelope = {\n            left: {\n              start: { x: envelope.left.end.x, y: envelope.left.end.y }\n            },\n            right: {\n              start: { x: envelope.right.end.x, y: envelope.right.end.y }\n            }\n          };\n          let translate_left = 800;\n          let translate_right = 800;\n          let vector_product = pointService\n                .vectorProduct(envelope.left.vector, envelope.right.vector);\n          if(vector_product > 0.001) {\n            let envelope_end = {\n              start: envelope.left.end,\n              end: envelope.right.end\n            };\n            envelope_end.length = lineService.length(envelope_end);\n            envelope_end.vector = lineService.vector(envelope_end);\n            \n            let alpha = Math.acos(pointService.scalarProduct(envelope_end.vector,\n                                                             envelope.left.vector));\n            let beta = Math.acos(-pointService.scalarProduct(envelope_end.vector,\n                                                             envelope.right.vector));\n            translate_left = envelope_end.length * Math.sin(alpha) / Math.sin(alpha+beta);\n            translate_right = envelope_end.length * Math.sin(beta) / Math.sin(alpha+beta);\n          }\n          translate_left = Math.min(800, translate_left);\n          translate_right = Math.min(800, translate_right);\n          outside_envelope.left.end = pointService\n            .translateInVector(translate_left, envelope.left.vector,\n                               outside_envelope.left.start);\n          outside_envelope.right.end = pointService\n            .translateInVector(translate_right, envelope.right.vector,\n                               outside_envelope.right.start);\n          return outside_envelope;\n        }\n      };\n      function findLeftEnvelopeLine(directions, target, intervenings, origin) {\n        let rad_inc = (directions.right - directions.left) / 180;\n        let ray = {\n          start: null,\n          end: null\n        };\n        for(let ray_rad = directions.left ;\n            ray_rad < directions.right ;\n            ray_rad += rad_inc) {\n          ray.start = circleService.pointOnEdgeInDirection(ray_rad, origin);\n          ray.end = circleService.pointOnEdgeTangentTo(ray.start, true, target);\n          ray.length = lineService.length(ray);\n          ray.vector = lineService.vector(ray);\n          \n          let intervening = R.find((circle) => {\n            return circleService.intersectLine(ray, circle);\n          }, intervenings);\n          \n          if(R.isNil(intervening)) return ray;\n        }\n        return ray;\n      }\n      function findRightEnvelopeLine(directions, target, intervenings, origin) {\n        let rad_inc = (directions.right - directions.left) / 180;\n        let ray = {\n          start: null,\n          end: null\n        };\n        for(let ray_rad = directions.right ;\n            ray_rad > directions.left ;\n            ray_rad -= rad_inc) {\n          ray.start = circleService.pointOnEdgeInDirection(ray_rad, origin);\n          ray.end = circleService.pointOnEdgeTangentTo(ray.start, false, target);\n          ray.length = lineService.length(ray);\n          ray.vector = lineService.vector(ray);\n          \n          let intervening = R.find((circle) => {\n            return circleService.intersectLine(ray, circle);\n          }, intervenings);\n          \n          if(R.isNil(intervening)) return ray;\n        }\n        return ray;\n      }\n      R.curryService(circleService);\n      return circleService;\n    }\n  ]);\n"]}