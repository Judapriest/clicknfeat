{"version":3,"sources":["user.es6"],"names":[],"mappings":"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","file":"user.js","sourcesContent":["(function() {\n  angular.module('clickApp.models')\n    .factory('user', userModelFactory);\n\n  userModelFactory.$inject = [\n    'http',\n    'localStorage',\n    'userConnection',\n  ];\n  function userModelFactory(httpService,\n                            localStorageService,\n                            userConnectionService) {\n    const STORAGE_KEY = 'clickApp.user';\n    const userModel = {\n      isValid: userIsValid,\n      saveP: userSaveP,\n      loadP: userLoadP,\n      initP: userInitP,\n      description: userDescription,\n      stateDescription: userStateDescription,\n      online: userOnline,\n      // toggleOnline: userToggleOnline,\n      // checkOnline: userCheckOnline\n    };\n    // const userOnlineStart$ = R.curry(userOnlineStart);\n    R.curryService(userModel);\n    return userModel;\n\n    function userIsValid(user) {\n      return R.pipe(\n        R.pathOr('', ['state','name']),\n        s.trim,\n        R.length,\n        R.lt(0)\n      )(user);\n    }\n    function userSaveP(user) {\n      return R.pipePromise(\n        R.prop('state'),\n        R.spyWarn('User save'),\n        localStorageService.saveP$(STORAGE_KEY),\n        R.always(user)\n      )(user);\n    }\n    function userLoadP() {\n      return R.pipeP(\n        R.always(localStorageService.loadP(STORAGE_KEY)),\n        R.defaultTo({}),\n        R.spyWarn('User load'),\n        (state) => ({ state: state }),\n        userConnectionService.init\n      )();\n    }\n    function userInitP(state) {\n      return R.pipeP(\n        userLoad\n        // ,\n        // userModel.checkOnline$(state)\n      )();\n    }\n    function userDescription(user) {\n      if(R.type(R.prop('state', user)) !== 'Object') return '';\n\n      return userModel.stateDescription(user.state);\n    }\n    function userStateDescription({ name,\n                                    language,\n                                    chat,\n                                    faction,\n                                    game_size,\n                                    ck_position\n                                  } = {}) {\n      let ret = '';\n      if(R.exists(name)) {\n        ret += s(name).trim().capitalize().value();\n      }\n      const lang_chat = [];\n      if(R.exists(language)) {\n        lang_chat.push(s(language).trim().value());\n      }\n      if(R.exists(chat)) {\n        lang_chat.push(s(chat).trim().value());\n      }\n      if(!R.isEmpty(lang_chat)) {\n        ret += '['+lang_chat.join(' ')+']';\n      }\n      if(R.exists(faction) &&\n         !R.isEmpty(faction)) {\n        ret += ' - '+R.map(s.capitalize, faction).join(',');\n      }\n      if(R.exists(game_size)) {\n        ret += '['+s.trim(game_size)+'pts]';\n      }\n      if(R.exists(ck_position) &&\n         !R.isEmpty(ck_position)) {\n        ret += ' - likes '+ck_position.join(',');\n      }\n      return ret;\n    }\n    function userOnline(user) {\n      return R.path(['state','online'], user);\n    }\n    // function userToggleOnline(state, user) {\n    //   return ( userModel.online(user) ?\n    //            userGoOffline(user) :\n    //            userGoOnline(state, user)\n    //          );\n    // }\n    // function userCheckOnline(state, user) {\n    //   return R.pipePromise(\n    //     (user) => {\n    //       if(!userModel.online(user)) {\n    //         return self.Promise.reject('No online flag');\n    //       }\n    //       return user;\n    //     },\n    //     (user) => {\n    //       return userUpdateOnline(user)\n    //         .catch(() => {\n    //           return userCreateOnline(user);\n    //         });\n    //     },\n    //     userOnlineStart$(state)\n    //   )(user)\n    //     .catch((reason) => {\n    //       console.error('User: checkOnline error', reason);\n    //       return userOnlineStop(user);\n    //     });\n    // }\n    // function userGoOnline(state, user) {\n    //   return R.pipePromise(\n    //     R.assocPath(['state','online'], true),\n    //     userModel.checkOnline$(state)\n    //   )(user);\n    // }\n    // function userGoOffline(user) {\n    //   return userOnlineStop(user);\n    // }\n    // function userCreateOnline(user) {\n    //   return R.pipePromise(\n    //     R.prop('state'),\n    //     httpService.post$('/api/users'),\n    //     (state) => {\n    //       return R.assoc('state', state, user);\n    //     }\n    //   )(user);\n    // }\n    // function userUpdateOnline(user) {\n    //   if(R.isNil(user.state.stamp)) {\n    //     return self.Promise.reject('No valid stamp');\n    //   }\n\n    //   return R.pipePromise(\n    //     R.prop('state'),\n    //     httpService.put$('/api/users/'+user.state.stamp),\n    //     (state) => {\n    //       return R.assoc('state', state, user);\n    //     }\n    //   )(user);\n    // }\n    // function userOnlineStart(state, user) {\n    //   return R.pipePromise(\n    //     userConnectionService.open$(state),\n    //     R.assocPath(['state','online'], true)\n    //   )(user);\n    // }\n    // function userOnlineStop(user) {\n    //   return R.pipePromise(\n    //     R.assocPath(['state','online'], false),\n    //     R.assocPath(['state','stamp'], null),\n    //     userConnectionService.close\n    //   )(user);\n    // }\n  }\n})();\n"]}