{"version":3,"sources":["game.es6"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('game', [\n    'jsonStringifier',\n    'commands',\n    'gameConnection',\n    'gameLayers',\n    'gameLos',\n    'gameModels',\n    'gameModelSelection',\n    'gameRuler',\n    'gameTemplates',\n    'gameTemplateSelection',\n    'gameTerrains',\n    'gameTerrainSelection',\n    function gameServiceFactory(jsonStringifierService,\n                                commandsService,\n                                gameConnectionService,\n                                gameLayersService,\n                                gameLosService,\n                                gameModelsService,\n                                gameModelSelectionService,\n                                gameRulerService,\n                                gameTemplatesService,\n                                gameTemplateSelectionService,\n                                gameTerrainsService,\n                                gameTerrainSelectionService) {\n      var gameService = {\n        create: function gameCreate(player1) {\n          var new_game = {\n            players: {\n              p1: { name: R.propOr('player1', 'name', player1) },\n              p2: { name: null }\n            }\n          };\n          return new_game;\n        },\n        load: function gameLoad(state, data) {\n          return R.pipe(\n            () => {\n              return Object.create({\n                toJSON: function() { return gameService.pickForJson(this); }\n              });\n            },\n            (game) => {\n              return R.deepExtend(game, {\n                players: {\n                  p1: { name: null },\n                  p2: { name: null }\n                },\n                board: {},\n                scenario: {},\n                chat: [],\n                commands: [],\n                commands_log: [],\n                undo: [],\n                undo_log: [],\n                dice: [],\n                ruler: gameRulerService.create(),\n                los: gameLosService.create(),\n                models: gameModelsService.create(),\n                model_selection: gameModelSelectionService.create(),\n                templates: gameTemplatesService.create(),\n                template_selection: gameTemplateSelectionService.create(),\n                terrains: gameTerrainsService.create(),\n                terrain_selection: gameTerrainSelectionService.create(),\n                layers: gameLayersService.create()\n              }, data);\n            },\n            gameConnectionService.create,\n            gameReplayAll$(state)\n          )();\n        },\n        pickForJson: function gamePickForJson(game) {\n          return R.pick([\n            'players', 'commands', 'undo', 'chat',\n            'local_stamp', 'private_stamp', 'public_stamp'\n          ], game);\n        },\n        toJson: function gameToJson(game) {\n          return R.pipePromise(\n            gameService.pickForJson,\n            jsonStringifierService.stringify\n          )(game);\n        },\n        playerName: function gamePlayerName(p, game) {\n          return R.pathOr('John Doe', ['players',p,'name'], game);\n        },\n        description: function gameDescription(game) {\n          return [ s.capitalize(gameService.playerName('p1', game)),\n                   'vs',\n                   s.capitalize(gameService.playerName('p2', game))\n                 ].join(' ');\n        },\n        executeCommand: function gameExecuteCommand(cmd, args, state, game) {\n          return R.pipeP(\n            () => {\n              return commandsService.execute\n                .apply(null, [cmd, args, state, game]);\n            },\n            ([command, game]) => {\n              return [ R.pipe(\n                R.assoc('user', R.pathOr('Unknown', ['user','state','name'], state)),\n                R.assoc('stamp', R.guid())\n              )(command),\n                       game\n                     ];\n            },\n            ([command, game]) => {\n              if(gameConnectionService.active(game)) {\n                return gameConnectionService\n                  .sendReplayCommand(command, game);\n              }\n              if(!command.do_not_log) {\n                game = R.over(R.lensProp('commands'),\n                              R.append(command),\n                              game);\n              }\n              if(command.type === 'rollDice' ||\n                 command.type === 'rollDeviation') {\n                game = R.over(R.lensProp('dice'),\n                              R.append(command),\n                              game);\n              }\n              return game;\n            },\n            (game) => {\n              state.changeEvent('Game.command.execute');\n              return game;\n            }\n          )();\n        },\n        undoCommand: function gameUndoCommand(command, state, game) {\n          return R.pipePromise(\n            R.propOr([], 'undo_log'),\n            R.find(R.propEq('stamp', command.stamp)),\n            (log) => {\n              if(R.exists(log)) {\n                console.log('Game : undoCmd log', command);\n                let log = R.propOr([], 'undo_log', game);\n                return R.assoc('undo_log',\n                               R.reject(R.propEq('stamp', command.stamp), log),\n                               game);\n              }\n              return commandsService\n                .undo(command, state, game);\n            },\n            (game) => {\n              let commands = R.propOr([], 'commands', game);\n              let undo = R.propOr([], 'undo', game);\n              return R.pipe(\n                R.assoc('commands', R.reject(R.propEq('stamp', command.stamp), commands)),\n                R.assoc('undo', R.append(command, undo))\n              )(game);\n            },\n            (game) => {\n              state.changeEvent('Game.command.undo');\n              return game;\n            }\n          )(game);\n        },\n        undoLastCommand: function gameUndoLastCommand(state, game) {\n          return R.pipePromise(\n            R.propOr([],'commands'),\n            R.last,\n            R.rejectIf(R.isNil, 'Command history empty'),\n            (command) => {\n              return R.pipeP(\n                commandsService.undo$(command, state),\n                (game) => { return [command, game]; }\n              )(game);\n            },\n            ([command, game]) => {\n              return R.pipePromise(\n                R.assoc('commands', R.init(game.commands)),\n                (game) => {\n                  if(gameConnectionService.active(game)) {\n                    return gameConnectionService\n                      .sendUndoCommand(command, game);\n                  }\n                  return R.over(R.lensProp('undo'),\n                                R.append(command),\n                                game);\n                }\n              )(game);\n            },\n            (game) => {\n              state.changeEvent('Game.command.undo');\n              return game;\n            }\n          )(game);\n        },\n        replayCommand: function gameReplayCommand(command, state, game) {\n          return R.pipePromise(\n            R.propOr([], 'commands_log'),\n            R.find(R.propEq('stamp', command.stamp)),\n            (log) => {\n              if(R.exists(log)) {\n                console.log('Game: replayCmd log', command);\n                return R.over(R.lensProp('commands_log'),\n                              R.reject(R.propEq('stamp', command.stamp)),\n                              game);\n              }\n              return commandsService\n                .replay(command, state, game);\n            },\n            (game) => {\n              return R.pipe(\n                R.over(R.lensProp('undo'),\n                       R.reject(R.propEq('stamp', command.stamp))),\n                (game) => {\n                  if(command.do_not_log) return game;\n\n                  return R.over(R.lensProp('commands'),\n                                R.append(command),\n                                game);\n                }\n              )(game);\n            },\n            (game) => {\n              state.changeEvent('Game.command.replay');\n              return game;\n            }\n          )(game);\n        },\n        replayCommandsBatch: function gameReplayCommandsBatch(cmds, state, game) {\n          return R.pipeP(\n            commandsService.replayBatch$(cmds, state),\n            R.over(R.lensProp('commands'),\n                   R.flip(R.concat)(cmds))\n          )(game);\n        },\n        replayNextCommand: function gameReplayNextCommand(state, game) {\n          return R.pipePromise(\n            R.propOr([], 'undo'),\n            R.last,\n            (command) => {\n              if(R.isNil(command)) {\n                return self.Promise\n                  .reject('Undo history empty');\n              }\n              return R.pipeP(\n                commandsService.replay$(command, state),\n                (game) => { return [command, game]; }\n              )(game);\n            },\n            ([command, game]) => {\n              return R.pipePromise(\n                R.assoc('undo', R.init(game.undo)),\n                (game) => {\n                  if(gameConnectionService.active(game)) {\n                    return gameConnectionService\n                      .sendReplayCommand(command, game);\n                  }\n                  let commands = R.propOr([], 'commands', game);\n                  return R.assoc('commands', R.append(command, commands), game);\n                }\n              )(game);\n            },\n            (game) => {\n              state.changeEvent('Game.command.replay');\n              return game;\n            }\n          )(game);\n        },\n        sendChat: function gameSendChat(from, msg, game) {\n          return gameConnectionService\n            .sendEvent({\n              type: 'chat',\n              chat: {\n                from: from,\n                msg: msg\n              }\n            }, game);\n        }\n      };\n      function gameReplayBatchs(batchs, state, game) {\n        if(R.isEmpty(batchs)) return game;\n\n        console.log('Game: ReplayBatchs:', batchs);\n        return R.pipeP(\n          commandsService.replayBatch$(batchs[0], state),\n          (game) => {\n            return new self.Promise((resolve) => {\n              self.requestAnimationFrame(() => {\n                resolve(gameReplayBatchs(R.tail(batchs), state, game));\n              });\n            });\n          }\n        )(game);\n      }\n      var gameReplayAll$ = R.curry((state, game) => {\n        return new self.Promise((resolve) => {\n          if(R.isEmpty(game.commands)) {\n            resolve(game);\n          }\n\n          var batchs = R.splitEvery(game.commands.length, game.commands);\n          self.requestAnimationFrame(() => {\n            resolve(gameReplayBatchs(batchs, state, game));\n          });\n        });\n      });\n      R.curryService(gameService);\n      return gameService;\n    }\n  ]);\n"]}