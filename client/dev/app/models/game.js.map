{"version":3,"sources":["game.es6"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('game', gameModelFactory);\n\n  gameModelFactory.$inject = [\n    'jsonStringifier',\n    'commands',\n    'gameConnection',\n    'gameLayers',\n    'gameLos',\n    'gameModels',\n    'gameModelSelection',\n    'gameRuler',\n    'gameTemplates',\n    'gameTemplateSelection',\n    'gameTerrains',\n    'gameTerrainSelection',\n  ];\n  function gameModelFactory(jsonStringifierService,\n                            commandsModel,\n                            gameConnectionModel,\n                            gameLayersModel,\n                            gameLosModel,\n                            gameModelsModel,\n                            gameModelSelectionModel,\n                            gameRulerModel,\n                            gameTemplatesModel,\n                            gameTemplateSelectionModel,\n                            gameTerrainsModel,\n                            gameTerrainSelectionModel) {\n    const COMMANDS_LENS = R.lensProp('commands');\n    const COMMANDS_LOG_LENS = R.lensProp('commands_log');\n    const UNDO_LENS = R.lensProp('undo');\n    const UNDO_LOG_LENS = R.lensProp('undo_log');\n    const gameModel = {\n      isOnline: gameIsOnline,\n      description: gameDescription,\n      pickForJson: gamePickForJson,\n      toJson: gameToJson,\n      create: gameCreate,\n      close: gameClose,\n      loadP: gameLoadP,\n      executeCommandP: gameExecuteCommandP,\n      undoCommandP: gameUndoCommandP,\n      undoLastCommandP: gameUndoLastCommandP,\n      replayCommandP: gameReplayCommandP,\n      replayCommandsBatchP: gameReplayCommandsBatchP,\n      replayNextCommandP: gameReplayNextCommandP,\n      sendChat: gameSendChat,\n      chatIsFrom: gameChatIsFrom\n    };\n\n    const GAME_PROTO = {\n      toJSON: function gameToJson() {\n        return gamePickForJson(this);\n      }\n    };\n\n    R.curryService(gameModel);\n    return gameModel;\n\n    function gameIsOnline(game) {\n      return ( game.public_stamp || game.private_stamp );\n    }\n    function gameDescription(game) {\n      return [ s.capitalize(gamePlayerName('p1', game)),\n               'vs',\n               s.capitalize(gamePlayerName('p2', game))\n             ].join(' ');\n    }\n    function gamePickForJson(game) {\n      return R.pick([\n        'players', 'commands', 'undo', 'chat',\n        'local_stamp', 'private_stamp', 'public_stamp'\n      ], game);\n    }\n    function gameToJson(game) {\n      return R.thread(game)(\n        gamePickForJson,\n        jsonStringifierService.stringify\n      );\n    }\n    function gameCreate(player1) {\n      var new_game = {\n        players: {\n          p1: { name: R.propOr('player1', 'name', player1) },\n          p2: { name: null }\n        }\n      };\n      return new_game;\n    }\n    function gameClose(game) {\n      return R.thread(game)(\n        gameConnectionModel.close,\n        () => ({})\n      );\n    }\n    function gameLoadP(data) {\n      return R.threadP(Object.create(GAME_PROTO))(\n        extendGameDefaultWithData,\n        gameConnectionModel.create,\n        gameReplayAllP\n      );\n\n      function extendGameDefaultWithData(game) {\n        return R.deepExtend(game, defaultGameState(), data);\n      }\n    }\n    function gameExecuteCommandP(cmd, args, user_name, game) {\n      return R.threadP(commandsModel.executeP(cmd, args, game))(\n        stampCommand,\n        R.ifElse(\n          ([_c_, game]) => gameConnectionModel.active(game),\n          sendReplayCommand,\n          logLocalCommand\n        ),\n        ([ _command_, game ]) => game\n      );\n\n      function stampCommand([command, game]) {\n        return [ R.thread(command)(\n          R.assoc('user', user_name),\n          R.assoc('stamp', R.guid())\n        ), game ];\n      }\n      function sendReplayCommand([command, game]) {\n        return R.thread(game)(\n          gameConnectionModel.sendReplayCommand$(command),\n          (game) => [ command, game ]\n        );\n      }\n      function logLocalCommand([command, game]) {\n        return [ command, R.unless(\n          () => command.do_not_log,\n          R.over(COMMANDS_LENS, R.append(command)),\n          game\n        ) ];\n      }\n    }\n    function gameUndoCommandP(command, game) {\n      return R.threadP(game)(\n        R.ifElse(\n          isInUndoLog,\n          removeFromUndoLog,\n          commandsModel.undoP$(command)\n        ),\n        updateLogs\n      );\n\n      function isInUndoLog(game) {\n        return R.thread(game)(\n          R.viewOr([], UNDO_LOG_LENS),\n          R.find(R.propEq('stamp', command.stamp))\n        );\n      }\n      function removeFromUndoLog(game) {\n        return R.over(\n          UNDO_LOG_LENS,\n          R.compose(R.reject(R.propEq('stamp', command.stamp)),\n                    R.defaultTo([])),\n          game\n        );\n      }\n      function updateLogs(game) {\n        return R.thread(game)(\n          R.over(COMMANDS_LENS, R.reject(R.propEq('stamp', command.stamp))),\n          R.over(UNDO_LENS, R.append(command))\n        );\n      }\n    }\n    function gameUndoLastCommandP(game) {\n      return R.threadP(game)(\n        getLastCommandP,\n        undoCommandP,\n        updateLogs\n      );\n\n      function getLastCommandP(game) {\n        return R.threadP(game)(\n          R.viewOr([], COMMANDS_LENS),\n          R.last,\n          R.rejectIfP(R.isNil, 'Command history empty')\n        );\n      }\n      function undoCommandP(command) {\n        return R.threadP(game)(\n          commandsModel.undoP$(command),\n          (game) => [command, game]\n        );\n      }\n      function updateLogs([command, game]) {\n        return R.thread(game)(\n          R.over(COMMANDS_LENS, R.init),\n          R.ifElse(\n            gameConnectionModel.active,\n            gameConnectionModel.sendUndoCommand$(command),\n            R.over(UNDO_LENS, R.append(command))\n          )\n        );\n      }\n    }\n    function gameReplayCommandP(command, game) {\n      return R.threadP(game)(\n        R.ifElse(\n          isInCommandsLog,\n          removeFromCommandsLog,\n          commandsModel.replayP$(command)\n        ),\n        updateLogs\n      );\n\n      function isInCommandsLog(game) {\n        return R.thread(game)(\n          R.viewOr([], COMMANDS_LOG_LENS),\n          R.find(R.propEq('stamp', command.stamp))\n        );\n      }\n      function removeFromCommandsLog(game) {\n        return R.over(\n          COMMANDS_LOG_LENS,\n          R.reject(R.propEq('stamp', command.stamp)),\n          game\n        );\n      }\n      function updateLogs(game) {\n        return R.thread(game)(\n          R.over(UNDO_LENS, R.reject(R.propEq('stamp', command.stamp))),\n          R.unless(\n            () => command.do_not_log,\n            R.over(COMMANDS_LENS, R.append(command))\n          )\n        );\n      }\n    }\n    function gameReplayCommandsBatchP(cmds, game) {\n      return R.threadP(game)(\n        commandsModel.replayBatchP$(cmds),\n        R.over(COMMANDS_LENS, R.concat(R.__, cmds))\n      );\n    }\n    function gameReplayNextCommandP(game) {\n      return R.threadP(game)(\n        getNextUndoP,\n        replayCommandP,\n        updateLogs\n      );\n\n      function getNextUndoP(game) {\n        return R.threadP(game)(\n          R.viewOr([], UNDO_LENS),\n          R.last,\n          R.rejectIfP(R.isNil, 'Undo history empty')\n        );\n      }\n      function replayCommandP(command) {\n        return R.threadP(game)(\n          commandsModel.replayP$(command),\n          (game) => [command, game]\n        );\n      }\n      function updateLogs([command, game]) {\n        return R.threadP(game)(\n          R.over(UNDO_LENS, R.init),\n          R.ifElse(\n            gameConnectionModel.active,\n            gameConnectionModel.sendReplayCommand$(command),\n            R.over(COMMANDS_LENS, R.append(command))\n          )\n        );\n      }\n    }\n    function gameSendChat(from, msg, game) {\n      return gameConnectionModel\n        .sendEvent({\n          type: 'chat',\n          chat: {\n            from: from,\n            msg: msg\n          }\n        }, game);\n    }\n    function gamePlayerName(p, game) {\n      return R.pathOr('John Doe', ['players',p,'name'], game);\n    }\n    function defaultGameState() {\n      return {\n        players: {\n          p1: { name: null },\n          p2: { name: null }\n        },\n        board: {},\n        scenario: {},\n        chat: [],\n        commands: [],\n        commands_log: [],\n        undo: [],\n        undo_log: [],\n        dice: [],\n        layers: gameLayersModel.create(),\n        ruler: gameRulerModel.create(),\n        los: gameLosModel.create(),\n        models: gameModelsModel.create(),\n        model_selection: gameModelSelectionModel.create(),\n        templates: gameTemplatesModel.create(),\n        template_selection: gameTemplateSelectionModel.create(),\n        terrains: gameTerrainsModel.create(),\n        terrain_selection: gameTerrainSelectionModel.create()\n      };\n    }\n    function gameReplayAllP(game) {\n      return new self.Promise((resolve) => {\n        if(R.isEmpty(game.commands)) {\n          resolve(game);\n        }\n\n        const batchs = R.splitEvery(Math.max(game.commands.length, 1), game.commands);\n        self.requestAnimationFrame(() => {\n          resolve(gameReplayBatchsP(batchs, game));\n        });\n      });\n    }\n    function gameReplayBatchsP(batchs, game) {\n      if(R.isEmpty(batchs)) {\n        return R.resolveP(game);\n      }\n\n      console.log('Game: ReplayBatchs:', batchs);\n      return R.threadP(game)(\n        commandsModel.replayBatchP$(batchs[0]),\n        recurP\n      );\n\n      function recurP(game) {\n        return new self.Promise((resolve) => {\n          self.requestAnimationFrame(() => {\n            resolve(gameReplayBatchsP(R.tail(batchs), game));\n          });\n        });\n      }\n    }\n    function gameChatIsFrom(user, chat) {\n      return chat.from === user.state.name;\n    }\n  }\n})();\n"]}