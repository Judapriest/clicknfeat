{"version":3,"sources":["behaviours.es6"],"names":[],"mappings":"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","file":"behaviours.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('behaviours', behavioursModelFactory);\n\n  behavioursModelFactory.$inject = [\n    'appTick'\n  ];\n  function behavioursModelFactory(appTickService) {\n    const signalModel = {\n      create: signalCreate\n    };\n    const cellModel = {\n      create: cellCreate\n    };\n    R.curryService(signalModel);\n    R.curryService(cellModel);\n    const behavioursModel = {\n      signalModel,\n      cellModel\n    };\n    return behavioursModel;\n\n    /////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////\n\n    function cellCreate(getValue = R.always(null), init) {\n      return {\n        _value: init,\n        _getValue: getValue,\n        sample: cellSample,\n        map: cellMap,\n        changes: cellChanges,\n        delay: cellDelay,\n        reduce: cellReduce\n      };\n    }\n\n    function cellSample() {\n      const now = appTickService.now();\n      if(this._last_tick === now) return this._value;\n\n      this._last_tick = now;\n      this._value = this._getValue();\n      return this._value;\n    }\n\n    function cellMap(fn) {\n      return cellCreate(() => fn(this.sample()));\n    }\n\n    function cellChanges() {\n      const signal = signalCreate(() => {\n        const last = signal._last_value;\n        signal._last_value = this.sample();\n        return ( signal._last_value !== last\n                 ? signal._last_value\n                 : null\n               );\n      });\n      signal._last_value = this._value;\n      return signal;\n    }\n\n    function cellDelay() {\n      const cell = cellCreate(() => cell._value, this._value);\n      appTickService.addEndListener(() => {\n        cell._value = this.sample();\n      });\n      return cell;\n    }\n\n    function cellReduce(fn, init) {\n      const cell = this.changes()\n              .snapshot(fn, () => last)\n              .hold(init);\n      const last = cell.delay();\n      return cell;\n    }\n\n    /////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////\n\n    function signalCreate(getValue = signalDefaultGetValue) {\n      return {\n        _getValue: getValue,\n        _sample: signalSample,\n        send: signalSend,\n        listen: signalListen,\n        hold: signalHold,\n        map: signalMap,\n        filter: signalFilter,\n        snapshot: signalSnapshot,\n        merge: signalMerge,\n        orElse: signalOrElse,\n        all: signalAll\n      };\n    }\n\n    function signalSample() {\n      const now = appTickService.now();\n      if(this._last_tick === now) return this._value;\n\n      this._last_tick = now;\n      this._value = this._getValue();\n      return this._value;\n    }\n\n    function signalDefaultGetValue() {\n      const ret = this._new_value;\n      this._new_value = null;\n      return ret;\n    }\n\n    function signalSend(value) {\n      appTickService.inTransaction(() => {\n        this._new_value = value;\n      });\n    }\n\n    function signalHold(init) {\n      const cell = cellCreate(() => R.when(\n        R.isNil,\n        () => cell._value,\n        this._sample()\n      ), init);\n      return cell;\n    }\n\n    function signalMap(fn) {\n      return signalCreate(() => R.when(\n        R.exists,\n        fn,\n        this._sample()\n      ));\n    }\n\n    function signalFilter(fn) {\n      return signalCreate(() => R.unless(\n        R.allPass([R.exists, fn]),\n        () => null,\n        this._sample()\n      ));\n    }\n\n    function signalSnapshot(fn, cellOrGetter) {\n      const getCell = ( 'Function' === R.type(cellOrGetter)\n                        ? cellOrGetter\n                        : R.always(cellOrGetter)\n                      );\n      return signalCreate(() => R.unless(\n        R.isNil,\n        (src_value) => fn(getCell().sample(), src_value),\n        this._sample()\n      ));\n    }\n\n    function signalMerge(fn, other) {\n      return signalCreate(() => {\n        const s1 = this._sample();\n        const s2 = other._sample();\n        return ( R.isNil(s2)\n                 ? s1\n                 : ( R.isNil(s1)\n                     ? s2\n                     : fn(s1, s2)\n                   )\n               );\n      });\n    }\n\n    function signalOrElse(other) {\n      return this.merge((s1,s2) => (R.exists(s1) ? s1 : s2), other);\n    }\n\n    function signalAll(other) {\n      return this.map(R.of).merge(R.concat, other.map(R.of));\n    }\n\n    function signalListen(fn) {\n      const listener = () => {\n        const value = this._sample();\n        if(R.exists(value)) {\n          fn(value);\n        }\n      };\n      appTickService.addTickListener(listener);\n      return () => {\n        appTickService.removeTickListener(listener);\n      };\n    }\n  }\n})();\n"]}