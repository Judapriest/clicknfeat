{"version":3,"sources":["modes.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,OADX,EACoB,iBADpB,EAEG,OAFH,CAEW,UAFX,EAEuB,CACnB,aADmB;;;;;;;;;;;;AAanB,qBAbmB,EAcnB,aAdmB,EAenB;WAAO;GAAP,CAjBJ,EADU;;AAqBV,oBAAkB,OAAlB,GAA4B,EAA5B,CArBU;AAsBV,WAAS,iBAAT,GAA6B;AAC3B,QAAM,YAAY,EAAZ,CADqB;AAE3B,QAAM,aAAa;AACjB,oBAAc,YAAd;AACA,aAAO,UAAP;AACA,YAAM,SAAN;AACA,uBAAiB,eAAjB;AACA,0BAAoB,kBAApB;AACA,2BAAqB,mBAArB;AACA,0BAAoB,kBAApB;AACA,gCAA0B,wBAA1B;AACA,0BAAoB,kBAApB;AACA,qBAAe,aAAf;KAVI,CAFqB;;AAe3B,QAAM,cAAc,EAAE,KAAF,CAAQ,UAAR,CAAd,CAfqB;AAgB3B,QAAM,cAAc,EAAE,KAAF,CAAQ,UAAR,CAAd,CAhBqB;AAiB3B,QAAM,8BAA8B,EAAE,KAAF,CAAQ,0BAAR,CAA9B,CAjBqB;AAkB3B,QAAM,4BAA4B,EAAE,KAAF,CAAQ,wBAAR,CAA5B,CAlBqB;;AAoB3B,MAAE,YAAF,CAAe,UAAf,EApB2B;AAqB3B,WAAO,UAAP,CArB2B;;AAuB3B,aAAS,YAAT,CAAsB,IAAtB,EAA4B;AAC1B,cAAQ,GAAR,CAAY,wBAAsB,KAAK,IAAL,EAAW,IAA7C,EAD0B;AAE1B,gBAAU,KAAK,IAAL,CAAV,GAAuB,IAAvB,CAF0B;KAA5B;AAIA,aAAS,UAAT,CAAoB,KAApB,EAA2B;AACzB,UAAM,QAAQ;AACZ,kBAAU,SAAV;OADI;;AADmB,eAKzB,CAAU,KAAV,GALyB;AAMzB,aAAO,YAAY,SAAZ,EAAuB,KAAvB,EAA8B,KAA9B,CAAP,CANyB;KAA3B;AAQA,aAAS,SAAT,CAAmB,KAAnB,EAA0B,KAA1B,EAAiC;AAC/B,aAAO,4BAA4B,KAA5B,EAAmC,KAAnC,CAAP,CAD+B;KAAjC;AAGA,aAAS,eAAT,CAAyB,KAAzB,EAAgC;AAC9B,aAAO,EAAE,MAAF,CAAS,SAAT,EAAoB,MAApB,EAA4B,YAAY,KAAZ,CAA5B,CAAP,CAD8B;KAAhC;AAGA,aAAS,kBAAT,CAA4B,KAA5B,EAAmC;AACjC,aAAO,EAAE,MAAF,CAAS,EAAT,EAAa,SAAb,EAAwB,YAAY,KAAZ,CAAxB,CAAP,CADiC;KAAnC;AAGA,aAAS,mBAAT,CAA6B,KAA7B,EAAoC;AAClC,aAAO,EAAE,MAAF,CAAS,EAAT,EAAa,UAAb,EAAyB,YAAY,KAAZ,CAAzB,CAAP,CADkC;KAApC;AAGA,aAAS,kBAAT,CAA4B,KAA5B,EAAmC;AACjC,aAAO,EAAE,MAAF,CAAS,EAAT,EAAa,SAAb,EAAwB,YAAY,KAAZ,CAAxB,CAAP,CADiC;KAAnC;AAGA,aAAS,wBAAT,CAAkC,KAAlC,EAAyC;AACvC,aAAO,EAAE,MAAF,CAAS,KAAT,EACL,WAAW,mBAAX,EACA,EAAE,SAAF,EACA,EAAE,MAAF,CAAS,EAAE,IAAF,CAHJ,CAAP,CADuC;KAAzC;AAOA,aAAS,kBAAT,CAA4B,MAA5B,EAAoC,IAApC,EAA0C,KAA1C,EAAiD;AAC/C,UAAM,YAAY,WAAW,eAAX,CAA2B,KAA3B,CAAZ,CADyC;AAE/C,aAAO,EAAE,OAAF,CAAU,KAAV,EACL,WADK,EAEL,EAAE,IAAF,CAAO,CAAC,SAAD,EAAY,MAAZ,CAAP,CAFK,EAGL,EAAE,QAAF,CAAW,EAAE,KAAF,uBAA4B,oBAAe,oBAAtD,CAHK,EAIL,UAAC,OAAD,EAAa;AACX,eAAO,QAAQ,KAAR,CAAc,IAAd,EAAoB,IAApB,CAAP,CADW;OAAb,CAJF,CAF+C;KAAjD;AAWA,aAAS,aAAT,CAAuB,IAAvB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C;AACzC,UAAM,gBAAgB,YAAY,KAAZ,CAAhB,CADmC;AAEzC,aAAO,EAAE,OAAF,CAAU,KAAV,EACL,EAAE,IAAF,CAAO,CAAC,UAAD,EAAa,IAAb,CAAP,CADK,EAEL,EAAE,QAAF,CAAW,EAAE,KAAF,YAAiB,yBAA5B,CAFK,EAGL,EAAE,MAAF,CAAS,KAAT,CAHK,EAIL,YAAY,KAAZ,CAJK,EAKL,YAAY,IAAZ,EAAkB,KAAlB,CALK,EAML,EAAE,GAAF,8BAAiC,cAAc,IAAd,YAAyB,IAA1D,CANK,CAAP,CAFyC;KAA3C;AAWA,aAAS,WAAT,GAAiC;UAAZ,8DAAQ,kBAAI;;AAC/B,aAAO,EAAE,MAAF,CAAS,EAAT,EAAa,CAClB,UADkB,EAElB,EAAE,MAAF,CAAS,IAAT,EAAe,SAAf,EAA0B,KAA1B,CAFkB,CAAb,EAGJ,KAHI,CAAP,CAD+B;KAAjC;AAMA,aAAS,UAAT,CAAoB,IAApB,EAA0B,KAA1B,EAAiC,KAAjC,EAAwC;AACtC,aAAO,EAAE,OAAF,CAAU,KAAV,EACL,EAAE,IAAF,CAAO,CAAC,UAAD,EAAa,IAAb,CAAP,CADK,EAEL,UAAC,SAAD,EAAe;AACb,eAAS,EAAE,MAAF,CAAS,UAAU,OAAV,CAAT,GACE,UAAU,OAAV,CAAkB,KAAlB,CADF,GAEE,IAFF,CADI;OAAf,EAMA,EAAE,MAAF,CAAS,KAAT,CARK,EASL,EAAE,KAAF,CAAQ,SAAR,EAAmB,IAAnB,CATK,EAUL,0BAA0B,KAA1B,CAVK,CAAP,CADsC;KAAxC;AAcA,aAAS,UAAT,CAAoB,KAApB,EAA2B,KAA3B,EAAkC;AAChC,aAAO,EAAE,OAAF,CAAU,KAAV,EACL,WADK,EAEL,UAAC,IAAD,EAAU;AACR,eAAS,EAAE,MAAF,CAAS,KAAK,OAAL,CAAT,GACE,KAAK,OAAL,CAAa,KAAb,CADF,GAEE,IAFF,CADD;OAAV,EAMA,EAAE,MAAF,CAAS,KAAT,CARK,EASL,4BAA4B,KAA5B,CATK,EAUL,EAAE,KAAF,CAAQ,SAAR,EAAmB,IAAnB,CAVK,CAAP,CADgC;KAAlC;AAcA,aAAS,0BAAT,CAAoC,KAApC,EAA2C,KAA3C,EAAkD;AAChD,gBAAU,KAAV,GADgD;AAEhD,aAAO,KAAP,CAFgD;KAAlD;AAIA,aAAS,wBAAT,CAAkC,KAAlC,EAAyC,KAAzC,EAAgD;AAC9C,oBAAc,YAAY,KAAZ,CAAd,EAAkC,KAAlC,EAD8C;AAE9C,aAAO,KAAP,CAF8C;KAAhD;AAIA,aAAS,aAAT,CAAuB,IAAvB,EAA6B,KAA7B,EAAoC;AAClC,UAAM,eAAe,EAAE,IAAF,CAAO,KAAK,QAAL,CAAtB,CAD4B;AAElC,UAAM,eAAe,EAAE,MAAF,CAAS,KAAK,QAAL,CAAxB,CAF4B;AAGlC,UAAM,qBAAqB,EAAE,UAAF,CAAa,YAAb,EACa,YADb,CAArB,CAH4B;AAKlC,QAAE,OAAF,CAAU,UAAV,EAAsB,kBAAtB,EALkC;AAMlC,QAAE,OAAF,CAAU,UAAV,EAAsB,YAAtB,EANkC;;AAQlC,eAAS,UAAT,CAAoB,MAApB,EAA4B;AAC1B,kBAAU,IAAV,CAAe,KAAK,QAAL,CAAc,MAAd,CAAf,EACe,cAAc,MAAd,CADf,EAD0B;OAA5B;AAKA,eAAS,aAAT,CAAuB,IAAvB,EAA6B;AAC3B,eAAO,UAAC,KAAD,EAAQ,IAAR,EAAiB;AACtB,kBAAQ,IAAR,CAAa,SAAb,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,KAApC,EADsB;;AAGtB,gBAAM,WAAN,CAAkB,sBAAlB,EAA0C,IAA1C,EAAgD,CAAC,KAAD,CAAhD,EAHsB;SAAjB,CADoB;OAA7B;KAbF;GAzHF;CAtBD,CAAD","file":"modes.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modes', modesModelFactory)\n    .factory('allModes', [\n      'defaultMode',\n      // 'rulerMode',\n      // 'losMode',\n      // 'createModelMode',\n      // 'modelsMode',\n      // 'modelMode',\n      // 'modelChargeMode',\n      // 'modelPlaceMode',\n      // 'createTemplateMode',\n      // 'aoeTemplateMode',\n      // 'sprayTemplateMode',\n      // 'wallTemplateMode',\n      'createTerrainMode',\n      'terrainMode',\n      () => ({})\n    ]);\n\n  modesModelFactory.$inject = [];\n  function modesModelFactory() {\n    const MODES_REG = {};\n    const modesModel = {\n      registerMode: registerMode,\n      initP: modesInitP,\n      exit: modesExit,\n      currentModeName: currentModeName,\n      currentModeActions: currentModeActions,\n      currentModeBindings: currentModeBindings,\n      currentModeButtons: currentModeButtons,\n      currentModeBindingsPairs: currentModeBindingsPairs,\n      currentModeActionP: currentModeActionP,\n      switchToModeP: switchToModeP\n    };\n\n    const enterModeP$ = R.curry(enterModeP);\n    const leaveModeP$ = R.curry(leaveModeP);\n    const cleanupCurrentModeBindings$ = R.curry(cleanupCurrentModeBindings);\n    const setupCurrentModeBindings$ = R.curry(setupCurrentModeBindings);\n\n    R.curryService(modesModel);\n    return modesModel;\n\n    function registerMode(mode) {\n      console.log('modes: registering '+mode.name, mode);\n      MODES_REG[mode.name] = mode;\n    }\n    function modesInitP(state) {\n      const modes = {\n        register: MODES_REG\n      };\n      // TODO : import customized bindings\n      Mousetrap.reset();\n      return enterModeP$('Default', state, modes);\n    }\n    function modesExit(state, modes) {\n      return cleanupCurrentModeBindings$(state, modes);\n    }\n    function currentModeName(modes) {\n      return R.propOr('Unknown', 'name', currentMode(modes));\n    }\n    function currentModeActions(modes) {\n      return R.propOr({}, 'actions', currentMode(modes));\n    }\n    function currentModeBindings(modes) {\n      return R.propOr({}, 'bindings', currentMode(modes));\n    }\n    function currentModeButtons(modes) {\n      return R.propOr({}, 'buttons', currentMode(modes));\n    }\n    function currentModeBindingsPairs(modes) {\n      return R.thread(modes)(\n        modesModel.currentModeBindings,\n        R.toPairsIn,\n        R.sortBy(R.head)\n      );\n    }\n    function currentModeActionP(action, args, modes) {\n      const mode_name = modesModel.currentModeName(modes);\n      return R.threadP(modes)(\n        currentMode,\n        R.path(['actions', action]),\n        R.rejectIf(R.isNil, `Unknown action \"${action}\" in \"${mode_name}\" mode`),\n        (handler) => {\n          return handler.apply(null, args);\n        }\n      );\n    }\n    function switchToModeP(name, state, modes) {\n      const previous_mode = currentMode(modes);\n      return R.threadP(modes)(\n        R.path(['register', name]),\n        R.rejectIf(R.isNil, `Mode ${name} does not exists`),\n        R.always(modes),\n        leaveModeP$(state),\n        enterModeP$(name, state),\n        R.spy(`Modes: switch mode from ${previous_mode.name} to ${name}`)\n      );\n    }\n    function currentMode(modes = {}) {\n      return R.pathOr({}, [\n        'register',\n        R.propOr('##', 'current', modes)\n      ], modes);\n    }\n    function enterModeP(name, state, modes) {\n      return R.threadP(modes)(\n        R.path(['register', name]),\n        (next_mode) => {\n          return ( R.exists(next_mode.onEnter)\n                   ? next_mode.onEnter(state)\n                   : null\n                 );\n        },\n        R.always(modes),\n        R.assoc('current', name),\n        setupCurrentModeBindings$(state)\n      );\n    }\n    function leaveModeP(state, modes) {\n      return R.threadP(modes)(\n        currentMode,\n        (mode) => {\n          return ( R.exists(mode.onLeave)\n                   ? mode.onLeave(state)\n                   : null\n                 );\n        },\n        R.always(modes),\n        cleanupCurrentModeBindings$(state),\n        R.assoc('current', null)\n      );\n    }\n    function cleanupCurrentModeBindings(state, modes) {\n      Mousetrap.reset();\n      return modes;\n    }\n    function setupCurrentModeBindings(state, modes) {\n      setupBindings(currentMode(modes), state);\n      return modes;\n    }\n    function setupBindings(mode, state) {\n      const own_bindings = R.keys(mode.bindings);\n      const all_bindings = R.keysIn(mode.bindings);\n      const inherited_bindings = R.difference(all_bindings,\n                                              own_bindings);\n      R.forEach(bindAction, inherited_bindings);\n      R.forEach(bindAction, own_bindings);\n\n      function bindAction(action) {\n        Mousetrap.bind(mode.bindings[action],\n                       actionBinding(action)\n                      );\n      }\n      function actionBinding(name) {\n        return (event, keys) => {\n          console.warn('binding', name, keys, event);\n\n          state.queueEventP('Modes.current.action', name, [event]);\n        };\n      }\n    }\n  }\n})();\n"]}