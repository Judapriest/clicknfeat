{"version":3,"sources":["modes.es6"],"names":[],"mappings":"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","file":"modes.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modes', modesModelFactory)\n    .factory('allModes', [\n      'defaultMode',\n      // 'rulerMode',\n      // 'losMode',\n      // 'createModelMode',\n      // 'modelsMode',\n      // 'modelMode',\n      // 'modelChargeMode',\n      // 'modelPlaceMode',\n      'createTemplateMode',\n      'aoeTemplateMode',\n      'sprayTemplateMode',\n      'wallTemplateMode',\n      // 'createTerrainMode',\n      // 'terrainMode',\n      () => ({})\n    ]);\n\n  modesModelFactory.$inject = [\n    'appAction',\n    'appError',\n  ];\n  function modesModelFactory(appActionService,\n                             appErrorService) {\n    const MODES_REG = {};\n    const modesModel = {\n      registerMode: registerMode,\n      init: modesInit,\n      exit: modesExit,\n      currentModeName: currentModeName,\n      currentModeActions: currentModeActions,\n      currentModeBindings: currentModeBindings,\n      currentModeButtons: currentModeButtons,\n      currentModeBindingsPairs: currentModeBindingsPairs,\n      currentModeActionP: currentModeActionP,\n      switchToMode: switchToMode\n    };\n    const enterMode$ = R.curry(enterMode);\n    R.curryService(modesModel);\n    return modesModel;\n\n    function registerMode(mode) {\n      console.log('modes: registering '+mode.name, mode);\n      MODES_REG[mode.name] = mode;\n    }\n    function modesInit() {\n      const modes = {\n        register: MODES_REG\n      };\n      // TODO : import customized bindings\n      Mousetrap.reset();\n      return enterMode('Default', modes);\n    }\n    function modesExit(modes) {\n      return cleanupCurrentModeBindings(modes);\n    }\n    function currentModeName(modes) {\n      return R.propOr('Unknown', 'name', currentMode(modes));\n    }\n    function currentModeActions(modes) {\n      return R.propOr({}, 'actions', currentMode(modes));\n    }\n    function currentModeBindings(modes) {\n      return R.propOr({}, 'bindings', currentMode(modes));\n    }\n    function currentModeButtons(modes) {\n      return R.propOr({}, 'buttons', currentMode(modes));\n    }\n    function currentModeBindingsPairs(modes) {\n      return R.thread(modes)(\n        modesModel.currentModeBindings,\n        R.toPairsIn,\n        R.sortBy(R.head)\n      );\n    }\n    function currentModeActionP(action, args, modes) {\n      const mode_name = modesModel.currentModeName(modes);\n      return R.thread(modes)(\n        currentMode,\n        R.path(['actions', action]),\n        R.ifElse(\n          R.exists,\n          (handler) => handler.apply(null, args),\n          () => R.rejectP(`Unknown action \"${action}\" in \"${mode_name}\" mode`)\n        )\n      );\n    }\n    function switchToMode(name, modes) {\n      const previous_mode = currentMode(modes);\n      return R.thread(modes)(\n        R.path(['register', name]),\n        R.ifElse(\n          R.isNil,\n          () => {\n            appErrorService.emit(`Mode ${name} does not exist`);\n            return modes;\n          },\n          () => R.thread(modes)(\n            leaveMode,\n            enterMode$(name),\n            R.spy(`Modes: switch mode from ${previous_mode.name} to ${name}`)\n          )\n        )\n      );\n    }\n    function currentMode(modes = {}) {\n      return R.pathOr({}, [\n        'register',\n        R.propOr('##', 'current', modes)\n      ], modes);\n    }\n    function enterMode(name, modes) {\n      return R.thread(modes)(\n        R.path(['register', name]),\n        R.when(\n          (next_mode) => R.exists(next_mode.onEnter),\n          (next_mode) => next_mode.onEnter()\n        ),\n        () => R.assoc('current', name, modes),\n        setupCurrentModeBindings\n      );\n    }\n    function leaveMode(modes) {\n      return R.thread(modes)(\n        currentMode,\n        R.when(\n          (mode) => R.exists(mode.onLeave),\n          (mode) => mode.onLeave()\n        ),\n        () => cleanupCurrentModeBindings(modes),\n        R.assoc('current', null)\n      );\n    }\n    function cleanupCurrentModeBindings(modes) {\n      Mousetrap.reset();\n      return modes;\n    }\n    function setupCurrentModeBindings(modes) {\n      setupBindings(currentMode(modes));\n      return modes;\n    }\n    function setupBindings(mode) {\n      const own_bindings = R.keys(mode.bindings);\n      const all_bindings = R.keysIn(mode.bindings);\n      const inherited_bindings = R.difference(all_bindings,\n                                              own_bindings);\n      R.forEach(bindAction, inherited_bindings);\n      R.forEach(bindAction, own_bindings);\n\n      function bindAction(action) {\n        Mousetrap.bind(mode.bindings[action],\n                       actionBinding(action)\n                      );\n      }\n      function actionBinding(name) {\n        return (event, keys) => {\n          console.warn('binding', name, keys, event);\n\n          appActionService\n            .do('Modes.current.action', name, [event]);\n          return false;\n        };\n      }\n    }\n  }\n})();\n"]}