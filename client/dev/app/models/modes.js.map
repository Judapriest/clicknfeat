{"version":3,"sources":["modes.es6"],"names":[],"mappings":"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","file":"modes.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modes', [\n    function modesServiceFactory() {\n      var MODES_REG = {};\n      var modesService = {\n        registerMode: function registerMode(mode) {\n          console.log('modes: registering '+mode.name, mode);\n          MODES_REG[mode.name] = mode;\n        },\n        init: function modesInit(state) {\n          var modes = {\n            register: MODES_REG\n          };\n          // TODO : import customized bindings\n          Mousetrap.reset();\n          return enterMode$('Default', state, modes);\n        },\n        exit: function modesExit(state, modes) {\n          return cleanupCurrentModeBindings$(state, modes);\n        },\n        currentModeName: (modes) => {\n          return R.propOr('Unknown', 'name', currentMode(modes));\n        },\n        currentModeActions: (modes) => {\n          return R.propOr({}, 'actions', currentMode(modes));\n        },\n        currentModeBindings: (modes) => {\n          return R.propOr({}, 'bindings', currentMode(modes));\n        },\n        currentModeButtons: (modes) => {\n          return R.propOr({}, 'buttons', currentMode(modes));\n        },\n        currentModeBindingsPairs: (modes) => {\n          return R.pipe(\n            modesService.currentModeBindings,\n            R.toPairsIn,\n            R.sortBy(R.head)\n          )(modes);\n        },\n        currentModeAction: function(action, args, modes) {\n          let mode_name = modesService.currentModeName(modes);\n          return R.pipePromise(\n            currentMode,\n            R.path(['actions',action]),\n            R.rejectIf(R.isNil, `Unknown action \"${action}\" in \"${mode_name}\" mode`),\n            (handler) => {\n              return handler.apply(null, args);\n            }\n          )(modes);\n        },\n        switchToMode: function(name, state, modes) {\n          var previous_mode = currentMode(modes);\n          return R.pipePromise(\n            R.path(['register', name]),\n            R.rejectIf(R.isNil, `Mode ${name} does not exists`),\n            R.always(modes),\n            leaveMode$(state),\n            enterMode$(name, state),\n            R.spy(`Modes: switch mode from ${previous_mode.name} to ${name}`)\n          )(modes);\n        }\n      };\n\n      function currentMode(modes = {}) {\n        return R.pathOr({}, [\n          'register',\n          R.propOr('##', 'current', modes)\n        ], modes);\n      }\n      var enterMode$ = R.curry((name, state, modes) => {\n        return R.pipePromise(\n          R.path(['register', name]),\n          (next_mode) => {\n            return ( R.exists(next_mode.onEnter) ?\n                     next_mode.onEnter(state) :\n                     null\n                   );\n          },\n          R.always(modes),\n          R.assoc('current', name),\n          setupCurrentModeBindings$(state)\n        )(modes);\n      });\n      var leaveMode$ = R.curry((state, modes) => {\n        return R.pipePromise(\n          currentMode,\n          (mode) => {\n            return ( R.exists(mode.onLeave) ?\n                     mode.onLeave(state) :\n                     null\n                   );\n          },\n          R.always(modes),\n          cleanupCurrentModeBindings$(state),\n          R.assoc('current', null)\n        )(modes);\n      });\n      var cleanupCurrentModeBindings$ = R.curry((state, modes) => {\n        Mousetrap.reset();\n        return modes;\n      });\n      var setupCurrentModeBindings$ = R.curry((state, modes) => {\n        setupBindings(currentMode(modes), state);\n        return modes;\n      });\n      function setupBindings(mode, state) {\n        var own_bindings = R.keys(mode.bindings);\n        var all_bindings = R.keysIn(mode.bindings);\n        var inherited_bindings = R.difference(all_bindings,\n                                              own_bindings);\n        R.forEach((action) => {\n          Mousetrap.bind(mode.bindings[action],\n                         actionBinding(action, state)\n                        );\n        }, inherited_bindings);\n        R.forEach((action) => {\n          Mousetrap.bind(mode.bindings[action],\n                         actionBinding(action, state)\n                        );\n        }, own_bindings);\n      }\n      function actionBinding(name, state) {\n        return (event, keys) => {\n          console.warn('binding', name, keys, event);\n\n          state.event('Modes.current.action', name, [event]);\n        };\n      }\n      R.curryService(modesService);\n      return modesService;\n    }\n  ])\n  .factory('allModes', [\n    'defaultMode',\n    'rulerMode',\n    'losMode',\n    'createModelMode',\n    'modelsMode',\n    'modelMode',\n    'modelChargeMode',\n    'modelPlaceMode',\n    'createTemplateMode',\n    'aoeTemplateMode',\n    'sprayTemplateMode',\n    'wallTemplateMode',\n    'createTerrainMode',\n    'terrainMode',\n    () => ({})\n  ]);\n"]}