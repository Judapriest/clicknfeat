{"version":3,"sources":["terrain.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,SADX,EACsB,mBADtB,EADU;;AAIV,sBAAoB,OAApB,GAA8B,CAC5B,UAD4B,EAE5B,SAF4B,EAG5B,iBAH4B,CAA9B,CAJU;AASV,WAAS,mBAAT,CAA6B,aAA7B,EAC6B,YAD7B,EAE6B,oBAF7B,EAEmD;AACjD,QAAM,gBAAgB;AACpB,YAAM,EAAN;AACA,iBAAW,CAAX;AACA,cAAQ,EAAR;AACA,mBAAa,CAAb;AACA,aAAO,EAAP;AACA,kBAAY,CAAZ;KANI,CAD2C;AASjD,QAAM,QAAQ,EAAE,KAAF,CAAQ,aAAR,CAAR,CAT2C;AAUjD,kBAAc,QAAd,CAAuB,MAAvB,EACuB,SADvB,EAEuB,aAFvB,EAGuB,UAAC,KAAD,EAAW;AACT,QAAE,MAAF,CAAS,KAAT,EAAgB,KAAhB,EADS;KAAX,CAHvB,CAViD;;AAiBjD,QAAM,OAAO,aAAa,SAAb,EAAwB,KAAxB,CAAP,CAjB2C;AAkBjD,QAAM,eAAe,OAAO,MAAP,CAAc,IAAd,CAAf,CAlB2C;AAmBjD,MAAE,UAAF,CAAa,YAAb,EAA2B;AACzB,cAAQ,aAAR;AACA,cAAQ,kBAAR;KAFF,EAnBiD;AAuBjD,MAAE,YAAF,CAAe,YAAf,EAvBiD;AAwBjD,WAAO,YAAP,CAxBiD;;AA0BjD,aAAS,aAAT,CAAuB,QAAvB,EAAiC,IAAjC,EAAuC;AACrC,UAAM,OAAO,qBACJ,OADI,CACI,KAAK,IAAL,EAAW,QADf,CAAP,CAD+B;AAGrC,UAAG,EAAE,KAAF,CAAQ,IAAR,CAAH,EAAkB,OAAO,IAAP,CAAlB;;AAEA,aAAO,EAAE,MAAF,CAAS,IAAT,EACL,UAAC,IAAD;eAAU,KAAK,MAAL,CAAY,IAAZ;OAAV,EACA,EAAE,KAAF,CAAQ,MAAR,EAAgB,IAAhB,CAFK,CAAP,CALqC;KAAvC;AAUA,aAAS,kBAAT,CAA4B,IAA5B,EAAkC,KAAlC,EAAyC;AACvC,aAAO;AACL,eAAO,MAAM,KAAN;AACP,kBAAU,KAAK,GAAL,CAAS,IAAT;AACV,eAAO,KAAK,GAAL,CAAS,KAAT;AACP,gBAAQ,KAAK,GAAL,CAAS,MAAT;AACR,WAAG,MAAM,CAAN,GAAU,KAAK,GAAL,CAAS,KAAT,GAAiB,CAAjB;AACb,WAAG,MAAM,CAAN,GAAU,KAAK,GAAL,CAAS,MAAT,GAAkB,CAAlB;AACb,mBAAW,CACT,YADS,EAET,MAAM,CAAN,GAAU,KAAK,GAAL,CAAS,KAAT,GAAiB,CAAjB,EACV,GAHS,EAIT,MAAM,CAAN,GAAU,KAAK,GAAL,CAAS,MAAT,GAAkB,CAAlB,EACV,WALS,EAMT,MAAM,CAAN,EACA,GAPS,EAQT,KAAK,GAAL,CAAS,KAAT,GAAiB,CAAjB,EACA,GATS,EAUT,KAAK,GAAL,CAAS,MAAT,GAAkB,CAAlB,EACA,GAXS,EAYT,IAZS,CAYJ,EAZI,CAAX;OAPF,CADuC;KAAzC;GAtCF;CATD,CAAD","file":"terrain.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('terrain', terrainModelFactory);\n\n  terrainModelFactory.$inject = [\n    'settings',\n    'element',\n    'gameTerrainInfo',\n  ];\n  function terrainModelFactory(settingsModel,\n                               elementModel,\n                               gameTerrainInfoModel) {\n    const DEFAULT_MOVES = {\n      Move: 10,\n      MoveSmall: 1,\n      Rotate: 15,\n      RotateSmall: 5,\n      Shift: 10,\n      ShiftSmall: 1\n    };\n    const MOVES = R.clone(DEFAULT_MOVES);\n    settingsModel.register('Misc',\n                           'Terrain',\n                           DEFAULT_MOVES,\n                           (moves) => {\n                             R.extend(MOVES, moves);\n                           });\n\n    const base = elementModel('terrain', MOVES);\n    const terrainModel = Object.create(base);\n    R.deepExtend(terrainModel, {\n      create: terrainCreate,\n      render: terrainModelRender\n    });\n    R.curryService(terrainModel);\n    return terrainModel;\n\n    function terrainCreate(terrains, terr) {\n      const info = gameTerrainInfoModel\n              .getInfo(terr.info, terrains);\n      if(R.isNil(info)) return null;\n\n      return R.thread(terr)(\n        (terr) => base.create(terr),\n        R.assoc('info', info)\n      );\n    }\n    function terrainModelRender(info, state) {\n      return {\n        stamp: state.stamp,\n        img_link: info.img.link,\n        width: info.img.width,\n        height: info.img.height,\n        x: state.x - info.img.width / 2,\n        y: state.y - info.img.height / 2,\n        transform: [\n          'translate(',\n          state.x - info.img.width / 2,\n          ',',\n          state.y - info.img.height / 2,\n          ') rotate(',\n          state.r,\n          ',',\n          info.img.width / 2,\n          ',',\n          info.img.height / 2,\n          ')'\n        ].join('')\n      };\n    }\n  }\n})();\n"]}