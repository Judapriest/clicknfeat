{"version":3,"sources":["circle.es6"],"names":[],"mappings":";;;;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,QADX,EACqB,kBADrB,EADU;;AAIV,qBAAmB,OAAnB,GAA6B,CAC3B,OAD2B,EAE3B,MAF2B,CAA7B,CAJU;AAQV,WAAS,kBAAT,CAA4B,UAA5B,EAC4B,SAD5B,EACuC;AACrC,QAAM,cAAc;AAClB,sBAAgB,oBAAhB;AACA,oBAAc,kBAAd;AACA,qBAAe,mBAAf;AACA,oBAAc,kBAAd;AACA,eAAS,aAAT;AACA,qBAAe,mBAAf;AACA,8BAAwB,4BAAxB;AACA,4BAAsB,0BAAtB;AACA,4BAAsB,0BAAtB;AACA,kBAAY,gBAAZ;AACA,yBAAmB,uBAAnB;KAXI,CAD+B;;AAerC,MAAE,YAAF,CAAe,WAAf,EAfqC;AAgBrC,WAAO,WAAP,CAhBqC;;AAkBrC,aAAS,oBAAT,CAA+B,IAA/B,EAAqC,MAArC,EAA6C;AAC3C,UAAM,QAAQ,WAAW,cAAX,CAA0B,KAAK,KAAL,EAAY,MAAtC,CAAR,CADqC;AAE3C,UAAM,cAAc,UAAU,MAAV,CAAiB,IAAjB,CAAd,CAFqC;AAG3C,UAAM,cAAc,UAAU,MAAV,CAAiB,IAAjB,CAAd,CAHqC;AAI3C,UAAM,YAAY,WAAW,aAAX,CAAyB,WAAzB,EAAsC,KAAtC,CAAZ,CAJqC;AAK3C,UAAM,YAAY,WAAW,aAAX,CAAyB,WAAzB,EAAsC,KAAtC,CAAZ,CALqC;;AAO3C,aAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,WAAvB,CAAP,CAP2C;KAA7C;AASA,aAAS,kBAAT,CAA4B,IAA5B,EAAkC,MAAlC,EAA0C;kCAElC,YAAY,cAAZ,CAA2B,IAA3B,EAAiC,MAAjC,EAFkC;;;;UAChC,sCADgC;UACrB,sCADqB;UACV,wCADU;;AAIxC,aAAS,YAAY,OAAO,MAAP,IAAiB,CAA7B,IACA,YAAY,OAAO,MAAP,IAAiB,CAA7B,IACA,YAAY,OAAO,MAAP,IAAiB,WAA7B,CAN+B;KAA1C;AASA,aAAS,mBAAT,CAA6B,IAA7B,EAAmC,MAAnC,EAA2C;mCAEnC,YAAY,cAAZ,CAA2B,IAA3B,EAAiC,MAAjC,EAFmC;;;;UACjC,sCADiC;UACtB,sCADsB;UACX,wCADW;;AAIzC,aAAS,YAAY,OAAO,MAAP,IAAiB,CAA7B,IACA,YAAY,OAAO,MAAP,IAAiB,CAA7B,IACA,YAAY,OAAO,MAAP,IAAiB,WAA7B,CANgC;KAA3C;AASA,aAAS,kBAAT,CAA4B,QAA5B,EAAsC,MAAtC,EAA8C;AAC5C,aAAS,YAAY,aAAZ,CAA0B,SAAS,IAAT,EAAe,MAAzC,KACA,YAAY,YAAZ,CAAyB,SAAS,KAAT,EAAgB,MAAzC,CADA,CADmC;KAA9C;AAKA,aAAS,aAAT,CAAuB,GAAvB,EAA4B,MAA5B,EAAoC;AAClC,UAAI,cAAJ,CADkC;AAElC,UAAI,cAAJ,CAFkC;AAGlC,UAAG,OAAO,CAAP,IAAY,IAAI,GAAJ,CAAQ,CAAR,IACZ,OAAO,CAAP,IAAY,IAAI,IAAJ,CAAS,CAAT,IACZ,OAAO,CAAP,IAAY,IAAI,GAAJ,CAAQ,CAAR,IACZ,OAAO,CAAP,IAAY,IAAI,IAAJ,CAAS,CAAT,EAAY,OAAO,IAAP,CAH3B;AAIA,UAAG,OAAO,CAAP,IAAY,IAAI,GAAJ,CAAQ,CAAR,GAAY,OAAO,MAAP,IACxB,OAAO,CAAP,GAAY,IAAI,GAAJ,CAAQ,CAAR,EAAW;AACxB,aAAK,IAAI,GAAJ,CAAQ,CAAR,GAAY,OAAO,CAAP,CADO;AAExB,aAAK,KAAK,IAAL,CAAU,OAAO,MAAP,GAAgB,OAAO,MAAP,GAAgB,KAAK,EAAL,CAA/C,CAFwB;AAGxB,eAAS,OAAO,CAAP,GAAW,EAAX,IAAiB,IAAI,GAAJ,CAAQ,CAAR,IACjB,OAAO,CAAP,GAAW,EAAX,IAAiB,IAAI,IAAJ,CAAS,CAAT,CAJF;OAD1B;AAQA,UAAG,OAAO,CAAP,IAAY,IAAI,IAAJ,CAAS,CAAT,GAAa,OAAO,MAAP,IACzB,OAAO,CAAP,GAAY,IAAI,IAAJ,CAAS,CAAT,EAAY;AACzB,aAAK,IAAI,IAAJ,CAAS,CAAT,GAAa,OAAO,CAAP,CADO;AAEzB,aAAK,KAAK,IAAL,CAAU,OAAO,MAAP,GAAgB,OAAO,MAAP,GAAgB,KAAK,EAAL,CAA/C,CAFyB;AAGzB,eAAS,OAAO,CAAP,GAAW,EAAX,IAAiB,IAAI,GAAJ,CAAQ,CAAR,IACjB,OAAO,CAAP,GAAW,EAAX,IAAiB,IAAI,IAAJ,CAAS,CAAT,CAJD;OAD3B;AAQA,UAAG,OAAO,CAAP,IAAY,IAAI,GAAJ,CAAQ,CAAR,GAAY,OAAO,MAAP,IACxB,OAAO,CAAP,GAAY,IAAI,GAAJ,CAAQ,CAAR,EAAW;AACxB,aAAK,IAAI,GAAJ,CAAQ,CAAR,GAAY,OAAO,CAAP,CADO;AAExB,aAAK,KAAK,IAAL,CAAU,OAAO,MAAP,GAAgB,OAAO,MAAP,GAAgB,KAAK,EAAL,CAA/C,CAFwB;AAGxB,eAAS,OAAO,CAAP,GAAW,EAAX,IAAiB,IAAI,GAAJ,CAAQ,CAAR,IACjB,OAAO,CAAP,GAAW,EAAX,IAAiB,IAAI,IAAJ,CAAS,CAAT,CAJF;OAD1B;AAQA,UAAG,OAAO,CAAP,IAAY,IAAI,IAAJ,CAAS,CAAT,GAAa,OAAO,MAAP,IACzB,OAAO,CAAP,GAAY,IAAI,IAAJ,CAAS,CAAT,EAAY;AACzB,aAAK,IAAI,IAAJ,CAAS,CAAT,GAAa,OAAO,CAAP,CADO;AAEzB,aAAK,KAAK,IAAL,CAAU,OAAO,MAAP,GAAgB,OAAO,MAAP,GAAgB,KAAK,EAAL,CAA/C,CAFyB;AAGzB,eAAS,OAAO,CAAP,GAAW,EAAX,IAAiB,IAAI,GAAJ,CAAQ,CAAR,IACjB,OAAO,CAAP,GAAW,EAAX,IAAiB,IAAI,IAAJ,CAAS,CAAT,CAJD;OAD3B;AAQA,aAAO,KAAP,CAvCkC;KAApC;AAyCA,aAAS,mBAAT,CAA6B,IAA7B,EAAmC,MAAnC,EAA2C;mCAEnC,YAAY,cAAZ,CAA2B,IAA3B,EAAiC,MAAjC,EAFmC;;;;UACjC,sCADiC;UACtB,sCADsB;UACX,wCADW;;AAIzC,aAAS,KAAK,GAAL,CAAS,SAAT,IAAsB,OAAO,MAAP,IACtB,YAAY,OAAO,MAAP,IAAiB,CAA7B,IACA,YAAY,OAAO,MAAP,IAAiB,WAA7B,CANgC;KAA3C;AASA,aAAS,4BAAT,CAAsC,SAAtC,EAAiD,MAAjD,EAAyD;AACvD,aAAO;AACL,WAAG,OAAO,CAAP,GAAW,KAAK,GAAL,CAAS,KAAK,EAAL,GAAU,SAAV,GAAsB,GAAtB,CAAT,GAAsC,OAAO,MAAP;AACpD,WAAG,OAAO,CAAP,GAAW,KAAK,GAAL,CAAS,KAAK,EAAL,GAAU,SAAV,GAAsB,GAAtB,CAAT,GAAsC,OAAO,MAAP;OAFtD,CADuD;KAAzD;AAMA,aAAS,0BAAT,CAAoC,KAApC,EAA2C,IAA3C,EAAiD,MAAjD,EAAyD;AACvD,UAAM,WAAW,WAAW,UAAX,CAAsB,MAAtB,EAA8B,KAA9B,CAAX,CADiD;AAEvD,UAAM,YAAY,WAAW,WAAX,CAAuB,MAAvB,EAA+B,KAA/B,CAAZ,CAFiD;AAGvD,UAAM,kBAAkB,MAAM,KAAK,IAAL,CAAU,OAAO,MAAP,GAAgB,QAAhB,CAAhB,GAA4C,KAAK,EAAL,CAHb;AAIvD,UAAM,oBAAsB,CAAC,IAAD,GACF,YAAY,GAAZ,GAAkB,eAAlB,GACA,YAAY,GAAZ,GAAkB,eAAlB,CAN6B;;AASvD,aAAO,YAAY,sBAAZ,CAAmC,iBAAnC,EAAsD,MAAtD,CAAP,CATuD;KAAzD;AAWA,aAAS,0BAAT,CAAoC,MAApC,EAA4C,MAA5C,EAAoD;AAClD,UAAM,YAAY,WAAW,WAAX,CAAuB,MAAvB,EAA+B,MAA/B,CAAZ,CAD4C;AAElD,UAAM,WAAW,WAAW,UAAX,CAAsB,MAAtB,EAA8B,MAA9B,CAAX,CAF4C;AAGlD,UAAM,eAAe,KAAK,GAAL,CAAS,OAAO,MAAP,GAAgB,OAAO,MAAP,CAAxC,CAH4C;AAIlD,UAAM,kBAAkB,OAAQ,KAAK,IAAL,CAAU,eAAa,QAAb,CAAV,IACD,OAAO,MAAP,IAAiB,OAAO,MAAP,GAAgB,CAAjC,GAAqC,CAAC,CAAD,CADpC,CAAR,GAEQ,KAAK,EAAL,CANkB;AAOlD,aAAO;AACL,eAAO,YAAY,eAAZ,GAA8B,EAA9B;AACP,cAAM,YAAY,eAAZ,GAA8B,EAA9B;OAFR,CAPkD;KAApD;AAYA,aAAS,gBAAT,CAA0B,MAA1B,EAAkC,MAAlC,EAA0C;AACxC,UAAM,aAAa,YAAY,oBAAZ,CAAiC,MAAjC,EAAyC,MAAzC,CAAb,CADkC;AAExC,UAAM,UAAU;AACd,cAAM;AACJ,iBAAO,YACJ,sBADI,CACmB,WAAW,IAAX,EAAiB,MADpC,CAAP;AAEA,eAAK,YACF,sBADE,CACqB,WAAW,IAAX,EAAiB,MADtC,CAAL;SAHF;AAMA,eAAO;AACL,iBAAO,YACJ,sBADI,CACmB,WAAW,KAAX,EAAkB,MADrC,CAAP;AAEA,eAAK,YACF,sBADE,CACqB,WAAW,KAAX,EAAkB,MADvC,CAAL;SAHF;OAPI,CAFkC;AAgBxC,aAAO,OAAP,CAhBwC;KAA1C;AAkBA,aAAS,uBAAT,CAAiC,MAAjC,EACiC,YADjC,EAEiC,MAFjC,EAEyC;AACvC,UAAM,aAAa,YAAY,oBAAZ,CAAiC,MAAjC,EAAyC,MAAzC,CAAb,CADiC;AAEvC,UAAM,WAAW;AACf,cAAM,qBAAqB,UAArB,EAAiC,MAAjC,EAAyC,YAAzC,EAAuD,MAAvD,CAAN;AACA,eAAO,sBAAsB,UAAtB,EAAkC,MAAlC,EAA0C,YAA1C,EAAwD,MAAxD,CAAP;OAFI,CAFiC;AAMvC,eAAS,IAAT,CAAc,MAAd,GAAuB,UAAU,MAAV,CAAiB,SAAS,IAAT,CAAxC,CANuC;AAOvC,eAAS,KAAT,CAAe,MAAf,GAAwB,UAAU,MAAV,CAAiB,SAAS,KAAT,CAAzC,CAPuC;;AASvC,UAAM,mBAAmB;AACvB,cAAM;AACJ,iBAAO,EAAE,GAAG,SAAS,IAAT,CAAc,GAAd,CAAkB,CAAlB,EAAqB,GAAG,SAAS,IAAT,CAAc,GAAd,CAAkB,CAAlB,EAApC;SADF;AAGA,eAAO;AACL,iBAAO,EAAE,GAAG,SAAS,KAAT,CAAe,GAAf,CAAmB,CAAnB,EAAsB,GAAG,SAAS,KAAT,CAAe,GAAf,CAAmB,CAAnB,EAArC;SADF;OAJI,CATiC;AAiBvC,UAAI,iBAAiB,GAAjB,CAjBmC;AAkBvC,UAAI,kBAAkB,GAAlB,CAlBmC;AAmBvC,UAAM,iBAAiB,WAChB,aADgB,CACF,SAAS,IAAT,CAAc,MAAd,EAAsB,SAAS,KAAT,CAAe,MAAf,CADrC,CAnBiC;AAqBvC,UAAG,iBAAiB,KAAjB,EAAwB;AACzB,YAAM,eAAe;AACnB,iBAAO,SAAS,IAAT,CAAc,GAAd;AACP,eAAK,SAAS,KAAT,CAAe,GAAf;SAFD,CADmB;AAKzB,qBAAa,MAAb,GAAsB,UAAU,MAAV,CAAiB,YAAjB,CAAtB,CALyB;AAMzB,qBAAa,MAAb,GAAsB,UAAU,MAAV,CAAiB,YAAjB,CAAtB,CANyB;;AAQzB,YAAM,QAAQ,KAAK,IAAL,CAAU,WAAW,aAAX,CAAyB,aAAa,MAAb,EACA,SAAS,IAAT,CAAc,MAAd,CADnC,CAAR,CARmB;AAUzB,YAAM,OAAO,KAAK,IAAL,CAAU,CAAC,WAAW,aAAX,CAAyB,aAAa,MAAb,EACA,SAAS,KAAT,CAAe,MAAf,CAD1B,CAAjB,CAVmB;AAYzB,yBAAiB,aAAa,MAAb,GAAsB,KAAK,GAAL,CAAS,KAAT,CAAtB,GAAwC,KAAK,GAAL,CAAS,QAAM,IAAN,CAAjD,CAZQ;AAazB,0BAAkB,aAAa,MAAb,GAAsB,KAAK,GAAL,CAAS,IAAT,CAAtB,GAAuC,KAAK,GAAL,CAAS,QAAM,IAAN,CAAhD,CAbO;OAA3B;AAeA,uBAAiB,KAAK,GAAL,CAAS,GAAT,EAAc,cAAd,CAAjB,CApCuC;AAqCvC,wBAAkB,KAAK,GAAL,CAAS,GAAT,EAAc,eAAd,CAAlB,CArCuC;AAsCvC,uBAAiB,IAAjB,CAAsB,GAAtB,GAA4B,WACzB,iBADyB,CACP,cADO,EACS,SAAS,IAAT,CAAc,MAAd,EAChB,iBAAiB,IAAjB,CAAsB,KAAtB,CAFrB,CAtCuC;AAyCvC,uBAAiB,KAAjB,CAAuB,GAAvB,GAA6B,WAC1B,iBAD0B,CACR,eADQ,EACS,SAAS,KAAT,CAAe,MAAf,EACjB,iBAAiB,KAAjB,CAAuB,KAAvB,CAFrB,CAzCuC;AA4CvC,aAAO,gBAAP,CA5CuC;KAFzC;AAgDA,aAAS,oBAAT,CAA8B,UAA9B,EAA0C,MAA1C,EAAkD,YAAlD,EAAgE,MAAhE,EAAwE;AACtE,UAAM,UAAU,CAAC,WAAW,KAAX,GAAmB,WAAW,IAAX,CAApB,GAAuC,GAAvC,CADsD;AAEtE,UAAM,MAAM;AACV,eAAO,IAAP;AACA,aAAK,IAAL;OAFI,CAFgE;AAMtE,WAAI,IAAI,UAAU,WAAW,IAAX,EACd,UAAU,WAAW,KAAX,EACV,WAAW,OAAX,EAAoB;AACtB,YAAI,KAAJ,GAAY,YAAY,sBAAZ,CAAmC,OAAnC,EAA4C,MAA5C,CAAZ,CADsB;AAEtB,YAAI,GAAJ,GAAU,YAAY,oBAAZ,CAAiC,IAAI,KAAJ,EAAW,IAA5C,EAAkD,MAAlD,CAAV,CAFsB;AAGtB,YAAI,MAAJ,GAAa,UAAU,MAAV,CAAiB,GAAjB,CAAb,CAHsB;AAItB,YAAI,MAAJ,GAAa,UAAU,MAAV,CAAiB,GAAjB,CAAb,CAJsB;;AAMtB,YAAM,cAAc,EAAE,IAAF,CAAO,UAAC,MAAD,EAAY;AACrC,iBAAO,YAAY,aAAZ,CAA0B,GAA1B,EAA+B,MAA/B,CAAP,CADqC;SAAZ,EAExB,YAFiB,CAAd,CANgB;;AAUtB,YAAG,EAAE,KAAF,CAAQ,WAAR,CAAH,EAAyB,OAAO,GAAP,CAAzB;OAZF;AAcA,aAAO,GAAP,CApBsE;KAAxE;AAsBA,aAAS,qBAAT,CAA+B,UAA/B,EAA2C,MAA3C,EAAmD,YAAnD,EAAiE,MAAjE,EAAyE;AACvE,UAAM,UAAU,CAAC,WAAW,KAAX,GAAmB,WAAW,IAAX,CAApB,GAAuC,GAAvC,CADuD;AAEvE,UAAM,MAAM;AACV,eAAO,IAAP;AACA,aAAK,IAAL;OAFI,CAFiE;AAMvE,WAAI,IAAI,UAAU,WAAW,KAAX,EACd,UAAU,WAAW,IAAX,EACV,WAAW,OAAX,EAAoB;AACtB,YAAI,KAAJ,GAAY,YAAY,sBAAZ,CAAmC,OAAnC,EAA4C,MAA5C,CAAZ,CADsB;AAEtB,YAAI,GAAJ,GAAU,YAAY,oBAAZ,CAAiC,IAAI,KAAJ,EAAW,KAA5C,EAAmD,MAAnD,CAAV,CAFsB;AAGtB,YAAI,MAAJ,GAAa,UAAU,MAAV,CAAiB,GAAjB,CAAb,CAHsB;AAItB,YAAI,MAAJ,GAAa,UAAU,MAAV,CAAiB,GAAjB,CAAb,CAJsB;;AAMtB,YAAM,cAAc,EAAE,IAAF,CAAO,UAAC,MAAD,EAAY;AACrC,iBAAO,YAAY,aAAZ,CAA0B,GAA1B,EAA+B,MAA/B,CAAP,CADqC;SAAZ,EAExB,YAFiB,CAAd,CANgB;;AAUtB,YAAG,EAAE,KAAF,CAAQ,WAAR,CAAH,EAAyB,OAAO,GAAP,CAAzB;OAZF;AAcA,aAAO,GAAP,CApBuE;KAAzE;GA1NF;CARD,CAAD","file":"circle.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('circle', circleModelFactory);\n\n  circleModelFactory.$inject = [\n    'point',\n    'line',\n  ];\n  function circleModelFactory(pointModel,\n                              lineModel) {\n    const circleModel = {\n      positionToLine: circlePositionToLine,\n      isLeftOfLine: circleIsLeftOfLine,\n      isRightOfLine: circleIsRightOfLine,\n      isInEnvelope: circleIsInEnvelope,\n      isInBox: circleIsInBox,\n      intersectLine: circleIntersectLine,\n      pointOnEdgeInDirection: circlePointOnEdgeInDirection,\n      pointOnEdgeTangentTo: circlePointOnEdgeTangentTo,\n      envelopeDirectionsTo: circleEnvelopeDirectionsTo,\n      envelopeTo: circleEnvelopeTo,\n      outsideEnvelopeTo: circleOutsideEnvelopeTo\n    };\n\n    R.curryService(circleModel);\n    return circleModel;\n\n    function circlePositionToLine (line, circle) {\n      const delta = pointModel.differenceFrom(line.start, circle);\n      const line_length = lineModel.length(line);\n      const line_vector = lineModel.vector(line);\n      const vect_prod = pointModel.vectorProduct(line_vector, delta);\n      const scal_prod = pointModel.scalarProduct(line_vector, delta);\n\n      return [vect_prod, scal_prod, line_length];\n    }\n    function circleIsLeftOfLine(line, circle) {\n      const [ vect_prod, scal_prod, line_length ] =\n            circleModel.positionToLine(line, circle);\n\n      return ( vect_prod + circle.radius >= 0 &&\n               scal_prod + circle.radius >= 0 &&\n               scal_prod - circle.radius <= line_length\n             );\n    }\n    function circleIsRightOfLine(line, circle) {\n      const [ vect_prod, scal_prod, line_length ] =\n            circleModel.positionToLine(line, circle);\n\n      return ( vect_prod - circle.radius <= 0 &&\n               scal_prod + circle.radius >= 0 &&\n               scal_prod - circle.radius <= line_length\n             );\n    }\n    function circleIsInEnvelope(envelope, circle) {\n      return ( circleModel.isRightOfLine(envelope.left, circle) &&\n               circleModel.isLeftOfLine(envelope.right, circle)\n             );\n    }\n    function circleIsInBox(box, circle) {\n      let dx;\n      let dy;\n      if(circle.x >= box.low.x &&\n         circle.x <= box.high.x &&\n         circle.y >= box.low.y &&\n         circle.y <= box.high.y) return true;\n      if(circle.x >= box.low.x - circle.radius &&\n         circle.x <  box.low.x) {\n        dx = box.low.x - circle.x;\n        dy = Math.sqrt(circle.radius * circle.radius - dx * dx);\n        return ( circle.y + dy >= box.low.y &&\n                 circle.y - dy <= box.high.y\n               );\n      }\n      if(circle.x <= box.high.x + circle.radius &&\n         circle.x >  box.high.x) {\n        dx = box.high.x - circle.x;\n        dy = Math.sqrt(circle.radius * circle.radius - dx * dx);\n        return ( circle.y + dy >= box.low.y &&\n                 circle.y - dy <= box.high.y\n               );\n      }\n      if(circle.y >= box.low.y - circle.radius &&\n         circle.y <  box.low.y) {\n        dy = box.low.y - circle.y;\n        dx = Math.sqrt(circle.radius * circle.radius - dy * dy);\n        return ( circle.x + dx >= box.low.x &&\n                 circle.x - dx <= box.high.x\n               );\n      }\n      if(circle.y <= box.high.y + circle.radius &&\n         circle.y >  box.high.y) {\n        dy = box.high.y - circle.y;\n        dx = Math.sqrt(circle.radius * circle.radius - dy * dy);\n        return ( circle.x + dx >= box.low.x &&\n                 circle.x - dx <= box.high.x\n               );\n      }\n      return false;\n    }\n    function circleIntersectLine(line, circle) {\n      const [ vect_prod, scal_prod, line_length ] =\n            circleModel.positionToLine(line, circle);\n\n      return ( Math.abs(vect_prod) < circle.radius &&\n               scal_prod + circle.radius >= 0 &&\n               scal_prod - circle.radius <= line_length\n             );\n    }\n    function circlePointOnEdgeInDirection(direction, circle) {\n      return {\n        x: circle.x + Math.sin(Math.PI * direction / 180) * circle.radius,\n        y: circle.y - Math.cos(Math.PI * direction / 180) * circle.radius\n      };\n    }\n    function circlePointOnEdgeTangentTo(point, left, circle) {\n      const distance = pointModel.distanceTo(circle, point);\n      const direction = pointModel.directionTo(circle, point);\n      const delta_direction = 180 * Math.acos(circle.radius / distance) / Math.PI;\n      const tangent_direction = ( !left ?\n                                direction + 180 - delta_direction :\n                                direction - 180 + delta_direction\n                              );\n\n      return circleModel.pointOnEdgeInDirection(tangent_direction, circle);\n    }\n    function circleEnvelopeDirectionsTo(target, origin) {\n      const direction = pointModel.directionTo(target, origin);\n      const distance = pointModel.distanceTo(target, origin);\n      const delta_radius = Math.abs(origin.radius - target.radius);\n      const delta_direction = 180 * ( Math.asin(delta_radius/distance) *\n                                    (origin.radius >= target.radius ? 1 : -1)\n                                  ) / Math.PI;\n      return {\n        right: direction - delta_direction + 90,\n        left: direction + delta_direction - 90\n      };\n    }\n    function circleEnvelopeTo(target, origin) {\n      const directions = circleModel.envelopeDirectionsTo(target, origin);\n      const envelop = {\n        left: {\n          start: circleModel\n            .pointOnEdgeInDirection(directions.left, origin),\n          end: circleModel\n            .pointOnEdgeInDirection(directions.left, target)\n        },\n        right: {\n          start: circleModel\n            .pointOnEdgeInDirection(directions.right, origin),\n          end: circleModel\n            .pointOnEdgeInDirection(directions.right, target)\n        }\n      };\n      return envelop;\n    }\n    function circleOutsideEnvelopeTo(target,\n                                     intervenings,\n                                     origin) {\n      const directions = circleModel.envelopeDirectionsTo(target, origin);\n      const envelope = {\n        left: findLeftEnvelopeLine(directions, target, intervenings, origin),\n        right: findRightEnvelopeLine(directions, target, intervenings, origin)\n      };\n      envelope.left.vector = lineModel.vector(envelope.left);\n      envelope.right.vector = lineModel.vector(envelope.right);\n\n      const outside_envelope = {\n        left: {\n          start: { x: envelope.left.end.x, y: envelope.left.end.y }\n        },\n        right: {\n          start: { x: envelope.right.end.x, y: envelope.right.end.y }\n        }\n      };\n      let translate_left = 800;\n      let translate_right = 800;\n      const vector_product = pointModel\n            .vectorProduct(envelope.left.vector, envelope.right.vector);\n      if(vector_product > 0.001) {\n        const envelope_end = {\n          start: envelope.left.end,\n          end: envelope.right.end\n        };\n        envelope_end.length = lineModel.length(envelope_end);\n        envelope_end.vector = lineModel.vector(envelope_end);\n\n        const alpha = Math.acos(pointModel.scalarProduct(envelope_end.vector,\n                                                         envelope.left.vector));\n        const beta = Math.acos(-pointModel.scalarProduct(envelope_end.vector,\n                                                         envelope.right.vector));\n        translate_left = envelope_end.length * Math.sin(alpha) / Math.sin(alpha+beta);\n        translate_right = envelope_end.length * Math.sin(beta) / Math.sin(alpha+beta);\n      }\n      translate_left = Math.min(800, translate_left);\n      translate_right = Math.min(800, translate_right);\n      outside_envelope.left.end = pointModel\n        .translateInVector(translate_left, envelope.left.vector,\n                           outside_envelope.left.start);\n      outside_envelope.right.end = pointModel\n        .translateInVector(translate_right, envelope.right.vector,\n                           outside_envelope.right.start);\n      return outside_envelope;\n    }\n    function findLeftEnvelopeLine(directions, target, intervenings, origin) {\n      const rad_inc = (directions.right - directions.left) / 180;\n      const ray = {\n        start: null,\n        end: null\n      };\n      for(let ray_rad = directions.left ;\n          ray_rad < directions.right ;\n          ray_rad += rad_inc) {\n        ray.start = circleModel.pointOnEdgeInDirection(ray_rad, origin);\n        ray.end = circleModel.pointOnEdgeTangentTo(ray.start, true, target);\n        ray.length = lineModel.length(ray);\n        ray.vector = lineModel.vector(ray);\n\n        const intervening = R.find((circle) => {\n          return circleModel.intersectLine(ray, circle);\n        }, intervenings);\n\n        if(R.isNil(intervening)) return ray;\n      }\n      return ray;\n    }\n    function findRightEnvelopeLine(directions, target, intervenings, origin) {\n      const rad_inc = (directions.right - directions.left) / 180;\n      const ray = {\n        start: null,\n        end: null\n      };\n      for(let ray_rad = directions.right ;\n          ray_rad > directions.left ;\n          ray_rad -= rad_inc) {\n        ray.start = circleModel.pointOnEdgeInDirection(ray_rad, origin);\n        ray.end = circleModel.pointOnEdgeTangentTo(ray.start, false, target);\n        ray.length = lineModel.length(ray);\n        ray.vector = lineModel.vector(ray);\n\n        const intervening = R.find((circle) => {\n          return circleModel.intersectLine(ray, circle);\n        }, intervenings);\n\n        if(R.isNil(intervening)) return ray;\n      }\n      return ray;\n    }\n  }\n})();\n"]}