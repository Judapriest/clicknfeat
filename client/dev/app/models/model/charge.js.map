{"version":3,"sources":["charge.es6"],"names":[],"mappings":"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","file":"charge.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelCharge', modelChargeModelFactory);\n\n  modelChargeModelFactory.$inject = [\n    'point',\n  ];\n  function modelChargeModelFactory(pointModel) {\n    const CHARGE_EPSILON = 0.1;\n    const STATE_LENS = R.lensProp('state');\n    const CHARGE_LENS = R.lensPath(['state','cha']);\n    const CHARGE_TARGET_LENS = R.lensPath(['state','cha','t']);\n    const CHARGE_MAX_LENGTH_LENS = R.lensPath(['state','cml']);\n    return (MOVES, modelModel) => {\n      const modelChargeModel = {\n        startChargeP: modelStartChargeP,\n        isCharging: modelIsCharging,\n        chargeTarget: modelChargeTarget,\n        endCharge: modelEndCharge,\n        setChargeTargetP: modelSetChargeTargetP,\n        chargeMaxLength: modelChargeMaxLength,\n        setChargeMaxLength: modelSetChargeMaxLength,\n        moveFrontChargeP: modelMoveFrontChargeP,\n        moveBackChargeP: modelMoveBackChargeP,\n        rotateLeftChargeP: modelRotateLeftChargeP,\n        rotateRightChargeP: modelRotateRightChargeP,\n        shiftLeftChargeP: modelShiftLeftChargeP,\n        shiftRightChargeP: modelShiftRightChargeP,\n        shiftUpChargeP: modelShiftUpChargeP,\n        shiftDownChargeP: modelShiftDownChargeP,\n        renderCharge: modelRenderCharge\n      };\n      const ensureChargeLength$ = R.curry(ensureChargeLength);\n      modelModel.state_checkers = R.append(ensureChargeLength$, modelModel.state_checkers);\n      const ensureChargeOrientation$ = R.curry(ensureChargeOrientation);\n      modelModel.state_checkers = R.append(ensureChargeOrientation$, modelModel.state_checkers);\n      const updateChargeDirection$ = R.curry(updateChargeDirection);\n      modelModel.state_updaters = R.append(updateChargeDirection$, modelModel.state_updaters);\n\n      return modelChargeModel;\n\n      function modelStartChargeP(model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          R.set(CHARGE_LENS, {\n            s: R.pick(['x','y','r'], model.state),\n            t: null\n          })\n        );\n      }\n      function modelIsCharging(model) {\n        return R.exists(R.view(CHARGE_LENS, model));\n      }\n      function modelChargeTarget(model) {\n        return R.view(CHARGE_TARGET_LENS, model);\n      }\n      function modelEndCharge(model) {\n        return R.set(CHARGE_LENS, null, model);\n      }\n      function modelSetChargeTargetP(other, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            if(R.exists(other)) {\n              return R.thread(model)(\n                R.over(CHARGE_LENS,\n                       R.assoc('t', other.state.stamp)),\n                R.over(STATE_LENS,\n                       R.assoc('r', pointModel.directionTo(other.state, model.state)))\n              );\n            }\n            else {\n              return R.set(CHARGE_TARGET_LENS, null, model);\n            }\n          },\n          modelModel.checkState$(other)\n        );\n      }\n      function modelChargeMaxLength(model) {\n        return R.view(CHARGE_MAX_LENGTH_LENS, model);\n      }\n      function modelSetChargeMaxLength(value, model) {\n        model = R.set(CHARGE_MAX_LENGTH_LENS, value, model);\n        return modelModel.checkState(null, model);\n      }\n      function modelMoveFrontChargeP(target, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const dist = MOVES[small ? 'MoveSmall' : 'Move'];\n            const direction = model.state.cha.s.r;\n            return R.over(STATE_LENS,\n                          pointModel.translateInDirection$(dist, direction),\n                          model);\n          },\n          modelModel.checkState$(target)\n        );\n      }\n      function modelMoveBackChargeP(target, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            let dist = MOVES[small ? 'MoveSmall' : 'Move'];\n            const direction = model.state.cha.s.r+180;\n            const distance = pointModel.distanceTo(model.state, model.state.cha.s);\n            if(dist > distance) dist = distance;\n            return R.over(STATE_LENS,\n                          pointModel.translateInDirection$(dist, direction),\n                          model);\n          },\n          modelModel.checkState$(target)\n        );\n      }\n      function modelRotateLeftChargeP(target, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const angle = MOVES[small ? 'RotateChargeSmall' : 'RotateCharge'];\n            return R.thread(model)(\n              R.over(STATE_LENS,\n                     pointModel.rotateLeftAround$(angle, model.state.cha.s)),\n              R.over(R.lensPath(['state','cha','s','r']),\n                     R.subtract(R.__, angle))\n            );\n          },\n          modelModel.checkState$(target)\n        );\n      }\n      function modelRotateRightChargeP(target, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const angle = MOVES[small ? 'RotateChargeSmall' : 'RotateCharge'];\n            return R.thread(model)(\n              R.over(STATE_LENS,\n                     pointModel.rotateRightAround$(angle, model.state.cha.s)),\n              R.over(R.lensPath(['state','cha','s','r']), R.add(angle))\n            );\n          },\n          modelModel.checkState$(target)\n        );\n      }\n      function modelShiftLeftChargeP(target, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(STATE_LENS,\n                          pointModel.shiftLeft$(dist),\n                          model);\n          },\n          modelModel.checkState$(target)\n        );\n      }\n      function modelShiftRightChargeP(target, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(STATE_LENS,\n                          pointModel.shiftRight$(dist),\n                          model);\n          },\n          modelModel.checkState$(target)\n        );\n      }\n      function modelShiftUpChargeP(target, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(STATE_LENS,\n                          pointModel.shiftUp$(dist),\n                          model);\n          },\n          modelModel.checkState$(target)\n        );\n      }\n      function modelShiftDownChargeP(target, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(STATE_LENS,\n                          pointModel.shiftDown$(dist),\n                          model);\n          },\n          modelModel.checkState$(target)\n        );\n      }\n      function ensureChargeLength(_target_, _info_, state) {\n        if(R.exists(state.cha) &&\n           R.exists(state.cml) &&\n           state.cml > 0) {\n          const distance = pointModel.distanceTo(state, state.cha.s);\n          if(distance > state.cml*10) {\n            const direction = pointModel.directionTo(state, state.cha.s);\n            const position = pointModel.translateInDirection(state.cml*10, direction,\n                                                               state.cha.s);\n            return R.thread(state)(\n              R.assoc('x', position.x),\n              R.assoc('y', position.y)\n            );\n          }\n        }\n        return state;\n      }\n      function ensureChargeOrientation(target, _info_, state) {\n        if(R.exists(state.cha)) {\n          if(R.exists(target)) {\n            return R.assoc('r', pointModel.directionTo(target.state, state), state);\n          }\n          const distance = pointModel.distanceTo(state, state.cha.s);\n          const direction = CHARGE_EPSILON > distance\n                  ? state.r\n                  : pointModel.directionTo(state, state.cha.s);\n          return R.assoc('r', direction, state);\n        }\n        return state;\n      }\n      function updateChargeDirection(state) {\n        if(R.exists(state.cha)) {\n          const distance = pointModel.distanceTo(state, state.cha.s);\n          if(distance > CHARGE_EPSILON) {\n            const direction = pointModel.directionTo(state, state.cha.s);\n            return R.assocPath(['cha','s','r'], direction, state);\n          }\n        }\n        return state;\n      }\n      function modelRenderCharge({ base,\n                                   charge_target,\n                                   radius },\n                                 path, state) {\n        const charge_target_ = {};\n        if(modelModel.isCharging({state})) {\n          path.show = true;\n\n          const charge_dir = state.cha.s.r;\n          const charge_middle = pointModel\n                  .translateInDirection(400, charge_dir, state.cha.s);\n          path.x = charge_middle.x - radius;\n          path.y = charge_middle.y - 400;\n          path.transform = `rotate(${charge_dir},${charge_middle.x},${charge_middle.y})`;\n\n          const charge_length = pointModel.distanceTo(state, state.cha.s);\n          let charge_text = `${Math.round(charge_length*10)/100}\"`;\n          const charge_max_dist = modelModel.chargeMaxLength({state});\n          if(R.exists(charge_max_dist)) {\n            charge_text += `/${charge_max_dist}\"`;\n          }\n          const charge_options = {\n            rotate: 0,\n            flip_center: state.cha.s,\n            text_center: state.cha.s\n          };\n          const charge_label = base\n                  .renderText(charge_options, charge_text);\n          charge_label.show = true;\n          path.length = charge_label;\n\n          if(charge_target) {\n            charge_target_.show = true;\n            charge_target_.cx = charge_target.state.x;\n            charge_target_.cy = charge_target.state.y;\n            charge_target_.radius = charge_target.info.base_radius;\n\n            let melee_range = 0;\n            if(modelModel.isMeleeDisplayed('mm', {state})) {\n              melee_range = 5;\n            }\n            if(modelModel.isMeleeDisplayed('mr', {state})) {\n              melee_range = 20;\n            }\n            if(modelModel.isMeleeDisplayed('ms', {state})) {\n              melee_range = 40;\n            }\n            const distance_to_target = pointModel\n                    .distanceTo(charge_target.state, state);\n            charge_target_.reached = distance_to_target <=\n              melee_range + radius + charge_target.info.base_radius;\n          }\n        }\n        return { charge_target: charge_target_ };\n      }\n    };\n  }\n})();\n"]}