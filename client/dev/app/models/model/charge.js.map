{"version":3,"sources":["charge.es6"],"names":[],"mappings":"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","file":"charge.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelCharge', modelChargeModelFactory);\n\n  modelChargeModelFactory.$inject = [\n    'point',\n  ];\n  function modelChargeModelFactory(pointModel) {\n    const CHARGE_EPSILON = 0.1;\n    return (MOVES, modelModel) => {\n      const modelChargeModel = {\n        startChargeP: modelStartChargeP,\n        isCharging: modelIsCharging,\n        chargeTargetP: modelChargeTargetP,\n        endCharge: modelEndCharge,\n        setChargeTargetP: modelSetChargeTargetP,\n        chargeMaxLength: modelChargeMaxLength,\n        setChargeMaxLengthP: modelSetChargeMaxLengthP,\n        moveFrontChargeP: modelMoveFrontChargeP,\n        moveBackChargeP: modelMoveBackChargeP,\n        rotateLeftChargeP: modelRotateLeftChargeP,\n        rotateRightChargeP: modelRotateRightChargeP,\n        shiftLeftChargeP: modelShiftLeftChargeP,\n        shiftRightChargeP: modelShiftRightChargeP,\n        shiftUpChargeP: modelShiftUpChargeP,\n        shiftDownChargeP: modelShiftDownChargeP\n      };\n      const ensureChargeLength$ = R.curry(ensureChargeLength);\n      modelModel.state_checkers = R.append(ensureChargeLength$, modelModel.state_checkers);\n      const ensureChargeOrientation$ = R.curry(ensureChargeOrientation);\n      modelModel.state_checkers = R.append(ensureChargeOrientation$, modelModel.state_checkers);\n      const updateChargeDirection$ = R.curry(updateChargeDirection);\n      modelModel.state_updaters = R.append(updateChargeDirection$, modelModel.state_updaters);\n\n      return modelChargeModel;\n\n      function modelStartChargeP(model) {\n        return R.threadP(model)(\n          R.rejectIf(modelModel.isLocked,\n                     'Model is locked'),\n          R.assocPath(['state','cha'], {\n            s: R.pick(['x','y','r'], model.state),\n            t: null\n          })\n        );\n      }\n      function modelIsCharging(model) {\n        return R.exists(model.state.cha);\n      }\n      function modelChargeTargetP(model) {\n        return new self.Promise((resolve, reject) => {\n          if(!modelModel.isCharging(model)) {\n            reject('Model is not charging');\n            return;\n          }\n          resolve(R.path(['state','cha','t'], model));\n        });\n      }\n      function modelEndCharge(model) {\n        return R.assocPath(['state','cha'], null, model);\n      }\n      function modelSetChargeTargetP(factions, other, model) {\n        return R.threadP(model)(\n          R.rejectIf(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            if(R.exists(other)) {\n              return R.thread(model)(\n                R.over(R.lensPath(['state','cha']),\n                       R.assoc('t', other.state.stamp)),\n                R.over(R.lensProp('state'),\n                       R.assoc('r', pointModel.directionTo(other.state, model.state)))\n              );\n            }\n            else {\n              return R.assocPath(['state','cha','t'], null, model);\n            }\n          },\n          modelModel.checkStateP$(factions, other)\n        );\n      }\n      function modelChargeMaxLength(model) {\n        return R.path(['state','cml'], model);\n      }\n      function modelSetChargeMaxLengthP(factions, value, model) {\n        model = R.assocPath(['state','cml'], value, model);\n        return modelModel.checkStateP(factions, null, model);\n      }\n      function modelMoveFrontChargeP(factions, target, small, model) {\n        return R.threadP(model)(\n          R.rejectIf(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const dist = MOVES[small ? 'MoveSmall' : 'Move'];\n            const direction = model.state.cha.s.r;\n            return R.over(R.lensProp('state'),\n                          pointModel.translateInDirection$(dist, direction),\n                          model);\n          },\n          modelModel.checkStateP$(factions, target)\n        );\n      }\n      function modelMoveBackChargeP(factions, target, small, model) {\n        return R.threadP(model)(\n          R.rejectIf(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            let dist = MOVES[small ? 'MoveSmall' : 'Move'];\n            const direction = model.state.cha.s.r+180;\n            const distance = pointModel.distanceTo(model.state, model.state.cha.s);\n            if(dist > distance) dist = distance;\n            return R.over(R.lensProp('state'),\n                          pointModel.translateInDirection$(dist, direction),\n                          model);\n          },\n          modelModel.checkStateP$(factions, target)\n        );\n      }\n      function modelRotateLeftChargeP(factions, target, small, model) {\n        return R.threadP(model)(\n          R.rejectIf(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const angle = MOVES[small ? 'RotateChargeSmall' : 'RotateCharge'];\n            return R.thread(model)(\n              R.over(R.lensProp('state'),\n                     pointModel.rotateLeftAround$(angle, model.state.cha.s)),\n              R.over(R.lensPath(['state','cha','s','r']),\n                     R.subtract(R.__, angle))\n            );\n          },\n          modelModel.checkStateP$(factions, target)\n        );\n      }\n      function modelRotateRightChargeP(factions, target, small, model) {\n        return R.threadP(model)(\n          R.rejectIf(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const angle = MOVES[small ? 'RotateChargeSmall' : 'RotateCharge'];\n            return R.thread(model)( \n              R.over(R.lensProp('state'),\n                     pointModel.rotateRightAround$(angle, model.state.cha.s)),\n              R.over(R.lensPath(['state','cha','s','r']), R.add(angle))\n            );\n          },\n          modelModel.checkStateP$(factions, target)\n        );\n      }\n      function modelShiftLeftChargeP(factions, target, small, model) {\n        return R.threadP(model)(\n          R.rejectIf(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(R.lensProp('state'),\n                          pointModel.shiftLeft$(dist),\n                          model);\n          },\n          modelModel.checkStateP$(factions, target)\n        );\n      }\n      function modelShiftRightChargeP(factions, target, small, model) {\n        return R.threadP(model)(\n          R.rejectIf(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(R.lensProp('state'),\n                          pointModel.shiftRight$(dist),\n                          model);\n          },\n          modelModel.checkStateP$(factions, target)\n        );\n      }\n      function modelShiftUpChargeP(factions, target, small, model) {\n        return R.threadP(model)(\n          R.rejectIf(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(R.lensProp('state'),\n                          pointModel.shiftUp$(dist),\n                          model);\n          },\n          modelModel.checkStateP$(factions, target)\n        );\n      }\n      function modelShiftDownChargeP(factions, target, small, model) {\n        return R.threadP(model)(\n          R.rejectIf(modelModel.isLocked,\n                     'Model is locked'),\n          (model) => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(R.lensProp('state'),\n                          pointModel.shiftDown$(dist),\n                          model);\n          },\n          modelModel.checkStateP$(factions, target)\n        );\n      }\n      function ensureChargeLength(info, target, state) {\n        if(R.exists(state.cha) &&\n           R.exists(state.cml) &&\n           state.cml > 0) {\n          const distance = pointModel.distanceTo(state, state.cha.s);\n          if(distance > state.cml*10) {\n            const direction = pointModel.directionTo(state, state.cha.s);\n            const position = pointModel.translateInDirection(state.cml*10, direction,\n                                                               state.cha.s);\n            return R.thread(state)(\n              R.assoc('x', position.x),\n              R.assoc('y', position.y)\n            );\n          }\n        }\n        return state;\n      }\n      function ensureChargeOrientation(info, target, state) {\n        if(R.exists(state.cha)) {\n          if(R.exists(target)) {\n            return R.assoc('r', pointModel.directionTo(target.state, state), state);\n          }\n          const distance = pointModel.distanceTo(state, state.cha.s);\n          const direction = CHARGE_EPSILON > distance\n                  ? state.r\n                  : pointModel.directionTo(state, state.cha.s);\n          return R.assoc('r', direction, state);\n        }\n        return state;\n      }\n      function updateChargeDirection(state) {\n        if(R.exists(state.cha)) {\n          const distance = pointModel.distanceTo(state, state.cha.s);\n          if(distance > CHARGE_EPSILON) {\n            const direction = pointModel.directionTo(state, state.cha.s);\n            return R.assocPath(['cha','s','r'], direction, state);\n          }\n        }\n        return state;\n      }\n    };\n  }\n})();\n"]}