{"version":3,"sources":["incorporeal.es6"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,kBADX,EAC+B,CAC3B,SAAS,8BAAT,GAA0C;AACxC,SAAO,UAAS,YAAT,EAAuB;AAC5B,QAAI,0BAA0B;AAC5B,8BAAwB,SAAS,2BAAT,CAAqC,KAArC,EAA4C;AAClE,eAAO,CAAC,CAAC,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,IAAT,CAAP,EAAuB,MAAM,KAAN,CAAY,GAAZ,CAAxB,CAD0D;OAA5C;AAGxB,6BAAuB,SAAS,0BAAT,CAAoC,GAApC,EAAyC,KAAzC,EAAgD;AACrE,YAAG,GAAH,EAAQ;AACN,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,OAAF,CAAU,EAAE,IAAF,EAAQ,EAAE,MAAF,CAAS,IAAT,CAAlB,CADP,EAEO,KAFP,CAAP,CADM;SAAR,MAKK;AACH,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,IAAT,CAAT,CADP,EAEO,KAFP,CAAP,CADG;SALL;OADqB;AAYvB,gCAA0B,SAAS,6BAAT,CAAuC,KAAvC,EAA8C;AACtE,YAAG,aAAa,sBAAb,CAAoC,KAApC,CAAH,EAA+C;AAC7C,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,IAAT,CAAT,CADP,EAEO,KAFP,CAAP,CAD6C;SAA/C,MAKK;AACH,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,IAAT,CADP,EAEO,KAFP,CAAP,CADG;SALL;OADwB;KAhBxB,CADwB;AA8B5B,WAAO,uBAAP,CA9B4B;GAAvB,CADiC;CAA1C,CAFJ","file":"incorporeal.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelIncorporeal', [\n    function modelIncorporealServiceFactory() {\n      return function(modelService) {\n        var modelIncorporealService = {\n          isIncorporealDisplayed: function modelIsIncorporealDisplayed(model) {\n            return !!R.find(R.equals('in'), model.state.dsp);\n          },\n          setIncorporealDisplay: function modelSetIncorporealDisplay(set, model) {\n            if(set) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.compose(R.uniq, R.append('in')),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals('in')),\n                            model);\n            }\n          },\n          toggleIncorporealDisplay: function modelToggleIncorporealDisplay(model) {\n            if(modelService.isIncorporealDisplayed(model)) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals('in')),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.append('in'),\n                            model);\n            }\n          }\n        };\n        return modelIncorporealService;\n      };\n    }\n  ]);\n"]}