{"version":3,"sources":["incorporeal.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,kBADX,EAC+B,4BAD/B,EADU;;AAIV,+BAA6B,OAA7B,GAAuC,EAAvC,CAJU;AAKV,WAAS,4BAAT,GAAwC;AACtC,WAAO,UAAC,UAAD,EAAgB;AACrB,UAAM,wBAAwB;AAC5B,gCAAwB,2BAAxB;AACA,+BAAuB,0BAAvB;AACA,kCAA0B,6BAA1B;OAHI,CADe;AAMrB,aAAO,qBAAP,CANqB;;AAQrB,eAAS,2BAAT,CAAqC,KAArC,EAA4C;AAC1C,eAAO,CAAC,CAAC,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,IAAT,CAAP,EAAuB,MAAM,KAAN,CAAY,GAAZ,CAAxB,CADkC;OAA5C;AAGA,eAAS,0BAAT,CAAoC,GAApC,EAAyC,KAAzC,EAAgD;AAC9C,YAAG,GAAH,EAAQ;AACN,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,OAAF,CAAU,EAAE,IAAF,EAAQ,EAAE,MAAF,CAAS,IAAT,CAAlB,CADP,EAEO,KAFP,CAAP,CADM;SAAR,MAKK;AACH,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,IAAT,CAAT,CADP,EAEO,KAFP,CAAP,CADG;SALL;OADF;AAYA,eAAS,6BAAT,CAAuC,KAAvC,EAA8C;AAC5C,YAAG,WAAW,sBAAX,CAAkC,KAAlC,CAAH,EAA6C;AAC3C,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,IAAT,CAAT,CADP,EAEO,KAFP,CAAP,CAD2C;SAA7C,MAKK;AACH,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,IAAT,CADP,EAEO,KAFP,CAAP,CADG;SALL;OADF;KAvBK,CAD+B;GAAxC;CALD,CAAD","file":"incorporeal.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelIncorporeal', modelIncorporealModelFactory);\n\n  modelIncorporealModelFactory.$inject = [];\n  function modelIncorporealModelFactory() {\n    return (modelModel) => {\n      const modelIncorporealModel = {\n        isIncorporealDisplayed: modelIsIncorporealDisplayed,\n        setIncorporealDisplay: modelSetIncorporealDisplay,\n        toggleIncorporealDisplay: modelToggleIncorporealDisplay\n      };\n      return modelIncorporealModel;\n\n      function modelIsIncorporealDisplayed(model) {\n        return !!R.find(R.equals('in'), model.state.dsp);\n      }\n      function modelSetIncorporealDisplay(set, model) {\n        if(set) {\n          return R.over(R.lensPath(['state','dsp']),\n                        R.compose(R.uniq, R.append('in')),\n                        model);\n        }\n        else {\n          return R.over(R.lensPath(['state','dsp']),\n                        R.reject(R.equals('in')),\n                        model);\n        }\n      }\n      function modelToggleIncorporealDisplay(model) {\n        if(modelModel.isIncorporealDisplayed(model)) {\n          return R.over(R.lensPath(['state','dsp']),\n                        R.reject(R.equals('in')),\n                        model);\n        }\n        else {\n          return R.over(R.lensPath(['state','dsp']),\n                        R.append('in'),\n                        model);\n        }\n      }\n    };\n  }\n})();\n"]}