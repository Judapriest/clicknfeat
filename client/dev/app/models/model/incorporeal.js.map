{"version":3,"sources":["incorporeal.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,kBADX,EAC+B,4BAD/B,EADU;;AAIV,+BAA6B,OAA7B,GAAuC,EAAvC,CAJU;AAKV,WAAS,4BAAT,GAAwC;AACtC,QAAM,WAAW,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAX,CADgC;AAEtC,WAAO,UAAC,UAAD,EAAgB;AACrB,UAAM,wBAAwB;AAC5B,gCAAwB,2BAAxB;AACA,+BAAuB,0BAAvB;AACA,kCAA0B,6BAA1B;OAHI,CADe;AAMrB,aAAO,qBAAP,CANqB;;AAQrB,eAAS,2BAAT,CAAqC,KAArC,EAA4C;AAC1C,eAAO,CAAC,CAAC,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,IAAT,CAAP,EAAuB,EAAE,MAAF,CAAS,EAAT,EAAa,QAAb,EAAuB,KAAvB,CAAvB,CAAD,CADkC;OAA5C;AAGA,eAAS,0BAAT,CAAoC,GAApC,EAAyC,KAAzC,EAAgD;AAC9C,YAAM,SAAW,MACE,EAAE,OAAF,CAAU,EAAE,IAAF,EAAQ,EAAE,MAAF,CAAS,IAAT,CAAlB,CADF,GAEE,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,IAAT,CAAT,CAFF,CAD6B;AAK9C,eAAO,EAAE,IAAF,CAAO,QAAP,EAAiB,MAAjB,EAAyB,KAAzB,CAAP,CAL8C;OAAhD;AAOA,eAAS,6BAAT,CAAuC,KAAvC,EAA8C;AAC5C,YAAM,SAAW,WAAW,sBAAX,CAAkC,KAAlC,IACE,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,IAAT,CAAT,CADF,GAEE,EAAE,MAAF,CAAS,IAAT,CAFF,CAD2B;AAK5C,eAAO,EAAE,IAAF,CAAO,QAAP,EAAiB,MAAjB,EAAyB,KAAzB,CAAP,CAL4C;OAA9C;KAlBK,CAF+B;GAAxC;CALD,CAAD","file":"incorporeal.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelIncorporeal', modelIncorporealModelFactory);\n\n  modelIncorporealModelFactory.$inject = [];\n  function modelIncorporealModelFactory() {\n    const DSP_LENS = R.lensPath(['state','dsp']);\n    return (modelModel) => {\n      const modelIncorporealModel = {\n        isIncorporealDisplayed: modelIsIncorporealDisplayed,\n        setIncorporealDisplay: modelSetIncorporealDisplay,\n        toggleIncorporealDisplay: modelToggleIncorporealDisplay\n      };\n      return modelIncorporealModel;\n\n      function modelIsIncorporealDisplayed(model) {\n        return !!R.find(R.equals('in'), R.viewOr([], DSP_LENS, model));\n      }\n      function modelSetIncorporealDisplay(set, model) {\n        const update = ( set\n                         ? R.compose(R.uniq, R.append('in'))\n                         : R.reject(R.equals('in'))\n                       );\n        return R.over(DSP_LENS, update, model);\n      }\n      function modelToggleIncorporealDisplay(model) {\n        const update = ( modelModel.isIncorporealDisplayed(model)\n                         ? R.reject(R.equals('in'))\n                         : R.append('in')\n                       );\n        return R.over(DSP_LENS, update, model);\n      }\n    };\n  }\n})();\n"]}