{"version":3,"sources":["place.es6"],"names":[],"mappings":"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","file":"place.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelPlace', modelPlaceModelFactory);\n\n  modelPlaceModelFactory.$inject = [\n    'point',\n  ];\n  function modelPlaceModelFactory(pointModel) {\n    const PLACE_EPSILON = 0.1;\n    const STATE_LENS = R.lensProp('state');\n    const PLACE_LENS = R.lensPath(['state', 'pla']);\n    const PLACE_MAX_LENGTH_LENS = R.lensPath(['state', 'pml']);\n    return (MOVES, modelModel) => {\n      const modelPlaceModel = {\n        startPlaceP: modelStartPlaceP,\n        isPlacing: modelIsPlacing,\n        endPlace: modelEndPlace,\n        setPlaceOriginP: modelSetPlaceOriginP,\n        setPlaceTargetP: modelSetPlaceTargetP,\n        placeMaxLength: modelPlaceMaxLength,\n        setPlaceMaxLengthP: modelSetPlaceMaxLength,\n        placeWithin: modelPlaceWithin,\n        setPlaceWithinP: modelSetPlaceWithin,\n        moveFrontPlaceP: modelMoveFrontPlaceP,\n        moveBackPlaceP: modelMoveBackPlaceP,\n        rotateLeftPlaceP: modelRotateLeftPlaceP,\n        rotateRightPlaceP: modelRotateRightPlaceP,\n        shiftLeftPlaceP: modelShiftLeftPlaceP,\n        shiftRightPlaceP: modelShiftRightPlaceP,\n        shiftUpPlaceP: modelShiftUpPlaceP,\n        shiftDownPlaceP: modelShiftDownPlaceP,\n        renderPlace: modelRenderPlace\n      };\n      const ensurePlaceLength$ = R.curry(ensurePlaceLength);\n      modelModel.state_checkers = R.append(ensurePlaceLength$, modelModel.state_checkers);\n      const updatePlaceDirection$ = R.curry(updatePlaceDirection);\n      modelModel.state_updaters = R.append(updatePlaceDirection$, modelModel.state_updaters);\n      return modelPlaceModel;\n\n      function modelStartPlaceP(model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          R.set(PLACE_LENS, { s: R.pick(['x','y','r'], model.state) })\n        );\n      }\n      function modelIsPlacing(model) {\n        return R.exists(R.view(PLACE_LENS, model));\n      }\n      function modelEndPlace(model) {\n        return R.set(PLACE_LENS, null, model);\n      }\n      function modelSetPlaceOriginP(other, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const direction = pointModel\n                    .directionTo(model.state.pla.s, other.state);\n            return R.thread(model)(\n              R.over(STATE_LENS,\n                     pointModel.rotateAroundTo$(direction, model.state.pla.s)),\n              R.assocPath(['state','pla','s','r'], direction)\n            );\n          },\n          modelModel.checkState$(null)\n        );\n      }\n      function modelSetPlaceTargetP(other, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const direction = pointModel\n                    .directionTo(other.state, model.state.pla.s);\n            return R.thread(model)(\n              R.over(STATE_LENS,\n                     pointModel.rotateAroundTo$(direction, model.state.pla.s)),\n              R.assocPath(['state','pla','s','r'], direction)\n            );\n          },\n          modelModel.checkState$(null)\n        );\n      }\n      function modelPlaceMaxLength(model) {\n        return R.head(R.view(PLACE_MAX_LENGTH_LENS, model));\n      }\n      function modelSetPlaceMaxLength(value, model) {\n        model = R.set(PLACE_MAX_LENGTH_LENS, [\n          value, R.viewOr([], PLACE_MAX_LENGTH_LENS, model)[1]\n        ], model);\n        return modelModel.checkState(null, model);\n      }\n      function modelPlaceWithin(model) {\n        return R.nth(1, R.viewOr([], PLACE_MAX_LENGTH_LENS, model));\n      }\n      function modelSetPlaceWithin(value, model) {\n        model = R.set(PLACE_MAX_LENGTH_LENS, [\n          R.viewOr([], PLACE_MAX_LENGTH_LENS, model)[0], value\n        ], model);\n        return modelModel.checkState(null, model);\n      }\n      function modelMoveFrontPlaceP(small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const dist = MOVES[small ? 'MoveSmall' : 'Move'];\n            const direction = model.state.pla.s.r;\n            return R.over(STATE_LENS,\n                          pointModel.translateInDirection$(dist, direction),\n                          model);\n          },\n          modelModel.checkState$(null)\n        );\n      }\n      function modelMoveBackPlaceP(small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            let dist = MOVES[small ? 'MoveSmall' : 'Move'];\n            const direction = model.state.pla.s.r+180;\n            const distance = pointModel\n                    .distanceTo(model.state, model.state.pla.s);\n            if(dist > distance) dist = distance;\n            return R.over(STATE_LENS,\n                          pointModel.translateInDirection$(dist, direction),\n                          model);\n          },\n          modelModel.checkState$(null)\n        );\n      }\n      function modelRotateLeftPlaceP(small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const angle = MOVES[small ? 'RotateChargeSmall' : 'RotateCharge'];\n            return R.thread(model)(\n              R.over(STATE_LENS,\n                     pointModel.rotateLeftAround$(angle, model.state.pla.s)),\n              R.over(R.lensPath(['state','pla','s','r']), R.subtract(R.__, angle))\n            );\n          },\n          modelModel.checkState$(null)\n        );\n      }\n      function modelRotateRightPlaceP(small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const angle = MOVES[small ? 'RotateChargeSmall' : 'RotateCharge'];\n            return R.thread(model)(\n              R.over(STATE_LENS,\n                     pointModel.rotateRightAround$(angle, model.state.pla.s)),\n              R.over(R.lensPath(['state', 'pla','s','r']), R.add(angle))\n            );\n          },\n          modelModel.checkState$(null)\n        );\n      }\n      function modelShiftLeftPlaceP(small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(STATE_LENS,\n                          pointModel.shiftLeft$(dist),\n                          model);\n          },\n          modelModel.checkState$(null)\n        );\n      }\n      function modelShiftRightPlaceP(small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(STATE_LENS,\n                          pointModel.shiftRight$(dist),\n                          model);\n          },\n          modelModel.checkState$(null)\n        );\n      }\n      function modelShiftUpPlaceP(small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(STATE_LENS,\n                          pointModel.shiftUp$(dist),\n                          model);\n          },\n          modelModel.checkState$(null)\n        );\n      }\n      function modelShiftDownPlaceP(small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(STATE_LENS,\n                          pointModel.shiftDown$(dist),\n                          model);\n          },\n          modelModel.checkState$(null)\n        );\n      }\n      function ensurePlaceLength(_target_, info, state) {\n        if(R.exists(state.pla) &&\n           R.exists(state.pml) &&\n           state.pml[0] > 0) {\n          const distance = pointModel.distanceTo(state, state.pla.s);\n          const max_dist = state.pml[0] * 10 + ( state.pml[1]\n                                                 ? info.base_radius * 2\n                                                 : 0\n                                               );\n          if(distance > max_dist) {\n            const direction = pointModel\n                    .directionTo(state, state.pla.s);\n            const position = pointModel\n                    .translateInDirection(max_dist, direction,\n                                          state.pla.s);\n            return R.thread(state)(\n              R.assoc('x', position.x),\n              R.assoc('y', position.y)\n            );\n          }\n        }\n        return state;\n      }\n      function updatePlaceDirection(state) {\n        if(R.exists(state.pla)) {\n          const distance = pointModel.distanceTo(state, state.pla.s);\n          if(distance > PLACE_EPSILON) {\n            const direction = pointModel.directionTo(state, state.pla.s);\n            return R.assocPath(['pla','s','r'], direction, state);\n          }\n        }\n        return state;\n      }\n      function modelRenderPlace({ base,\n                                  info,\n                                  path }, state) {\n        if(modelModel.isPlacing({state})) {\n          path.show = true;\n\n          const place_dir = state.pla.s.r;\n          const place_middle = pointModel\n                  .translateInDirection(400, place_dir, state.pla.s);\n          path.x = place_middle.x - info.base_radius;\n          path.y = place_middle.y - 400;\n          path.transform = `rotate(${place_dir},${place_middle.x},${place_middle.y})`;\n\n          const place_length = pointModel.distanceTo(state, state.pla.s);\n          let place_text = `${Math.round(place_length*10)/100}\"`;\n          const within = modelModel.placeWithin({state});\n          const place_max_dist = modelModel.placeMaxLength({state});\n          if(R.exists(place_max_dist)) {\n            place_text += `/${within ? 'w.' : ''}${place_max_dist}\"`;\n          }\n          const place_options = {\n            rotate: 0,\n            flip_center: state.pla.s,\n            text_center: state.pla.s\n          };\n          const place_label = base\n                  .renderText(place_options, place_text);\n          place_label.show = true;\n          path.length = place_label;\n        }\n        return {};\n      }\n    };\n  }\n})();\n"]}