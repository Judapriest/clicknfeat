{"version":3,"sources":["place.es6"],"names":[],"mappings":"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","file":"place.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelPlace', modelPlaceModelFactory);\n\n  modelPlaceModelFactory.$inject = [\n    'point',\n  ];\n  function modelPlaceModelFactory(pointModel) {\n    const PLACE_EPSILON = 0.1;\n    return (MOVES, modelModel) => {\n      const modelPlaceModel = {\n        startPlaceP: modelStartPlaceP,\n        isPlacing: modelIsPlacing,\n        endPlace: modelEndPlace,\n        setPlaceOriginP: modelSetPlaceOriginP,\n        setPlaceTargetP: modelSetPlaceTargetP,\n        placeMaxLength: modelPlaceMaxLength,\n        setPlaceMaxLengthP: modelSetPlaceMaxLengthP,\n        placeWithin: modelPlaceWithin,\n        setPlaceWithinP: modelSetPlaceWithinP,\n        moveFrontPlaceP: modelMoveFrontPlaceP,\n        moveBackPlaceP: modelMoveBackPlaceP,\n        rotateLeftPlaceP: modelRotateLeftPlaceP,\n        rotateRightPlaceP: modelRotateRightPlaceP,\n        shiftLeftPlaceP: modelShiftLeftPlaceP,\n        shiftRightPlaceP: modelShiftRightPlaceP,\n        shiftUpPlaceP: modelShiftUpPlaceP,\n        shiftDownPlaceP: modelShiftDownPlaceP\n      };\n      const ensurePlaceLength$ = R.curry(ensurePlaceLength);\n      modelModel.state_checkers = R.append(ensurePlaceLength$, modelModel.state_checkers);\n      const updatePlaceDirection$ = R.curry(updatePlaceDirection);\n      modelModel.state_updaters = R.append(updatePlaceDirection$, modelModel.state_updaters);\n      return modelPlaceModel;\n\n      function modelStartPlaceP(model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          R.assocPath(['state','pla'],\n                      { s: R.pick(['x','y','r'], model.state) })\n        );\n      }\n      function modelIsPlacing(model) {\n        return R.exists(model.state.pla);\n      }\n      function modelEndPlace(model) {\n        return R.assocPath(['state','pla'], null, model);\n      }\n      function modelSetPlaceOriginP(factions, other, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const direction = pointModel\n                    .directionTo(model.state.pla.s, other.state);\n            return R.thread(model)(\n              R.over(R.lensProp('state'),\n                     pointModel.rotateAroundTo$(direction, model.state.pla.s)),\n              R.assocPath(['state','pla','s','r'], direction)\n            );\n          },\n          modelModel.checkStateP$(factions, null)\n        );\n      }\n      function modelSetPlaceTargetP(factions, other, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const direction = pointModel\n                    .directionTo(other.state, model.state.pla.s);\n            return R.thread(model)(\n              R.over(R.lensProp('state'),\n                     pointModel.rotateAroundTo$(direction, model.state.pla.s)),\n              R.assocPath(['state','pla','s','r'], direction)\n            );\n          },\n          modelModel.checkStateP$(factions, null)\n        );\n      }\n      function modelPlaceMaxLength(model) {\n        return R.head(R.path(['state','pml'], model));\n      }\n      function modelSetPlaceMaxLengthP(factions, value, model) {\n        model = R.assocPath(['state','pml'], [ value, model.state.pml[1] ], model);\n        return modelModel.checkStateP(factions, null, model);\n      }\n      function modelPlaceWithin(model) {\n        return R.nth(1, R.pathOr([], ['state','pml'], model));\n      }\n      function modelSetPlaceWithinP(factions, value, model) {\n        model = R.assocPath(['state','pml'], [ model.state.pml[0], value ], model);\n        return modelModel.checkStateP(factions, null, model);\n      }\n      function modelMoveFrontPlaceP(factions, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const dist = MOVES[small ? 'MoveSmall' : 'Move'];\n            const direction = model.state.pla.s.r;\n            return R.over(R.lensProp('state'),\n                          pointModel.translateInDirection$(dist, direction),\n                          model);\n          },\n          modelModel.checkStateP$(factions, null)\n        );\n      }\n      function modelMoveBackPlaceP(factions, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            let dist = MOVES[small ? 'MoveSmall' : 'Move'];\n            const direction = model.state.pla.s.r+180;\n            const distance = pointModel\n                    .distanceTo(model.state, model.state.pla.s);\n            if(dist > distance) dist = distance;\n            return R.over(R.lensProp('state'),\n                          pointModel.translateInDirection$(dist, direction),\n                          model);\n          },\n          modelModel.checkStateP$(factions, null)\n        );\n      }\n      function modelRotateLeftPlaceP(factions, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const angle = MOVES[small ? 'RotateChargeSmall' : 'RotateCharge'];\n            return R.thread(model)(\n              R.over(R.lensProp('state'),\n                     pointModel.rotateLeftAround$(angle, model.state.pla.s)),\n              R.over(R.lensPath(['state','pla','s','r']), R.subtract(R.__, angle))\n            );\n          },\n          modelModel.checkStateP$(factions, null)\n        );\n      }\n      function modelRotateRightPlaceP(factions, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const angle = MOVES[small ? 'RotateChargeSmall' : 'RotateCharge'];\n            return R.thread(model)(\n              R.over(R.lensProp('state'),\n                     pointModel.rotateRightAround$(angle, model.state.pla.s)),\n              R.over(R.lensPath(['state', 'pla','s','r']), R.add(angle))\n            );\n          },\n          modelModel.checkStateP$(factions, null)\n        );\n      }\n      function modelShiftLeftPlaceP(factions, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(R.lensProp('state'),\n                          pointModel.shiftLeft$(dist),\n                          model);\n          },\n          modelModel.checkStateP$(factions, null)\n        );\n      }\n      function modelShiftRightPlaceP(factions, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(R.lensProp('state'),\n                          pointModel.shiftRight$(dist),\n                          model);\n          },\n          modelModel.checkStateP$(factions, null)\n        );\n      }\n      function modelShiftUpPlaceP(factions, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(R.lensProp('state'),\n                          pointModel.shiftUp$(dist),\n                          model);\n          },\n          modelModel.checkStateP$(factions, null)\n        );\n      }\n      function modelShiftDownPlaceP(factions, small, model) {\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                     'Model is locked'),\n          () => {\n            const dist = MOVES[small ? 'ShiftSmall' : 'Shift'];\n            return R.over(R.lensProp('state'),\n                          pointModel.shiftDown$(dist),\n                          model);\n          },\n          modelModel.checkStateP$(factions, null)\n        );\n      }\n      function ensurePlaceLength(info, _target_, state) {\n        if(R.exists(state.pla) &&\n           R.exists(state.pml) &&\n           state.pml[0] > 0) {\n          const distance = pointModel.distanceTo(state, state.pla.s);\n          const max_dist = state.pml[0] * 10 + (state.pml[1] ? info.base_radius * 2 : 0);\n          if(distance > max_dist) {\n            const direction = pointModel.directionTo(state, state.pla.s);\n            const position = pointModel.translateInDirection(max_dist, direction,\n                                                             state.pla.s);\n            return R.thread(state)(\n              R.assoc('x', position.x),\n              R.assoc('y', position.y)\n            );\n          }\n        }\n        return state;\n      }\n      function updatePlaceDirection(state) {\n        if(R.exists(state.pla)) {\n          const distance = pointModel.distanceTo(state, state.pla.s);\n          if(distance > PLACE_EPSILON) {\n            const direction = pointModel.directionTo(state, state.pla.s);\n            return R.assocPath(['pla','s','r'], direction, state);\n          }\n        }\n        return state;\n      }\n    };\n  }\n})();\n"]}