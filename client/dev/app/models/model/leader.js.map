{"version":3,"sources":["leader.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,aADX,EAC0B,uBAD1B,EADU;;AAIV,0BAAwB,OAAxB,GAAkC,EAAlC,CAJU;AAKV,WAAS,uBAAT,GAAmC;AACjC,QAAM,WAAW,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAX,CAD2B;AAEjC,WAAO,UAAC,UAAD,EAAgB;AACrB,UAAM,mBAAmB;AACvB,2BAAmB,sBAAnB;AACA,0BAAkB,qBAAlB;AACA,6BAAqB,wBAArB;AACA,sBAAc,iBAAd;OAJI,CADe;AAOrB,aAAO,gBAAP,CAPqB;;AASrB,eAAS,sBAAT,CAAgC,KAAhC,EAAuC;AACrC,eAAO,CAAC,CAAC,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,GAAT,CAAP,EAAsB,EAAE,MAAF,CAAS,EAAT,EAAa,QAAb,EAAuB,KAAvB,CAAtB,CAAD,CAD6B;OAAvC;AAGA,eAAS,qBAAT,CAA+B,GAA/B,EAAoC,KAApC,EAA2C;AACzC,YAAM,SAAW,MACE,EAAE,OAAF,CAAU,EAAE,IAAF,EAAQ,EAAE,MAAF,CAAS,GAAT,CAAlB,CADF,GAEE,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,GAAT,CAAT,CAFF,CADwB;AAKzC,eAAO,EAAE,IAAF,CAAO,QAAP,EAAiB,MAAjB,EAAyB,KAAzB,CAAP,CALyC;OAA3C;AAOA,eAAS,wBAAT,CAAkC,KAAlC,EAAyC;AACvC,YAAM,SAAW,WAAW,iBAAX,CAA6B,KAA7B,IACE,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,GAAT,CAAT,CADF,GAEE,EAAE,MAAF,CAAS,GAAT,CAFF,CADsB;AAKvC,eAAO,EAAE,IAAF,CAAO,QAAP,EAAiB,MAAjB,EAAyB,KAAzB,CAAP,CALuC;OAAzC;AAOA,eAAS,iBAAT,OACuC,KADvC,EAC8C;YADjB,aACiB;YADb,aACa;YAAjB,qBAAiB;;AAC5C,YAAM,UAAU;AACd,aAAG;AACD,kBAAM,WAAW,iBAAX,CAA6B,EAAC,YAAD,EAA7B,CAAN;AACA,kBAAM,wBAAN;AACA,eAAG,KAAK,SAAS,GAAT,GAAe,CAApB;AACH,eAAG,KAAK,SAAS,GAAT,GAAe,CAApB;WAJL;SADI,CADsC;AAS5C,eAAO,EAAE,gBAAF,EAAP,CAT4C;OAD9C;KA1BK,CAF0B;GAAnC;CALD,CAAD","file":"leader.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelLeader', modelLeaderModelFactory);\n\n  modelLeaderModelFactory.$inject = [];\n  function modelLeaderModelFactory() {\n    const DSP_LENS = R.lensPath(['state','dsp']);\n    return (modelModel) => {\n      const modelLeaderModel = {\n        isLeaderDisplayed: modelIsLeaderDisplayed,\n        setLeaderDisplay: modelSetLeaderDisplay,\n        toggleLeaderDisplay: modelToggleLeaderDisplay,\n        renderLeader: modelRenderLeader\n      };\n      return modelLeaderModel;\n\n      function modelIsLeaderDisplayed(model) {\n        return !!R.find(R.equals('l'), R.viewOr([], DSP_LENS, model));\n      }\n      function modelSetLeaderDisplay(set, model) {\n        const update = ( set\n                         ? R.compose(R.uniq, R.append('l'))\n                         : R.reject(R.equals('l'))\n                       );\n        return R.over(DSP_LENS, update, model);\n      }\n      function modelToggleLeaderDisplay(model) {\n        const update = ( modelModel.isLeaderDisplayed(model)\n                         ? R.reject(R.equals('l'))\n                         : R.append('l')\n                       );\n        return R.over(DSP_LENS, update, model);\n      }\n      function modelRenderLeader({ cx, cy,\n                                   radius }, state) {\n        const effects = {\n          l: {\n            show: modelModel.isLeaderDisplayed({state}),\n            link: '/data/icons/Leader.png',\n            x: cx - radius * 0.7 - 5,\n            y: cy - radius * 0.7 - 5\n          }\n        };\n        return { effects };\n      }\n    };\n  }\n})();\n"]}