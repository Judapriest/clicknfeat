{"version":3,"sources":["leader.es6"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,aADX,EAC0B,CACtB,SAAS,yBAAT,GAAqC;AACnC,SAAO,UAAS,YAAT,EAAuB;AAC5B,QAAI,qBAAqB;AACvB,yBAAmB,SAAS,sBAAT,CAAgC,KAAhC,EAAuC;AACxD,eAAO,CAAC,CAAC,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,GAAT,CAAP,EAAsB,MAAM,KAAN,CAAY,GAAZ,CAAvB,CADgD;OAAvC;AAGnB,wBAAkB,SAAS,qBAAT,CAA+B,GAA/B,EAAoC,KAApC,EAA2C;AAC3D,YAAG,GAAH,EAAQ;AACN,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,OAAF,CAAU,EAAE,IAAF,EAAQ,EAAE,MAAF,CAAS,GAAT,CAAlB,CADP,EAEO,KAFP,CAAP,CADM;SAAR,MAKK;AACH,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,GAAT,CAAT,CADP,EAEO,KAFP,CAAP,CADG;SALL;OADgB;AAYlB,2BAAqB,SAAS,wBAAT,CAAkC,KAAlC,EAAyC;AAC5D,YAAG,aAAa,iBAAb,CAA+B,KAA/B,CAAH,EAA0C;AACxC,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,GAAT,CAAT,CADP,EAEO,KAFP,CAAP,CADwC;SAA1C,MAKK;AACH,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,GAAT,CADP,EAEO,KAFP,CAAP,CADG;SALL;OADmB;KAhBnB,CADwB;AA8B5B,WAAO,kBAAP,CA9B4B;GAAvB,CAD4B;CAArC,CAFJ","file":"leader.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelLeader', [\n    function modelLeaderServiceFactory() {\n      return function(modelService) {\n        var modelLeaderService = {\n          isLeaderDisplayed: function modelIsLeaderDisplayed(model) {\n            return !!R.find(R.equals('l'), model.state.dsp);\n          },\n          setLeaderDisplay: function modelSetLeaderDisplay(set, model) {\n            if(set) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.compose(R.uniq, R.append('l')),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals('l')),\n                            model);\n            }\n          },\n          toggleLeaderDisplay: function modelToggleLeaderDisplay(model) {\n            if(modelService.isLeaderDisplayed(model)) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals('l')),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.append('l'),\n                            model);\n            }\n          }\n        };\n        return modelLeaderService;\n      };\n    }\n  ]);\n"]}