{"version":3,"sources":["melee.es6"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,YADX,EACyB,CACrB,SAAS,wBAAT,GAAoC;AAClC,SAAO,UAAS,YAAT,EAAuB;AAC5B,QAAI,oBAAoB;AACtB,wBAAkB,SAAS,qBAAT,CAA+B,KAA/B,EAAsC,KAAtC,EAA6C;AAC7D,eAAO,CAAC,CAAC,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,KAAT,CAAP,EAAwB,MAAM,KAAN,CAAY,GAAZ,CAAzB,CADqD;OAA7C;AAGlB,uBAAiB,SAAS,oBAAT,CAA8B,KAA9B,EAAqC,GAArC,EAA0C,KAA1C,EAAiD;AAChE,YAAG,GAAH,EAAQ;AACN,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,OAAF,CAAU,EAAE,IAAF,EAAQ,EAAE,MAAF,CAAS,KAAT,CAAlB,CADP,EAEO,KAFP,CAAP,CADM;SAAR,MAKK;AACH,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,KAAT,CAAT,CADP,EAEO,KAFP,CAAP,CADG;SALL;OADe;AAYjB,0BAAoB,SAAS,uBAAT,CAAiC,KAAjC,EAAwC,KAAxC,EAA+C;AACjE,YAAG,aAAa,gBAAb,CAA8B,KAA9B,EAAqC,KAArC,CAAH,EAAgD;AAC9C,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,KAAT,CAAT,CADP,EAEO,KAFP,CAAP,CAD8C;SAAhD,MAKK;AACH,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,KAAT,CADP,EAEO,KAFP,CAAP,CADG;SALL;OADkB;KAhBlB,CADwB;AA8B5B,WAAO,iBAAP,CA9B4B;GAAvB,CAD2B;CAApC,CAFJ","file":"melee.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelMelee', [\n    function modelMeleeServiceFactory() {\n      return function(modelService) {\n        var modelMeleeService = {\n          isMeleeDisplayed: function modelIsMeleeDisplayed(melee, model) {\n            return !!R.find(R.equals(melee), model.state.dsp);\n          },\n          setMeleeDisplay: function modelSetMeleeDisplay(melee, set, model) {\n            if(set) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.compose(R.uniq, R.append(melee)),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals(melee)),\n                            model);\n            }\n          },\n          toggleMeleeDisplay: function modelToggleMeleeDisplay(melee, model) {\n            if(modelService.isMeleeDisplayed(melee, model)) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals(melee)),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.append(melee),\n                            model);\n            }\n          }\n        };\n        return modelMeleeService;\n      };\n    }\n  ]);\n"]}