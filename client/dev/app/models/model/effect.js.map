{"version":3,"sources":["effect.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,aADX,EAC0B,yBAD1B,EADU;;AAIV,4BAA0B,OAA1B,GAAoC,EAApC,CAJU;AAKV,WAAS,yBAAT,GAAqC;AACnC,WAAO,UAAC,YAAD,EAAkB;AACvB,UAAM,qBAAqB;AACzB,2BAAmB,sBAAnB;AACA,0BAAkB,qBAAlB;AACA,6BAAqB,wBAArB;OAHI,CADiB;AAMvB,aAAO,kBAAP,CANuB;;AAQvB,eAAS,sBAAT,CAAgC,MAAhC,EAAwC,KAAxC,EAA+C;AAC7C,eAAO,CAAC,CAAC,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,MAAT,CAAP,EAAyB,EAAE,MAAF,CAAS,EAAT,EAAa,CAAC,OAAD,EAAS,KAAT,CAAb,EAA8B,KAA9B,CAAzB,CAAD,CADqC;OAA/C;AAGA,eAAS,qBAAT,CAA+B,MAA/B,EAAuC,GAAvC,EAA4C,KAA5C,EAAmD;AACjD,YAAG,GAAH,EAAQ;AACN,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,OAAF,CAAU,EAAE,IAAF,EAAQ,EAAE,MAAF,CAAS,MAAT,CAAlB,EAAoC,EAAE,SAAF,CAAY,EAAZ,CAApC,CADP,EAEO,KAFP,CAAP,CADM;SAAR,MAKK;AACH,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,OAAF,CAAU,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,MAAT,CAAT,CAAV,EAAsC,EAAE,SAAF,CAAY,EAAZ,CAAtC,CADP,EAEO,KAFP,CAAP,CADG;SALL;OADF;AAYA,eAAS,wBAAT,CAAkC,MAAlC,EAA0C,KAA1C,EAAiD;AAC/C,YAAG,aAAa,iBAAb,CAA+B,MAA/B,EAAuC,KAAvC,CAAH,EAAkD;AAChD,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,OAAF,CAAU,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,MAAT,CAAT,CAAV,EAAsC,EAAE,SAAF,CAAY,EAAZ,CAAtC,CADP,EAEO,KAFP,CAAP,CADgD;SAAlD,MAKK;AACH,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,OAAF,CAAU,EAAE,MAAF,CAAS,MAAT,CAAV,EAA4B,EAAE,SAAF,CAAY,EAAZ,CAA5B,CADP,EAEO,KAFP,CAAP,CADG;SALL;OADF;KAvBK,CAD4B;GAArC;CALD,CAAD","file":"effect.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelEffect', modelEffectServiceFactory);\n\n  modelEffectServiceFactory.$inject = [];\n  function modelEffectServiceFactory() {\n    return (modelService) => {\n      const modelEffectService = {\n        isEffectDisplayed: modelIsEffectDisplayed,\n        setEffectDisplay: modelSetEffectDisplay,\n        toggleEffectDisplay: modelToggleEffectDisplay\n      };\n      return modelEffectService;\n\n      function modelIsEffectDisplayed(effect, model) {\n        return !!R.find(R.equals(effect), R.pathOr([], ['state','eff'], model));\n      }\n      function modelSetEffectDisplay(effect, set, model) {\n        if(set) {\n          return R.over(R.lensPath(['state','eff']),\n                        R.compose(R.uniq, R.append(effect), R.defaultTo([])),\n                        model);\n        }\n        else {\n          return R.over(R.lensPath(['state','eff']),\n                        R.compose(R.reject(R.equals(effect)), R.defaultTo([])),\n                        model);\n        }\n      }\n      function modelToggleEffectDisplay(effect, model) {\n        if(modelService.isEffectDisplayed(effect, model)) {\n          return R.over(R.lensPath(['state','eff']),\n                        R.compose(R.reject(R.equals(effect)), R.defaultTo([])),\n                        model);\n        }\n        else {\n          return R.over(R.lensPath(['state','eff']),\n                        R.compose(R.append(effect), R.defaultTo([])),\n                        model);\n        }\n      }\n    };\n  }\n})();\n"]}