{"version":3,"sources":["aura.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,WADX,EACwB,qBADxB,EADU;;AAIV,wBAAsB,OAAtB,GAAgC,EAAhC,CAJU;AAKV,WAAS,qBAAT,GAAiC;AAC/B,QAAM,YAAY,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAZ,CADyB;AAE/B,WAAO,YAAM;AACX,UAAM,iBAAiB;AACrB,yBAAiB,oBAAjB;AACA,qBAAa,gBAAb;AACA,wBAAgB,mBAAhB;AACA,2BAAmB,sBAAnB;AACA,oBAAY,eAAZ;OALI,CADK;AAQX,aAAO,cAAP,CARW;;AAUX,eAAS,oBAAT,CAA8B,KAA9B,EAAqC;AACnC,eAAO,EAAE,MAAF,CAAS,EAAE,IAAF,CAAO,SAAP,EAAkB,KAAlB,CAAT,CAAP,CADmC;OAArC;AAGA,eAAS,gBAAT,CAA0B,KAA1B,EAAiC;AAC/B,eAAO,EAAE,IAAF,CAAO,SAAP,EAAkB,KAAlB,CAAP,CAD+B;OAAjC;AAGA,eAAS,mBAAT,CAA6B,IAA7B,EAAmC,KAAnC,EAA0C;AACxC,eAAO,EAAE,GAAF,CAAM,SAAN,EAAiB,IAAjB,EAAuB,KAAvB,CAAP,CADwC;OAA1C;AAGA,eAAS,sBAAT,CAAgC,IAAhC,EAAsC,KAAtC,EAA6C;AAC3C,eAAO,EAAE,IAAF,CACL,SADK,EAEL,UAAC,GAAD;iBAAU,IAAC,KAAS,GAAT,GAAgB,IAAjB,GAAwB,IAAxB;SAAV,EACA,KAHK,CAAP,CAD2C;OAA7C;AAOA,eAAS,eAAT,CAAyB,KAAzB,EAAgC;AAC9B,YAAM,OAAO;AACX,gBAAM,eAAe,eAAf,CAA+B,KAA/B,CAAN;AACA,kBAAQ,MAAM,IAAN,CAAW,WAAX,GAAyB,GAAzB;AACR,iBAAO,eAAe,WAAf,CAA2B,KAA3B,CAAP;SAHI,CADwB;AAM9B,eAAO,EAAE,UAAF,EAAP,CAN8B;OAAhC;KA1BK,CAFwB;GAAjC;CALD,CAAD","file":"aura.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelAura', modelAuraModelFactory);\n\n  modelAuraModelFactory.$inject = [];\n  function modelAuraModelFactory() {\n    const AURA_LENS = R.lensPath(['state','aur']);\n    return () => {\n      const modelAuraModel = {\n        isAuraDisplayed: modelIsAuraDisplayed,\n        auraDisplay: modelAuraDisplay,\n        setAuraDisplay: modelSetAuraDisplay,\n        toggleAuraDisplay: modelToggleAuraDisplay,\n        renderAura: modelRenderAura\n      };\n      return modelAuraModel;\n\n      function modelIsAuraDisplayed(model) {\n        return R.exists(R.view(AURA_LENS, model));\n      }\n      function modelAuraDisplay(model) {\n        return R.view(AURA_LENS, model);\n      }\n      function modelSetAuraDisplay(aura, model) {\n        return R.set(AURA_LENS, aura, model);\n      }\n      function modelToggleAuraDisplay(aura, model) {\n        return R.over(\n          AURA_LENS,\n          (aur) => ((aura === aur) ? null : aura),\n          model\n        );\n      }\n      function modelRenderAura(model) {\n        const aura = {\n          show: modelAuraModel.isAuraDisplayed(model),\n          radius: model.info.base_radius * 1.2,\n          color: modelAuraModel.auraDisplay(model)\n        };\n        return { aura };\n      }\n    };\n  }\n})();\n"]}