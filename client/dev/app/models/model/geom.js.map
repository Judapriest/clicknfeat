{"version":3,"sources":["geom.es6"],"names":[],"mappings":"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","file":"geom.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelGeom', modelGeomModelFactory);\n\n  modelGeomModelFactory.$inject = [\n    'point',\n  ];\n  function modelGeomModelFactory(pointModel) {\n    return (modelModel) => {\n      const modelGeomModel = {\n        isBetweenPoints: modelIsBetweenPoints,\n        shortestLineTo: modelShortestLineTo,\n        baseEdgeInDirection: modelBaseEdgeInDirection,\n        distanceTo: modelDistanceTo,\n        distanceToAoE: modelDistanceToAoE,\n        setB2BP: modelSetB2BP\n      };\n      return modelGeomModel;\n\n      function modelIsBetweenPoints(top_left, bottom_right, model) {\n        const x = R.path(['state','x'], model);\n        const y = R.path(['state','y'], model);\n        return ( top_left.x <= x && x <= bottom_right.x &&\n                 top_left.y <= y && y <= bottom_right.y\n               );\n      }\n      function modelShortestLineTo(other, model) {\n        const info = model.info;\n        const other_info = other.info;\n\n        const direction = pointModel.directionTo(other.state, model.state);\n        const start = pointModel.translateInDirection(info.base_radius,\n                                                      direction,\n                                                      model.state);\n        const end = pointModel.translateInDirection(other_info.base_radius,\n                                                    direction+180,\n                                                    other.state);\n        return { start: R.pick(['x','y'], start),\n                 end: R.pick(['x','y'], end)\n               };\n      }\n      function modelBaseEdgeInDirection(dir, model) {\n        const info = model.info;\n        return R.thread(model.state)(\n          pointModel.translateInDirection$(info.base_radius, dir),\n          R.pick(['x','y'])\n        );\n      }\n      function modelDistanceTo(other, model) {\n        const info = model.info;\n        const other_info = other.info;\n        return ( pointModel.distanceTo(other.state, model.state) -\n                 info.base_radius -\n                 other_info.base_radius\n               );\n      }\n      function modelDistanceToAoE(aoe, model) {\n        const info = model.info;\n        const aoe_size = aoe.state.s;\n        return ( pointModel.distanceTo(aoe.state, model.state) -\n                 info.base_radius -\n                 aoe_size\n               );\n      }\n      function modelSetB2BP(other, model) {\n        const info = model.info;\n        const other_info = other.info;\n        return R.threadP(model)(\n          R.rejectIfP(modelModel.isLocked,\n                      'Model is locked'),\n          (model) => {\n            const direction = pointModel.directionTo(model.state, other.state);\n            const distance = info.base_radius + other_info.base_radius;\n            const position = pointModel.translateInDirection(distance, direction,\n                                                             other.state);\n            return R.thread(model)(\n              R.assocPath(['state','x'], position.x),\n              R.assocPath(['state','y'], position.y),\n              modelModel.checkState$(null)\n            );\n          }\n        );\n      }\n    };\n  }\n})();\n"]}