{"version":3,"sources":["damage.es6"],"names":[],"mappings":"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","file":"damage.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelDamage', modelDamageModelFactory);\n\n  modelDamageModelFactory.$inject = [];\n  function modelDamageModelFactory() {\n    const DMG_LENS = R.lensPath(['state','dmg']);\n    const DMG_FIELD_LENS = R.lensPath(['state','dmg','f']);\n    return () => {\n      const modelDamageModel = {\n        resetDamage: modelResetDamage,\n        setWarriorDamage: modelSetWarriorDamage,\n        setFieldDamage: modelSetFieldDamage,\n        setGridDamage: modelSetGridDamage,\n        setGridColDamage: modelSetGridColDamage,\n        renderDamage: modelRenderDamage\n      };\n      return modelDamageModel;\n\n      function modelResetDamage(model) {\n        return R.over(DMG_LENS, R.pipe(\n          R.keys,\n          R.reduce(resetDamageEntry, {})\n        ), model);\n\n        function resetDamageEntry(mem, key) {\n          let value = model.state.dmg[key];\n          if('Array' === R.type(value)) {\n            value = R.map(R.always(0), value);\n          }\n          else {\n            value = 0;\n          }\n          return R.assoc(key, value, mem);\n        }\n      }\n      function modelSetWarriorDamage(i, model) {\n        const info = model.info;\n        let value = R.defaultTo(0, model.state.dmg.n);\n        value = (value === i) ? 0 : i;\n        value = Math.min(value, info.damage.n);\n        return R.over(DMG_LENS, R.pipe(\n          R.assoc('n', value),\n          R.assoc('t', value)\n        ), model);\n      }\n      function modelSetFieldDamage(i, model) {\n        const info = model.info;\n        let value = R.defaultTo(0, model.state.dmg.f);\n        value = (value === i) ? 0 : i;\n        value = Math.min(value, info.damage.field);\n        return R.set(DMG_FIELD_LENS, value, model);\n      }\n      function modelSetGridDamage(line, col, model) {\n        const info = model.info;\n        let value = model.state.dmg[col][line];\n        value = (value === 0) ? 1 : 0;\n        value = R.exists(info.damage[col][line]) ? value : 0;\n        return R.over(DMG_LENS, R.pipe(\n          R.over(R.lensProp(col), R.update(line, value)),\n          (dmg) => R.assoc('t', computeTotalGridDamage(dmg), dmg)\n        ), model);\n      }\n      function modelSetGridColDamage(col, model) {\n        const info = model.info;\n        const full = R.thread(model.state.dmg[col])(\n          R.addIndex(R.filter)((_val_, line) => R.exists(info.damage[col][line])),\n          R.reject(R.equals(1)),\n          R.isEmpty\n        );\n        const value = full ? 0 : 1;\n        return R.over(DMG_LENS, R.pipe(\n          R.over(R.lensProp(col),\n                 R.addIndex(R.map)((_val_, line) => {\n                   return R.exists(info.damage[col][line]) ? value : 0;\n                 })\n                ),\n          (dmg) => R.assoc('t', computeTotalGridDamage(dmg), dmg)\n        ), model);\n      }\n      function computeTotalGridDamage(damage) {\n        return R.thread(damage)(\n          R.keys,\n          R.reject(R.equals('t')),\n          R.reject(R.equals('f')),\n          R.reject(R.equals('n')),\n          R.reduce((mem, col) => {\n            return mem + R.reduce(R.add, 0, damage[col]);\n          }, 0)\n        );\n      }\n      function modelRenderDamage({ cx, cy }, model) {\n        const info = model.info;\n        const radius = info.base_radius;\n        const state_dmg = R.propOr({}, 'dmg', model.state);\n        const percent_damage = state_dmg.t / info.damage.total;\n        const damage_x = cx - radius + 2 * radius * percent_damage;\n        const dmg = {\n          show: !( info.damage.type === 'warrior' &&\n                   info.damage.n === 1),\n          lx: cx - radius,\n          ly: cy + radius + 2,\n          rx: cx + radius,\n          ry: cx + radius + 2,\n          x: damage_x\n        };\n        const percent_field = state_dmg.f / info.damage.field;\n        const field_x = cx - radius + 2 * radius * percent_field;\n        const field = {\n          show: R.exists(info.damage.field),\n          lx: dmg.lx,\n          ly: dmg.ly + 1,\n          rx: dmg.rx,\n          ry: dmg.ry + 1,\n          x: field_x\n        };\n        return { dmg, field };\n      }\n    };\n  }\n})();\n"]}