{"version":3,"sources":["area.es6"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,WADX,EACwB,CACpB,cADoB,EAEpB,SAAS,uBAAT,CAAiC,mBAAjC,EAAsD;AACpD,SAAO,YAAM;AACX,QAAI,mBAAmB;AACrB,2BAAqB,SAAS,wBAAT,CAAkC,QAAlC,EAA4C,KAA5C,EAAmD;AACtE,eAAO,EAAE,KAAF,CACL,oBAAoB,aAApB,CAAkC,MAAM,KAAN,CAAY,IAAZ,CAD7B,EAEL,UAAC,IAAD,EAAU;AACR,iBAAS,KAAK,IAAL,KAAc,SAAd,KACE,aAAa,EAAE,IAAF,CAAO,KAAK,KAAL,CAApB,IACA,aAAa,EAAE,IAAF,CAAO,KAAK,IAAL,CAApB,CAFF,IAIA,CAAC,CAAC,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,GAAT,CAAP,EAAsB,MAAM,KAAN,CAAY,GAAZ,CAAvB,CALF;SAAV,CAFK,CAUL,QAVK,CAAP,CADsE;OAAnD;AAarB,0BAAoB,SAAS,uBAAT,CAAiC,GAAjC,EAAsC,KAAtC,EAA6C;AAC/D,YAAG,GAAH,EAAQ;AACN,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,OAAF,CAAU,EAAE,IAAF,EAAQ,EAAE,MAAF,CAAS,GAAT,CAAlB,CADP,EAEO,KAFP,CAAP,CADM;SAAR,MAKK;AACH,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,GAAT,CAAT,CADP,EAEO,KAFP,CAAP,CADG;SALL;OADkB;AAYpB,6BAAuB,SAAS,0BAAT,CAAoC,KAApC,EAA2C;AAChE,YAAG,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,GAAT,CAAP,EAAsB,MAAM,KAAN,CAAY,GAAZ,CAAzB,EAA2C;AACzC,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,GAAT,CAAT,CADP,EAEO,KAFP,CAAP,CADyC;SAA3C,MAKK;AACH,iBAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,EAAE,MAAF,CAAS,GAAT,CADP,EAEO,KAFP,CAAP,CADG;SALL;OADqB;AAYvB,uBAAiB,SAAS,oBAAT,CAA8B,KAA9B,EAAqC;AACpD,eAAO,EAAE,MAAF,CAAS,MAAM,KAAN,CAAY,GAAZ,CAAhB,CADoD;OAArC;AAGjB,mBAAa,SAAS,gBAAT,CAA0B,KAA1B,EAAiC;AAC5C,eAAO,MAAM,KAAN,CAAY,GAAZ,CADqC;OAAjC;AAGb,sBAAgB,SAAS,mBAAT,CAA6B,IAA7B,EAAmC,KAAnC,EAA0C;AACxD,eAAO,EAAE,SAAF,CAAY,CAAC,OAAD,EAAS,KAAT,CAAZ,EAA6B,IAA7B,EAAmC,KAAnC,CAAP,CADwD;OAA1C;AAGhB,yBAAmB,SAAS,sBAAT,CAAgC,IAAhC,EAAsC,KAAtC,EAA6C;AAC9D,eAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,OAAD,EAAS,KAAT,CAAX,CAAP,EACO,UAAC,GAAD,EAAS;AAAE,iBAAO,IAAC,KAAS,GAAT,GAAgB,IAAjB,GAAwB,IAAxB,CAAT;SAAT,EACA,KAFP,CAAP,CAD8D;OAA7C;KA/CjB,CADO;AAsDX,WAAO,gBAAP,CAtDW;GAAN,CAD6C;CAAtD,CAHJ","file":"area.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelArea', [\n    'gameFactions',\n    function modelAreaServiceFactory(gameFactionsService) {\n      return () => {\n        var modelAreaService = {\n          isCtrlAreaDisplayed: function modelIsCtrlAreaDisplayed(factions, model) {\n            return R.pipeP(\n              gameFactionsService.getModelInfo$(model.state.info),\n              (info) => {\n                return ( info.type === 'wardude' &&\n                         ( 'Number' === R.type(info.focus) ||\n                           'Number' === R.type(info.fury)\n                         ) &&\n                         !!R.find(R.equals('a'), model.state.dsp)\n                       );\n              }\n            )(factions);\n          },\n          setCtrlAreaDisplay: function modelSetCtrlAreaDisplay(set, model) {\n            if(set) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.compose(R.uniq, R.append('a')),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals('a')),\n                            model);\n            }\n          },\n          toggleCtrlAreaDisplay: function modelToggleCtrlAreaDisplay(model) {\n            if(R.find(R.equals('a'), model.state.dsp)) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals('a')),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.append('a'),\n                            model);\n            }\n          },\n          isAreaDisplayed: function modelIsAreaDisplayed(model) {\n            return R.exists(model.state.are);\n          },\n          areaDisplay: function modelAreaDisplay(model) {\n            return model.state.are;\n          },\n          setAreaDisplay: function modelSetAreaDisplay(area, model) {\n            return R.assocPath(['state','are'], area, model);\n          },\n          toggleAreaDisplay: function modelToggleAreaDisplay(area, model) {\n            return R.over(R.lensPath(['state','are']),\n                          (are) => { return (area === are) ? null : area; },\n                          model);\n          }\n        };\n        return modelAreaService;\n      };\n    }\n  ]);\n"]}