{"version":3,"sources":["charge.es6"],"names":[],"mappings":"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","file":"charge.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelChargeMode', modelChargeModeModelFactory);\n\n  modelChargeModeModelFactory.$inject = [\n    'appAction',\n    'appState',\n    'modes',\n    'settings',\n    'modelsMode',\n    'modelBaseMode',\n    'model',\n    'gameModels',\n    'gameModelSelection',\n  ];\n  function modelChargeModeModelFactory(appActionService,\n                                       appStateService,\n                                       modesModel,\n                                       settingsModel,\n                                       modelsModeModel,\n                                       modelBaseModeModel,\n                                       modelModel,\n                                       gameModelsModel,\n                                       gameModelSelectionModel) {\n    const charge_actions = Object.create(modelBaseModeModel.actions);\n    charge_actions.endCharge = chargeModelEnd;\n    charge_actions.setTargetModel = chargeModelSetTarget;\n    const moves = [\n      ['moveFront'   , 'up'         , 'moveFront'   ],\n      ['moveBack'    , 'down'       , 'moveBack'    ],\n      ['rotateLeft'  , 'left'       , 'rotateLeft'  ],\n      ['rotateRight' , 'right'      , 'rotateRight' ],\n      ['shiftUp'     , 'ctrl+up'    , 'shiftDown'   ],\n      ['shiftDown'   , 'ctrl+down'  , 'shiftUp'     ],\n      ['shiftLeft'   , 'ctrl+left'  , 'shiftRight'  ],\n      ['shiftRight'  , 'ctrl+right' , 'shiftLeft'   ],\n    ];\n    const chargeModelMove$ = R.curry(chargeModelMove);\n    R.forEach(buildChargeMove, moves);\n\n    const charge_default_bindings = {\n      'endCharge': 'c',\n      'setTargetModel': 'shift+clickModel'\n    };\n    const charge_bindings = R.extend(Object.create(modelBaseModeModel.bindings),\n                                     charge_default_bindings);\n    const charge_buttons = modelsModeModel\n            .buildButtons({ single: true,\n                            end_charge: true\n                          });\n    const charge_mode = {\n      onEnter: () => { },\n      onLeave: () => { },\n      name: 'ModelCharge',\n      actions: charge_actions,\n      buttons: charge_buttons,\n      bindings: charge_bindings\n    };\n    modesModel.registerMode(charge_mode);\n    settingsModel.register('Bindings',\n                           charge_mode.name,\n                           charge_default_bindings,\n                           (bs) => {\n                             R.extend(charge_mode.bindings, bs);\n                           });\n    return charge_mode;\n\n    function chargeModelEnd(state) {\n      const stamps = gameModelSelectionModel\n            .get('local', state.game.model_selection);\n      appActionService\n        .defer('Game.command.execute',\n               'onModels',\n               ['endCharge', [], stamps]);\n      return appStateService\n        .onAction(state, [ 'Modes.switchTo','Model' ]);\n    }\n    function chargeModelSetTarget(state, event) {\n      const stamps = gameModelSelectionModel\n              .get('local', state.game.model_selection);\n      return R.thread(state.game)(\n        R.prop('models'),\n        gameModelsModel.findStamp$(stamps[0]),\n        R.unless(\n          R.isNil,\n          R.pipe(\n            (model) => R.thread(model)(\n              modelModel.chargeTarget,\n              (target_stamp) => ( target_stamp === event['click#'].target.state.stamp\n                                  ? null\n                                  : event['click#'].target\n                                ),\n              (set_target) => {\n                if(R.exists(set_target) &&\n                   model.state.stamp === set_target.state.stamp) return state;\n\n                return appStateService\n                  .onAction(state, [ 'Game.command.execute',\n                                     'onModels', [\n                                       'setChargeTargetP',\n                                       [set_target],\n                                       stamps\n                                     ] ]);\n              }\n            )\n          )\n        )\n      );\n    }\n    function chargeModelMove(move, flip_move, small, state) {\n      const stamps = gameModelSelectionModel\n              .get('local', state.game.model_selection);\n      const _move = ( R.path(['view','flip_map'], state)\n                      ? flip_move\n                      : move\n                    );\n      return R.thread(state.game)(\n        R.prop('models'),\n        gameModelsModel.findStamp$(stamps[0]),\n        R.unless(\n          R.isNil,\n          R.pipe(\n            modelModel.chargeTarget,\n            (target_stamp) => ( R.exists(target_stamp)\n                                ? gameModelsModel.findStamp(target_stamp,\n                                                            state.game.models)\n                                : null\n                              ),\n            (target_model) => appStateService\n              .onAction(state, [ 'Game.command.execute',\n                                 'onModels', [\n                                   `${_move}ChargeP`,\n                                   [target_model, small],\n                                   stamps\n                                 ] ])\n          )\n        )\n      );\n    }\n    function buildChargeMove([move, _keys_, flip_move]) {\n      charge_actions[move] = chargeModelMove$(move, flip_move, false);\n      charge_actions[move+'Small'] = chargeModelMove$(move, flip_move, true);\n    }\n  }\n})();\n"]}