{"version":3,"sources":["charge.es6"],"names":[],"mappings":"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","file":"charge.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelChargeMode', modelChargeModeModelFactory);\n\n  modelChargeModeModelFactory.$inject = [\n    'modes',\n    'settings',\n    'modelsMode',\n    'modelBaseMode',\n    'model',\n    'game',\n    'gameModels',\n    'gameModelSelection',\n  ];\n  function modelChargeModeModelFactory(modesModel,\n                                       settingsModel,\n                                       modelsModeModel,\n                                       modelBaseModeModel,\n                                       modelModel,\n                                       gameModel,\n                                       gameModelsModel,\n                                       gameModelSelectionModel) {\n    const charge_actions = Object.create(modelBaseModeModel.actions);\n    charge_actions.endCharge = chargeModelEnd;\n    charge_actions.setTargetModel = chargeModelSetTarget;\n    const moves = [\n      ['moveFront'   , 'up'         , 'moveFront'   ],\n      ['moveBack'    , 'down'       , 'moveBack'    ],\n      ['rotateLeft'  , 'left'       , 'rotateLeft'  ],\n      ['rotateRight' , 'right'      , 'rotateRight' ],\n      ['shiftUp'     , 'ctrl+up'    , 'shiftDown'   ],\n      ['shiftDown'   , 'ctrl+down'  , 'shiftUp'     ],\n      ['shiftLeft'   , 'ctrl+left'  , 'shiftRight'  ],\n      ['shiftRight'  , 'ctrl+right' , 'shiftLeft'   ],\n    ];\n    const chargeModelMove$ = R.curry(chargeModelMove);\n    R.forEach(buildChargeMove, moves);\n\n    const charge_default_bindings = {\n      'endCharge': 'c',\n      'setTargetModel': 'shift+clickModel'\n    };\n    const charge_bindings = R.extend(Object.create(modelBaseModeModel.bindings),\n                                     charge_default_bindings);\n    const charge_buttons = modelsModeModel\n            .buildButtons({ single: true,\n                            end_charge: true\n                          });\n    const charge_mode = {\n      onEnter: () => { },\n      onLeave: () => { },\n      name: 'ModelCharge',\n      actions: charge_actions,\n      buttons: charge_buttons,\n      bindings: charge_bindings\n    };\n    modesModel.registerMode(charge_mode);\n    settingsModel.register('Bindings',\n                           charge_mode.name,\n                           charge_default_bindings,\n                           (bs) => {\n                             R.extend(charge_mode.bindings, bs);\n                           });\n    return charge_mode;\n\n    function chargeModelEnd(state) {\n      const stamps = gameModelSelectionModel\n            .get('local', state.game.model_selection);\n      return R.threadP()(\n        () => state.eventP('Game.command.execute',\n                           'onModels',\n                           ['endCharge', [], stamps]),\n        () => state.eventP('Modes.switchTo', 'Model')\n      );\n    }\n    function chargeModelSetTarget(state, event) {\n      const stamps = gameModelSelectionModel\n              .get('local', state.game.model_selection);\n      return R.threadP(state.game)(\n        R.prop('models'),\n        gameModelsModel.findStampP$(stamps[0]),\n        (model) => R.threadP()(\n          () => modelModel\n            .chargeTargetP(model)\n            .catch(R.always(null)),\n          (target_stamp) => {\n            return ( target_stamp === event['click#'].target.state.stamp\n                     ? null\n                     : event['click#'].target\n                   );\n          },\n          (set_target) => {\n            if(R.exists(set_target) &&\n               model.state.stamp === set_target.state.stamp) return null;\n\n            return state.eventP('Game.command.execute',\n                                'onModels', [\n                                  'setChargeTargetP',\n                                  [state.factions, set_target],\n                                  stamps\n                                ]);\n          }\n        )\n      );\n    }\n    function chargeModelMove(move, flip_move, small, state) {\n      const stamps = gameModelSelectionModel\n              .get('local', state.game.model_selection);\n      const _move = ( R.path(['ui_state','flip_map'], state)\n                      ? flip_move\n                      : move\n                    );\n      return R.threadP(state.game)(\n        R.prop('models'),\n        gameModelsModel.findStampP$(stamps[0]),\n        (model) => modelModel\n          .chargeTargetP(model)\n          .catch(R.always(null)),\n        (target_stamp) => ( R.exists(target_stamp)\n                            ? gameModelsModel.findStampP(target_stamp,\n                                                         state.game.models)\n                            : null\n                          ),\n        (target_model) => state\n          .eventP('Game.command.execute',\n                  'onModels', [\n                    _move+'ChargeP',\n                    [state.factions, target_model, small],\n                    stamps\n                  ])\n      );\n    }\n    function buildChargeMove([move, keys, flip_move]) {\n      charge_actions[move] = chargeModelMove$(move, flip_move, false);\n      charge_actions[move+'Small'] = chargeModelMove$(move, flip_move, true);\n    }\n  }\n})();\n"]}