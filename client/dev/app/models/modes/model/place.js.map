{"version":3,"sources":["place.es6"],"names":[],"mappings":"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","file":"place.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('modelPlaceMode', modelPlaceModeModelFactory);\n\n  modelPlaceModeModelFactory.$inject = [\n    'modes',\n    'settings',\n    'modelsMode',\n    'modelBaseMode',\n    'gameModels',\n    'gameModelSelection',\n  ];\n  function modelPlaceModeModelFactory(modesModel,\n                                      settingsModel,\n                                      modelsModeModel,\n                                      modelBaseModeModel,\n                                      gameModelsModel,\n                                      gameModelSelectionModel) {\n    const model_actions = Object.create(modelBaseModeModel.actions);\n    model_actions.endPlace = placeModelEnd;\n    model_actions.setTargetModel = placeModelSetTarget;\n    model_actions.setOriginModel = placeModelSetOrigin;\n\n    const moves = [\n      ['moveFront'   , 'up'         , 'moveFront'   ],\n      ['moveBack'    , 'down'       , 'moveBack'    ],\n      ['rotateLeft'  , 'left'       , 'rotateLeft'  ],\n      ['rotateRight' , 'right'      , 'rotateRight' ],\n      ['shiftUp'     , 'ctrl+up'    , 'shiftDown'   ],\n      ['shiftDown'   , 'ctrl+down'  , 'shiftUp'     ],\n      ['shiftLeft'   , 'ctrl+left'  , 'shiftRight'  ],\n      ['shiftRight'  , 'ctrl+right' , 'shiftLeft'   ],\n    ];\n    const placeModelMove$ = R.curry(placeModelMove);\n    R.forEach(buildPlaceMove, moves);\n\n    const model_default_bindings = {\n      'endPlace': 'p',\n      'setTargetModel': 'shift+clickModel',\n      'setOriginModel': 'ctrl+clickModel'\n    };\n    const model_bindings = R.extend(Object.create(modelBaseModeModel.bindings),\n                                    model_default_bindings);\n    const model_buttons = modelsModeModel\n            .buildButtons({ single: true,\n                            end_place: true\n                          });\n    const model_mode = {\n      onEnter: () => { },\n      onLeave: () => { },\n      name: 'ModelPlace',\n      actions: model_actions,\n      buttons: model_buttons,\n      bindings: model_bindings\n    };\n    modesModel.registerMode(model_mode);\n    settingsModel.register('Bindings',\n                           model_mode.name,\n                           model_default_bindings,\n                           (bs) => {\n                             R.extend(model_mode.bindings, bs);\n                           });\n    return model_mode;\n\n    function placeModelEnd(state) {\n      const stamps = gameModelSelectionModel\n              .get('local', state.game.model_selection);\n      return R.threadP()(\n        () => state.eventP('Game.command.execute',\n                           'onModels', [\n                             'endPlace',\n                             [],\n                             stamps\n                           ]),\n        () => state.eventP('Modes.switchTo', 'Model')\n      );\n    }\n    function placeModelSetTarget(state, event) {\n      const stamps = gameModelSelectionModel\n            .get('local', state.game.model_selection);\n      return R.threadP(state.game)(\n        R.prop('models'),\n        gameModelsModel.findStampP$(stamps[0]),\n        (model) => {\n          if(model.state.stamp === event['click#'].target.state.stamp) return null;\n\n          return state.eventP('Game.command.execute',\n                              'onModels', [\n                                'setPlaceTargetP',\n                                [state.factions, event['click#'].target],\n                                stamps\n                              ]);\n        }\n      );\n    }\n    function placeModelSetOrigin(state, event) {\n      const stamps = gameModelSelectionModel\n              .get('local', state.game.model_selection);\n      return R.threadP(state.game)(\n        R.prop('models'),\n        gameModelsModel.findStampP$(stamps[0]),\n        (model) => {\n          if(model.state.stamp === event['click#'].target.state.stamp) return null;\n\n          return state.eventP('Game.command.execute',\n                              'onModels', [\n                                'setPlaceOriginP',\n                                [state.factions, event['click#'].target],\n                                stamps\n                              ]);\n        }\n      );\n    }\n    function placeModelMove(move, flip_move, small, state) {\n      const stamps = gameModelSelectionModel\n              .get('local', state.game.model_selection);\n      const _move = ( R.path(['ui_state','flip_map'], state)\n                      ? flip_move\n                      : move\n                    );\n      return state.eventP('Game.command.execute',\n                          'onModels', [\n                            _move+'PlaceP',\n                            [state.factions, small],\n                            stamps\n                          ]);\n    }\n    function buildPlaceMove([move, _keys_, flip_move]) {\n      model_actions[move] = placeModelMove$(move, flip_move, false);\n      model_actions[move+'Small'] = placeModelMove$(move, flip_move, true);\n    }\n  }\n})();\n"]}