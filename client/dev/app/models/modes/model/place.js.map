{"version":3,"sources":["place.es6"],"names":[],"mappings":"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","file":"place.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelPlaceMode', [\n    'modes',\n    'settings',\n    'modelsMode',\n    'modelBaseMode',\n    'game',\n    'gameModels',\n    'gameModelSelection',\n    function modelPlaceModeServiceFactory(modesService,\n                                          settingsService,\n                                          modelsModeService,\n                                          modelBaseModeService,\n                                          gameService,\n                                          gameModelsService,\n                                          gameModelSelectionService) {\n      let model_actions = Object.create(modelBaseModeService.actions);\n      model_actions.endPlace = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipePromise(\n          function() {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'endPlace', [], stamps]);\n          },\n          function() {\n            return state.event('Modes.switchTo', 'Model');\n          }\n        )();\n      };\n      model_actions.setTargetModel = (state, event) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          (model) => {\n            if(model.state.stamp === event['click#'].target.state.stamp) return null;\n            \n            return state.event('Game.command.execute',\n                               'onModels', [ 'setPlaceTarget',\n                                             [state.factions, event['click#'].target],\n                                             stamps\n                                           ]);\n          }\n        )(state.game.models);\n      };\n      model_actions.setOriginModel = (state, event) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          (model) => {\n            if(model.state.stamp === event['click#'].target.state.stamp) return null;\n            \n            return state.event('Game.command.execute',\n                               'onModels', [ 'setPlaceOrigin',\n                                             [state.factions, event['click#'].target],\n                                             stamps\n                                           ]);\n          }\n        )(state.game.models);\n      };\n      let moves = [\n        ['moveFront', 'up', 'moveFront'],\n        ['moveBack', 'down', 'moveBack'],\n        ['rotateLeft', 'left', 'rotateLeft'],\n        ['rotateRight', 'right', 'rotateRight'],\n        ['shiftUp', 'ctrl+up', 'shiftDown'],\n        ['shiftDown', 'ctrl+down', 'shiftUp'],\n        ['shiftLeft', 'ctrl+left', 'shiftRight'],\n        ['shiftRight', 'ctrl+right', 'shiftLeft'],\n      ];\n      var buildPlaceMove$ = R.curry((move, flip_move, small, state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        let _move = ( R.path(['ui_state','flip_map'], state) ?\n                      flip_move :\n                      move\n                    );\n\n        return state.event('Game.command.execute',\n                           'onModels', [ _move+'Place',\n                                         [state.factions, small],\n                                         stamps\n                                       ]);\n      });\n      R.forEach(([move, keys, flip_move]) => {\n        keys = keys;\n        model_actions[move] = buildPlaceMove$(move, flip_move, false);\n        model_actions[move+'Small'] = buildPlaceMove$(move, flip_move, true);\n      }, moves);\n\n      let model_default_bindings = {\n        'endPlace': 'p',\n        'setTargetModel': 'shift+clickModel',\n        'setOriginModel': 'ctrl+clickModel'\n      };\n      let model_bindings = R.extend(Object.create(modelBaseModeService.bindings),\n                                    model_default_bindings);\n      let model_buttons = modelsModeService.buildButtons({ single: true,\n                                                           end_place: true\n                                                         });\n      let model_mode = {\n        onEnter: () => { },\n        onLeave: () => { },\n        name: 'ModelPlace',\n        actions: model_actions,\n        buttons: model_buttons,\n        bindings: model_bindings\n      };\n      modesService.registerMode(model_mode);\n      settingsService.register('Bindings',\n                               model_mode.name,\n                               model_default_bindings,\n                               (bs) => {\n                                 R.extend(model_mode.bindings, bs);\n                               });\n      return model_mode;\n    }\n  ]);\n"]}