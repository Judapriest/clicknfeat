{"version":3,"sources":["sprayTemplate.es6"],"names":[],"mappings":"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","file":"sprayTemplate.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('sprayTemplateMode', [\n    'modes',\n    'settings',\n    'templateMode',\n    'sprayTemplate',\n    'game',\n    'gameTemplates',\n    'gameTemplateSelection',\n    'gameModels',\n    function sprayTemplateModeServiceFactory(modesService,\n                                             settingsService,\n                                             templateModeService,\n                                             sprayTemplateService,\n                                             gameService,\n                                             gameTemplatesService,\n                                             gameTemplateSelectionService,\n                                             gameModelsService) {\n      let template_actions = Object.create(templateModeService.actions);\n      template_actions.spraySize6 = (state) => {\n        let stamps = gameTemplateSelectionService\n              .get('local', state.game.template_selection);\n        return state.event('Game.command.execute',\n                           'onTemplates', ['setSize', [6], stamps]);\n      };\n      template_actions.spraySize8 = (state) => {\n        let stamps = gameTemplateSelectionService\n              .get('local', state.game.template_selection);\n        return state.event('Game.command.execute',\n                           'onTemplates', ['setSize', [8], stamps]);\n      };\n      template_actions.spraySize10 = (state) => {\n        let stamps = gameTemplateSelectionService\n              .get('local', state.game.template_selection);\n        return state.event('Game.command.execute',\n                           'onTemplates', ['setSize', [10], stamps]);\n      };\n      template_actions.setOriginModel = (state, event) => {\n        let stamps = gameTemplateSelectionService\n              .get('local', state.game.template_selection);\n        return state.event('Game.command.execute',\n                           'onTemplates', [ 'setOrigin',\n                                            [state.factions, event['click#'].target],\n                                            stamps\n                                          ]);\n      };\n      template_actions.setTargetModel = (state, event) => {\n        let stamps = gameTemplateSelectionService\n              .get('local', state.game.template_selection);\n        return R.pipeP(\n          gameTemplatesService.findStamp$(stamps[0]),\n          sprayTemplateService.origin,\n          (origin) => {\n            if(R.isNil(origin)) return null;\n\n            return gameModelsService\n              .findStamp(origin, state.game.models);\n          },\n          (origin_model) => {\n            if(R.isNil(origin_model)) return null;\n          \n            return state.event('Game.command.execute',\n                               'onTemplates', [ 'setTarget',\n                                                [state.factions, origin_model, event['click#'].target],\n                                                stamps\n                                              ]);\n          }\n        )(state.game.templates);\n      };\n      let moves = [\n        ['rotateLeft', 'left'],\n        ['rotateRight', 'right'],\n      ];\n      let buildTemplateMove$ = R.curry((move, small, state) => {\n        let stamps = gameTemplateSelectionService\n              .get('local', state.game.template_selection);\n        return R.pipeP(\n          function() {\n            return gameTemplatesService\n              .findStamp(stamps[0], state.game.templates);\n          },\n          sprayTemplateService.origin,\n          (origin) => {\n            if(R.isNil(origin)) return null;\n              \n            return gameModelsService\n              .findStamp(origin, state.game.models);\n          },\n          (origin_model) => {\n            return state.event('Game.command.execute',\n                               'onTemplates', [ move,\n                                                [state.factions, origin_model, small],\n                                                stamps\n                                              ]);\n          }\n        )();\n      });\n      R.forEach(([move]) => {\n        template_actions[move] = buildTemplateMove$(move, false);\n        template_actions[move+'Small'] = buildTemplateMove$(move, true);\n      }, moves);\n      let template_default_bindings = {\n        setOriginModel: 'ctrl+clickModel',\n        setTargetModel: 'shift+clickModel',\n        spraySize6: '6',\n        spraySize8: '8',\n        spraySize10: '0'\n      };\n      let template_bindings = R.extend(Object.create(templateModeService.bindings),\n                                       template_default_bindings);\n\n      let template_buttons = R.concat([\n        [ 'Size', 'toggle', 'size' ],\n        [ 'Spray6', 'spraySize6', 'size' ],\n        [ 'Spray8', 'spraySize8', 'size' ],\n        [ 'Spray10', 'spraySize10', 'size' ],\n      ], templateModeService.buttons);\n\n      let template_mode = {\n        onEnter: () => { },\n        onLeave: () => { },\n        name: 'spray'+templateModeService.name,\n        actions: template_actions,\n        buttons: template_buttons,\n        bindings: template_bindings\n      };\n      modesService.registerMode(template_mode);\n      settingsService.register('Bindings',\n                               template_mode.name,\n                               template_default_bindings,\n                               (bs) => {\n                                 R.extend(template_mode.bindings, bs);\n                               });\n      return template_mode;\n    }\n  ]);\n"]}