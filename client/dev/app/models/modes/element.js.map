{"version":3,"sources":["element.es6"],"names":[],"mappings":"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","file":"element.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('elementMode', elementModeModelFactory);\n\n  elementModeModelFactory.$inject = [\n    'defaultMode',\n  ];\n  function elementModeModelFactory(defaultModeModel) {\n    return function buildElementModeModel(type,\n                                          elementModel,\n                                          gameElementsModel,\n                                          gameElementSelectionModel) {\n      const element_actions = Object.create(defaultModeModel.actions);\n      element_actions.modeBackToDefault = clearElementSelection;\n      element_actions.clickMap = clearElementSelection;\n      element_actions.rightClickMap = clearElementSelection;\n      element_actions.copySelection = copySelection;\n      element_actions.delete = doDelete;\n      element_actions.toggleLock = toggleLock;\n\n      const moves = [\n        ['moveFront', 'up'],\n        ['moveBack', 'down'],\n        ['rotateLeft', 'left'],\n        ['rotateRight', 'right'],\n      ];\n      R.forEach(buildMove, moves);\n      const shifts = [\n        ['shiftUp', 'ctrl+up', 'shiftDown'],\n        ['shiftDown', 'ctrl+down', 'shiftUp'],\n        ['shiftLeft', 'ctrl+left', 'shiftRight'],\n        ['shiftRight', 'ctrl+right', 'shiftLeft'],\n      ];\n      R.forEach(buildShift, shifts);\n      buildDrag();\n\n      const element_default_bindings = {\n        'clickMap': 'clickMap',\n        'rightClickMap': 'rightClickMap',\n        'copySelection': 'ctrl+c',\n        'delete': 'del',\n        'toggleLock': 'l'\n      };\n      R.forEach(buildMoveBindings, moves);\n      R.forEach(buildShiftBindings, shifts);\n      const element_bindings = R.extend(Object.create(defaultModeModel.bindings),\n                                        element_default_bindings);\n      const element_buttons = [\n        [ 'Delete', 'delete' ],\n        [ 'Lock/Unlock', 'toggleLock' ],\n      ];\n      const element_mode = {\n        onEnter: () => { },\n        onLeave: () => { },\n        name: s.capitalize(type),\n        actions: element_actions,\n        buttons: element_buttons,\n        bindings: element_bindings\n      };\n\n      return element_mode;\n\n      function clearElementSelection(state) {\n        return state.eventP('Game.update', R.lensProp(`${type}_selection`),\n                            gameElementSelectionModel.clear$('local', state));\n      }\n      function copySelection(state) {\n        const stamps = gameElementSelectionModel\n                .get('local', state.game[`${type}_selection`]);\n        return R.threadP(state.game)(\n          R.prop(`${type}s`),\n          gameElementsModel.copyStampsP$(stamps),\n          (copy) => {\n            state.create = copy;\n            return state.eventP('Modes.switchTo', `Create${s.capitalize(type)}`);\n          }\n        );\n      }\n      function doDelete(state) {\n        const stamps = gameElementSelectionModel\n                .get('local', state.game[`${type}_selection`]);\n        return state.eventP('Game.command.execute',\n                            `delete${s.capitalize(type)}`, [stamps]);\n      }\n      function toggleLock(state) {\n        const stamps = gameElementSelectionModel\n                .get('local', state.game[`${type}_selection`]);\n        return R.threadP(state.game)(\n          R.prop(`${type}s`),\n          gameElementsModel.findStampP$(stamps[0]),\n          (element) => {\n            const is_locked = elementModel.isLocked(element);\n            return state.eventP('Game.command.execute',\n                                `lock${s.capitalize(type)}s`, [!is_locked, stamps]);\n          }\n        );\n      }\n      function buildMove([move]) {\n        element_actions[move] = (state) => {\n          const stamps = gameElementSelectionModel\n                  .get('local', state.game[`${type}_selection`]);\n          return state.eventP('Game.command.execute',\n                              `on${s.capitalize(type)}s`,\n                              [ `${move}P`, [false], stamps ]);\n        };\n        element_actions[move+'Small'] = (state) => {\n          const stamps = gameElementSelectionModel\n                  .get('local', state.game[`${type}_selection`]);\n          return state.eventP('Game.command.execute',\n                              `on${s.capitalize(type)}s`,\n                              [ `${move}P`, [true], stamps ]);\n        };\n      }\n      function buildShift([shift, key, flip_shift]) {\n        element_actions[shift] = (state) => {\n          const stamps = gameElementSelectionModel\n                  .get('local', state.game[`${type}_selection`]);\n          const element_shift = ( R.path(['ui_state', 'flip_map'], state)\n                                  ? flip_shift\n                                  : shift\n                                );\n          return state.eventP('Game.command.execute',\n                              `on${s.capitalize(type)}s`,\n                              [ `${element_shift}P`, [false], stamps ]);\n        };\n        element_actions[shift+'Small'] = (state) => {\n          const stamps = gameElementSelectionModel\n                  .get('local', state.game[`${type}_selection`]);\n          const element_shift = ( R.path(['ui_state', 'flip_map'], state)\n                                  ? flip_shift\n                                  : shift\n                                );\n          return state.eventP('Game.command.execute',\n                              `on${s.capitalize(type)}s`,\n                              [ `${element_shift}P`, [true], stamps ]);\n        };\n      }\n\n      function buildDrag() {\n        element_actions[`dragStart${s.capitalize(type)}`] = dragStartElement;\n        defaultModeModel\n          .actions[`dragStart${s.capitalize(type)}`] = dragStartElement;\n        element_actions[`drag${s.capitalize(type)}`] = dragElement;\n        element_actions[`dragEnd${s.capitalize(type)}`] = dragEndElement;\n\n        let drag_element_start_state;\n        function dragStartElement(state, event) {\n          return R.threadP(event.target)(\n            R.rejectIf(elementModel.isLocked, `${s.capitalize(type)} is locked`),\n            () => {\n              drag_element_start_state = R.clone(event.target.state);\n              return dragElement(state, event);\n            },\n            () => {\n              return state\n                .eventP('Game.update',\n                        R.lensProp(`${type}_selection`),\n                        gameElementSelectionModel\n                        .set$('local', [event.target.state.stamp], state));\n            }\n          );\n        }\n        function dragElement(state, event) {\n          return R.threadP(event.target)(\n            R.rejectIf(elementModel.isLocked, `${s.capitalize(type)} is locked`),\n            () => {\n              updateStateWithDelta(event, event.target.state);\n              state.queueChangeEventP(`Game.${type}.change.${event.target.state.stamp}`);\n            }\n          );\n        }\n        function dragEndElement(state, event) {\n          return R.threadP(event.target)(\n            R.rejectIf(elementModel.isLocked, `${s.capitalize(type)} is locked`),\n            () => {\n              event.target.state = R.clone(drag_element_start_state);\n              const end_state = R.clone(drag_element_start_state);\n              updateStateWithDelta(event, end_state);\n              return state.eventP('Game.command.execute',\n                                  `on${s.capitalize(type)}s`,\n                                  [ 'setPositionP',\n                                    [end_state],\n                                    [event.target.state.stamp]\n                                  ]);\n            }\n          );\n        }\n        function updateStateWithDelta(event, state) {\n          const dx = event.now.x - event.start.x;\n          const dy = event.now.y - event.start.y;\n          state.x = drag_element_start_state.x + dx;\n          state.y = drag_element_start_state.y + dy;\n        }\n      }\n\n      function buildMoveBindings([move, keys]) {\n        element_default_bindings[move] = keys;\n        element_default_bindings[move+'Small'] = 'shift+'+keys;\n      }\n      function buildShiftBindings([shift, keys]) {\n        element_default_bindings[shift] = keys;\n        element_default_bindings[shift+'Small'] = 'shift+'+keys;\n      }\n    };\n  }\n})();\n"]}