{"version":3,"sources":["models.es6"],"names":[],"mappings":"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","file":"models.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelsMode', [\n    'modes',\n    'settings',\n    'defaultMode',\n    'model',\n    'game',\n    'gameModels',\n    'gameModelSelection',\n    'point',\n    'prompt',\n    function modelsModeServiceFactory(modesService,\n                                      settingsService,\n                                      defaultModeService,\n                                      modelService,\n                                      gameService,\n                                      gameModelsService,\n                                      gameModelSelectionService,\n                                      pointService,\n                                      promptService) {\n      let models_actions = Object.create(defaultModeService.actions);\n      function modelsClearSelection(state) {\n        return state.event('Game.command.execute',\n                           'setModelSelection', [ 'clear', null ]);\n      }\n      models_actions.clickMap = modelsClearSelection;\n      models_actions.rightClickMap = modelsClearSelection;\n      models_actions.modeBackToDefault = modelsClearSelection;\n      models_actions.deleteSelection = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'deleteModel', [stamps]);\n      };\n      models_actions.toggleLock = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isLocked,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'lockModels', [ !present, stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleImageDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isImageDisplayed,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setImageDisplay', [!present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.setNextImage = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'setNextImage', [state.factions], stamps]);\n      };\n      models_actions.toggleWreckDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isWreckDisplayed,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setWreckDisplay', [!present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleUnitDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isUnitDisplayed,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setUnitDisplay', [!present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.setUnit = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          (model) => {\n            let value = R.defaultTo(0, modelService.unit(model));\n\n            return promptService\n              .prompt('prompt', 'Set unit number :', value)\n              .catch(R.always(null));\n          },\n          (value) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setUnit', [value], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleMeleeDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isMeleeDisplayed$('mm'),\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setMeleeDisplay', ['mm', !present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleReachDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isMeleeDisplayed$('mr'),\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setMeleeDisplay', ['mr', !present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleStrikeDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isMeleeDisplayed$('ms'),\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setMeleeDisplay', ['ms', !present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleCounterDisplay = (state) => {\n        let stamps = gameModelSelectionService.get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isCounterDisplayed$('c'),\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setCounterDisplay', ['c', !present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.incrementCounter = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'incrementCounter', ['c'], stamps]);\n      };\n      models_actions.decrementCounter = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'decrementCounter', ['c'], stamps]);\n      };\n      models_actions.toggleSoulsDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isCounterDisplayed$('s'),\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setCounterDisplay', ['s', !present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.incrementSouls = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'incrementCounter', ['s'], stamps]);\n      };\n      models_actions.decrementSouls = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'decrementCounter', ['s'], stamps]);\n      };\n      models_actions.setRulerMaxLength = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.rulerMaxLength,\n          R.defaultTo(0),\n          (value) => {\n            return promptService\n              .prompt('prompt', 'Set ruler max length :', value)\n              .catch(R.always(null));\n          },\n          (value) => {\n            value = (value === 0) ? null : value;\n\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setRulerMaxLength', [value], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.setChargeMaxLength = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.chargeMaxLength,\n          (value) => {\n            return promptService\n              .prompt('prompt', 'Set charge max length :', value)\n              .catch(R.always(null));\n          },\n          (value) => {\n            value = (value === 0) ? null : value;\n\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setChargeMaxLength',\n                                             [state.factions, value],\n                                             stamps\n                                           ]);\n          }\n        )(state.game.models);\n      };\n      models_actions.setPlaceMaxLength = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.placeMaxLength,\n          R.defaultTo(0),\n          (value) => {\n            return promptService\n              .prompt('prompt','Set place max length :', value)\n              .catch(R.always(null));\n          },\n          (value) => {\n            value = (value === 0) ? null : value;\n\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setPlaceMaxLength',\n                                             [state.factions, value],\n                                             stamps\n                                           ]);\n          }\n        )(state.game.models);\n      };\n      models_actions.togglePlaceWithin = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.placeWithin,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setPlaceWithin',\n                                             [state.factions, !present],\n                                             stamps\n                                           ]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleLeaderDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isLeaderDisplayed,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setLeaderDisplay', [!present], stamps ]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleIncorporealDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isIncorporealDisplayed,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setIncorporealDisplay', [!present], stamps ]);\n          }\n        )(state.game.models);\n      };\n      let effects = [\n        [ 'Blind', 'b' ],\n        [ 'Corrosion', 'c' ],\n        [ 'Disrupt', 'd' ],\n        [ 'Fire', 'f' ],\n        [ 'Fleeing', 'e' ],\n        [ 'KD', 'k' ],\n        [ 'Stationary', 't' ],\n      ];\n      R.forEach(([effect, flag]) => {\n        models_actions['toggle'+effect+'EffectDisplay'] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          return R.pipeP(\n            gameModelsService.findStamp$(stamps[0]),\n            modelService.isEffectDisplayed$(flag),\n            (present) => {\n              return state.event('Game.command.execute',\n                                 'onModels', [ 'setEffectDisplay', [flag, !present], stamps]);\n            }\n          )(state.game.models);\n        };\n      }, effects);\n      let auras = [\n        [ 'Red', '#F00' ],\n        [ 'Green', '#0F0' ],\n        [ 'Blue', '#00F' ],\n        [ 'Yellow', '#FF0' ],\n        [ 'Purple', '#F0F' ],\n        [ 'Cyan', '#0FF' ],\n      ];\n      R.forEach(([aura, hex]) => {\n        models_actions['toggle'+aura+'AuraDisplay'] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          return R.pipeP(\n            gameModelsService.findStamp$(stamps[0]),\n            modelService.auraDisplay,\n            (present) => {\n              return state.event('Game.command.execute',\n                                 'onModels', [ 'setAuraDisplay',\n                                               [(present === hex) ? null : hex],\n                                               stamps\n                                             ]);\n            }\n          )(state.game.models);\n        };\n      }, auras);\n      models_actions.toggleCtrlAreaDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isCtrlAreaDisplayed$(state.factions),\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setCtrlAreaDisplay', [!present], stamps]);\n          }\n        )(state.game.models);\n      };\n      let areas = R.range(0, 10);\n      R.forEach((area) => {\n        let size = area === 0 ? 10 : area;\n        models_actions['toggle'+size+'InchesAreaDisplay'] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          return R.pipeP(\n            gameModelsService.findStamp$(stamps[0]),\n            (model) => {\n              let present = modelService.areaDisplay(model);\n\n              return state.event('Game.command.execute',\n                                 'onModels', [ 'setAreaDisplay',\n                                               [(present === size) ? null : size],\n                                               stamps\n                                             ]);\n            }\n          )(state.game.models);\n        };\n        let big_size = size + 10;\n        models_actions['toggle'+big_size+'InchesAreaDisplay'] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          return R.pipeP(\n            gameModelsService.findStamp$(stamps[0]),\n            (model) => {\n              let present = modelService.areaDisplay(model);\n\n              return state.event('Game.command.execute',\n                                 'onModels', [ 'setAreaDisplay',\n                                               [(present === big_size) ? null : big_size],\n                                               stamps\n                                             ]);\n              }\n            )(state.game.models);\n          };\n      }, areas);\n      let moves = [\n        ['moveFront', 'up'],\n        ['moveBack', 'down'],\n        ['rotateLeft', 'left'],\n        ['rotateRight', 'right'],\n      ];\n      R.forEach(([move, key]) => {\n        key = key;\n        models_actions[move] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          return state.event('Game.command.execute',\n                             'onModels', [ move, [state.factions, false], stamps ]);\n        };\n        models_actions[move+'Small'] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          return state.event('Game.command.execute',\n                             'onModels', [ move, [state.factions, true], stamps ]);\n        };\n      }, moves);\n      let shifts = [\n        ['shiftUp', 'ctrl+up', 'shiftDown'],\n        ['shiftDown', 'ctrl+down', 'shiftUp'],\n        ['shiftLeft', 'ctrl+left', 'shiftRight'],\n        ['shiftRight', 'ctrl+right', 'shiftLeft'],\n      ];\n      R.forEach(([shift, key, flip_shift]) => {\n        key = key;\n        models_actions[shift] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          let model_shift = ( R.path(['ui_state', 'flip_map'], state) ?\n                              flip_shift :\n                              shift\n                            );\n          return state.event('Game.command.execute',\n                             'onModels', [ model_shift, [state.factions, false], stamps ]);\n        };\n        models_actions[shift+'Small'] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          let model_shift = ( R.path(['ui_state', 'flip_map'], state) ?\n                              flip_shift :\n                              shift\n                            );\n          return state.event('Game.command.execute',\n                             'onModels', [ model_shift, [state.factions, true], stamps ]);\n        };\n      }, shifts);\n      models_actions.setOrientationUp = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        let orientation = state.ui_state.flip_map ? 180 : 0;\n        state.event('Game.command.execute',\n                    'onModels', [ 'setOrientation',\n                                  [state.factions, orientation],\n                                  stamps\n                                ]);\n      };\n      models_actions.setOrientationDown = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        let orientation = state.ui_state.flip_map ? 0 : 180;\n        state.event('Game.command.execute',\n                    'onModels', [ 'setOrientation',\n                                  [state.factions, orientation],\n                                  stamps\n                                ]);\n      };\n      models_actions.setTargetModel = (state, event) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'orientTo',\n                                         [state.factions, event['click#'].target],\n                                         stamps\n                                       ]);\n      };\n\n      (() => {\n        let drag_charge_target;\n        let drag_models_start_states;\n        let drag_models_start_selection;\n        models_actions.dragStartModel = (state, event) => {\n          let stamp = event.target.state.stamp;\n          return R.pipePromise(\n            () => {\n              let in_selection = gameModelSelectionService\n                    .in('local', stamp, state.game.model_selection);\n              if(in_selection) return null;\n\n              return state.event('Game.command.execute',\n                                 'setModelSelection', ['set', [stamp]]);\n            },\n            () => {\n              return gameModelSelectionService\n                .get('local', state.game.model_selection);\n            },\n            (stamps) => {\n              return gameModelsService\n                .findAnyStamps(stamps, state.game.models);\n            },\n            R.reject(R.isNil),\n            (models) => {\n              drag_charge_target = null;\n              if(R.length(models) === 1) {\n                R.pipeP(\n                  modelService.chargeTarget,\n                  (target_stamp) => {\n                    return gameModelsService\n                      .findStamp(target_stamp, state.game.models);\n                  },\n                  (target_model) => {\n                    drag_charge_target = target_model;\n                  }\n                )(models[0]);\n              }\n              return models;\n            },\n            (models) => {\n              drag_models_start_selection = models;\n\n              return R.map(modelService.saveState, models);\n            },\n            (states) => {\n              drag_models_start_states = states;\n\n              return models_actions.dragModel(state, event);\n            }\n          )();\n        };\n        defaultModeService.actions.dragStartModel = models_actions.dragStartModel;\n        models_actions.dragModel = (state, event) => {\n          return R.pipePromise(\n            R.addIndex(R.map)((model, index) => {\n              let pos = {\n                x: drag_models_start_states[index].x + event.now.x - event.start.x,\n                y: drag_models_start_states[index].y + event.now.y - event.start.y\n              };\n              return modelService\n                .setPosition_(state.factions, drag_charge_target, pos, model);\n            }),\n            R.promiseAll,\n            R.forEach((model) => {\n              state.changeEvent(`Game.model.change.${model.state.stamp}`);\n            })\n          )(drag_models_start_selection);\n        };\n        models_actions.dragEndModel = (state, event) => {\n          return R.pipePromise(\n            R.addIndex(R.map)((model, index) => {\n              return modelService\n                .setPosition_(state.factions, drag_charge_target,\n                             drag_models_start_states[index], model);\n            }),\n            R.promiseAll,\n            R.map(R.path(['state','stamp'])),\n            (stamps) => {\n              let shift = {\n                x: event.now.x - event.start.x,\n                y: event.now.y - event.start.y\n              };\n              return state.event('Game.command.execute',\n                                 'onModels', [ 'shiftPosition',\n                                               [state.factions, drag_charge_target, shift],\n                                               stamps\n                                             ]);\n            }\n          )(drag_models_start_selection);\n        };\n      })();\n\n      models_actions.copySelection = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.copyStamps$(stamps),\n          (copy) => {\n            return state.event('Game.model.copy', copy);\n          }\n        )(state.game.models);\n      };\n      models_actions.clearLabel = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'clearLabel', [], stamps]);\n      };\n      \n      let models_default_bindings = {\n        'clickMap': 'clickMap',\n        'rightClickMap': 'rightClickMap',\n        'deleteSelection': 'del',\n        'copySelection': 'ctrl+c',\n        'toggleLock': 'l',\n        'toggleImageDisplay': 'alt+i',\n        'setNextImage': 'shift+i',\n        'toggleWreckDisplay': 'alt+w',\n        'setOrientationUp': 'pageup',\n        'setOrientationDown': 'pagedown',\n        'setTargetModel': 'shift+clickModel',\n        'toggleCounterDisplay': 'alt+n',\n        'incrementCounter': '+',\n        'decrementCounter': '-',\n        'toggleSoulsDisplay': 'alt+o',\n        'incrementSouls': 'ctrl++',\n        'decrementSouls': 'ctrl+-',\n        'toggleCtrlAreaDisplay': 'alt+a',\n        'setRulerMaxLength': 'shift+r',\n        'setChargeMaxLength': 'shift+c',\n        'setPlaceMaxLength': 'shift+p',\n        'togglePlaceWithin': 'alt+p',\n        'toggleMeleeDisplay': 'alt+m',\n        'toggleReachDisplay': 'alt+r',\n        'toggleStrikeDisplay': 'alt+s',\n        'toggleUnitDisplay': 'alt+u',\n        'setUnit': 'shift+u',\n        'toggleLeaderDisplay': 'alt+l',\n        'toggleIncorporealDisplay': 'alt+g',\n        'clearLabel': 'ctrl+shift+l'\n      };\n      R.forEach(([move, keys]) => {\n        models_default_bindings[move] = keys;\n        models_default_bindings[move+'Small'] = 'shift+'+keys;\n      }, moves);\n      R.forEach(([shift, keys]) => {\n        models_default_bindings[shift] = keys;\n        models_default_bindings[shift+'Small'] = 'shift+'+keys;\n      }, shifts);\n      R.forEach((area) => {\n        let size = area === 0 ? 10 : area;\n        models_default_bindings['toggle'+size+'InchesAreaDisplay'] = 'alt+'+area;\n        size += 10;\n        models_default_bindings['toggle'+size+'InchesAreaDisplay'] = 'alt+shift+'+area;\n      }, areas);\n      R.addIndex(R.forEach)(([aura], index) => {\n        models_default_bindings['toggle'+aura+'AuraDisplay'] = 'ctrl+'+(index+1);\n      }, auras);\n      R.forEach(([effect, keys]) => {\n        models_default_bindings['toggle'+effect+'EffectDisplay'] = 'alt+'+keys;\n      }, effects);\n      let models_bindings = R.extend(Object.create(defaultModeService.bindings),\n                                     models_default_bindings);\n\n      let models_buttons = buildModelsModesButtons();\n      let models_mode = {\n        onEnter: () => { },\n        onLeave: () => { },\n        name: 'Models',\n        actions: models_actions,\n        buttons: models_buttons,\n        buildButtons: buildModelsModesButtons,\n        bindings: models_bindings,\n        areas: areas,\n        auras: auras,\n        effects: effects\n      };\n      modesService.registerMode(models_mode);\n      settingsService.register('Bindings',\n                               models_mode.name,\n                               models_default_bindings,\n                               (bs) => {\n                                 R.extend(models_mode.bindings, bs);\n                               });\n\n      function buildModelsModesButtons({ single,\n                                         start_charge, end_charge,\n                                         start_place, end_place\n                                       } = {}) {\n        let ret = [\n          [ 'Delete', 'deleteSelection' ],\n          [ 'Copy', 'copySelection' ],\n          [ 'Lock', 'toggleLock' ],\n          [ 'Ruler Max Len.', 'setRulerMaxLength' ],\n          [ 'Clear Label', 'clearLabel' ],\n          [ 'Image', 'toggle', 'image' ],\n          [ 'Show/Hide', 'toggleImageDisplay', 'image' ],\n          [ 'Next', 'setNextImage', 'image' ],\n          [ 'Wreck', 'toggleWreckDisplay', 'image' ],\n          [ 'Orient.', 'toggle', 'orientation' ],\n          [ 'Face Up', 'setOrientationUp', 'orientation' ],\n          [ 'Face Down', 'setOrientationDown', 'orientation' ],\n          [ 'Counter', 'toggle', 'counter' ],\n          [ 'Show/Hide', 'toggleCounterDisplay', 'counter' ],\n          [ 'Inc.', 'incrementCounter', 'counter' ],\n          [ 'Dec.', 'decrementCounter', 'counter' ],\n          [ 'Souls', 'toggle', 'souls' ],\n          [ 'Show/Hide', 'toggleSoulsDisplay', 'souls' ],\n          [ 'Inc.', 'incrementSouls', 'souls' ],\n          [ 'Dec.', 'decrementSouls', 'souls' ],\n          [ 'Melee', 'toggle', 'melee' ],\n          [ '0.5\"', 'toggleMeleeDisplay', 'melee' ],\n          [ 'Reach', 'toggleReachDisplay', 'melee' ],\n          [ 'Strike', 'toggleStrikeDisplay', 'melee' ],\n        ];\n        if(single) {\n          ret = R.concat(ret, [ [ 'Templates', 'toggle', 'templates' ],\n                                [ 'AoE', 'createAoEOnModel', 'templates' ],\n                                [ 'Spray', 'createSprayOnModel', 'templates' ],\n                              ]);\n        }\n        ret = R.append([ 'Areas', 'toggle', 'areas' ], ret);\n        ret = R.append([ 'CtrlArea', 'toggleCtrlAreaDisplay', 'areas' ], ret);\n        ret = R.concat(ret, R.map((area) => {\n          let size = area + 1;\n          return [ size+'\"', 'toggle'+size+'InchesAreaDisplay', 'areas' ];\n        }, areas));\n        ret = R.concat(ret, R.map((area) => {\n          let size = area + 11;\n          return [ size+'\"', 'toggle'+size+'InchesAreaDisplay', 'areas' ];\n        }, areas));\n        ret = R.append([ 'Auras', 'toggle', 'auras' ], ret);\n        ret = R.concat(ret, R.map(([aura]) => {\n          return [ aura, 'toggle'+aura+'AuraDisplay', 'auras' ];\n        }, auras));\n        ret = R.append([ 'Effects', 'toggle', 'effects' ], ret);\n        ret = R.concat(ret, R.map(([effect]) => {\n          return [ effect, 'toggle'+effect+'EffectDisplay', 'effects' ];\n        }, effects));\n        ret = R.append([ 'Incorp.', 'toggleIncorporealDisplay', 'effects' ], ret);\n        ret = R.append([ 'Charge', 'toggle', 'charge' ], ret);\n        if(start_charge) {\n          ret = R.append([ 'Start', 'startCharge', 'charge' ], ret);\n        }\n        if(end_charge) {\n          ret = R.append([ 'End', 'endCharge', 'charge' ], ret);\n        }\n        ret = R.append([ 'Max Len.', 'setChargeMaxLength', 'charge' ], ret);\n        ret = R.append([ 'Place', 'toggle', 'place' ], ret);\n        if(start_place) {\n          ret = R.append([ 'Start', 'startPlace', 'place' ], ret);\n        }\n        if(end_place) {\n          ret = R.append([ 'End', 'endPlace', 'place' ], ret);\n        }\n        ret = R.append([ 'Max Len.', 'setPlaceMaxLength', 'place' ], ret);\n        ret = R.append([ 'Within', 'togglePlaceWithin', 'place' ], ret);\n        ret = R.concat(ret, [ [ 'Unit', 'toggle', 'unit' ],\n                              [ 'Show/Hide', 'toggleUnitDisplay', 'unit' ],\n                              [ 'Set #', 'setUnit', 'unit' ],\n                              [ 'Leader', 'toggleLeaderDisplay', 'unit' ],\n                            ]);\n        if(single) {\n          ret = R.append([ 'Select All', 'selectAllUnit', 'unit' ], ret);\n          ret = R.append([ 'Select Friends', 'selectAllFriendly' ], ret);\n        }\n\n        return ret;\n      }\n      \n      return models_mode;\n    }\n  ]);\n"]}