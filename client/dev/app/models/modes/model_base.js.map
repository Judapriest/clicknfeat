{"version":3,"sources":["model_base.es6"],"names":[],"mappings":"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","file":"model_base.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelBaseMode', [\n    'modes',\n    'settings',\n    'modelsMode',\n    'sprayTemplateMode',\n    'model',\n    'game',\n    'gameModels',\n    'gameModelSelection',\n    function modelBaseModeServiceFactory(modesService,\n                                         settingsService,\n                                         modelsModeService,\n                                         sprayTemplateModeService,\n                                         modelService,\n                                         gameService,\n                                         gameModelsService,\n                                         gameModelSelectionService) {\n      let model_actions = Object.create(modelsModeService.actions);\n      model_actions.createAoEOnModel = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          () => {\n            return gameModelsService.findStamp(stamps[0], state.game.models);\n          },\n          (model) => {\n            let position = R.pick(['x','y'], model.state);\n            position.type = 'aoe';\n            let create = {\n              base: { x: 0, y: 0 },\n              templates: [position]\n            };\n            let is_flipped = R.path(['ui_state','flip_map'], state);\n            return state.event('Game.command.execute',\n                               'createTemplate', [create, is_flipped]);\n          }\n        )();\n      };\n      model_actions.createSprayOnModel = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          () => {\n            return gameModelsService.findStamp(stamps[0], state.game.models);\n          },\n          (model) =>{\n            let position = R.pick(['x','y'], model.state);\n            position.type = 'spray';\n            let create = {\n              base: { x: 0, y: 0 },\n              templates: [position]\n            };\n            let is_flipped = R.path(['ui_state','flip_map'], state);\n            return R.pipePromise(\n              () => {\n                return state.event('Game.command.execute',\n                                   'createTemplate', [create, is_flipped]);\n              },\n              () => {\n                // simulate set-origin-model in sprayTemplateMode\n                return sprayTemplateModeService.actions\n                  .setOriginModel(state, { 'click#': { target: model } });\n              }\n            )();\n          }\n        )();\n      };\n      model_actions.selectAllFriendly = (state) => {\n        let selection = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(selection[0]),\n          (model) => {\n            let stamps = R.pipe(\n              gameModelsService.all,\n              R.filter(modelService.userIs$(modelService.user(model))),\n              R.map(modelService.stamp)\n            )(state.game.models);\n\n            return state.event('Game.command.execute',\n                               'setModelSelection', ['set', stamps]);\n          }\n        )(state.game.models);\n      };\n      model_actions.selectAllUnit = (state) => {\n        let selection = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(selection[0]),\n          (model) => {\n            let unit = modelService.unit(model);\n            if(R.isNil(unit)) {\n              return self.Promise.reject('Model not in unit');\n            }\n            \n            let stamps = R.pipe(\n              gameModelsService.all,\n              R.filter(modelService.userIs$(modelService.user(model))),\n              R.filter(modelService.unitIs$(unit)),\n              R.map(modelService.stamp)\n            )(state.game.models);\n            \n            return state.event('Game.command.execute',\n                               'setModelSelection', ['set', stamps]);\n          }\n        )(state.game.models);\n      };\n      model_actions.setB2B = (state, event) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          () => {\n            return gameModelsService.findStamp(stamps[0], state.game.models);\n          },\n          (model) => {\n            if(model.state.stamp === event['click#'].target.state.stamp) return null;\n            \n            return state.event('Game.command.execute',\n                               'onModels', [ 'setB2B',\n                                             [state.factions, event['click#'].target],\n                                             stamps\n                                           ]);\n          }\n        )();\n      };\n      model_actions.openEditLabel = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          () => {\n            return gameModelsService.findStamp(stamps[0], state.game.models);\n          },\n          (model) => {\n            state.changeEvent('Game.editLabel.open', model);\n          }\n        )();\n      };\n      model_actions.openEditDamage = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          () => {\n            return gameModelsService.findStamp(stamps[0], state.game.models);\n          },\n          (model) => {\n            state.changeEvent('Game.editDamage.toggle', model);\n          }\n        )();\n      };\n\n      let model_default_bindings = {\n        'createAoEOnModel': 'ctrl+a',\n        'createSprayOnModel': 'ctrl+s',\n        'selectAllUnit': 'ctrl+u',\n        'selectAllFriendly': 'ctrl+f',\n        'setB2B': 'ctrl+shift+clickModel',\n        'openEditLabel': 'shift+l',\n        'openEditDamage': 'shift+d'\n      };\n      let model_bindings = R.extend(Object.create(modelsModeService.bindings),\n                                    model_default_bindings);\n\n      let model_mode = {\n        onEnter: () => { },\n        onLeave: () => { },\n        name: 'ModelBase',\n        actions: model_actions,\n        buttons: [],\n        bindings: model_bindings\n      };\n      settingsService.register('Bindings',\n                               model_mode.name,\n                               model_default_bindings,\n                               (bs) => {\n                                 R.extend(model_mode.bindings, bs);\n                               });\n      return model_mode;\n    }\n  ]);\n"]}