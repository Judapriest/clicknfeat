{"version":3,"sources":["default.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,aADX,EAC0B,uBAD1B,EADU;;AAIV,0BAAwB,OAAxB,GAAkC,CAChC,OADgC,EAEhC,UAFgC,EAGhC,YAHgC;;;AAMhC,yBANgC;;;AAShC,wBATgC,CAAlC,CAJU;AAeV,WAAS,uBAAT,CAAiC,UAAjC,EACiC,aADjC,EAEiC,eAFjC;;;AAKiC,4BALjC;;;AAQiC,2BARjC,EAQ4D;AAC1D,QAAM,kBAAkB,OAAO,MAAP,CAAc,gBAAgB,OAAhB,CAAhC;;;;AADoD,mBAK1D,CAAgB,cAAhB,GAAiC,cAAjC,CAL0D;AAM1D,oBAAgB,uBAAhB,GAA0C,uBAA1C,CAN0D;AAO1D,oBAAgB,aAAhB,GAAgC,aAAhC;;;;;;;AAP0D,QAcpD,2BAA2B;;;;;;AAM/B,sBAAgB,eAAhB;AACA,+BAAyB,oBAAzB;AACA,qBAAe,cAAf;KARI,CAdoD;AAwB1D,QAAM,mBAAmB,EAAE,MAAF,CAAS,OAAO,MAAP,CAAc,gBAAgB,QAAhB,CAAvB,EACS,wBADT,CAAnB,CAxBoD;AA0B1D,QAAM,kBAAkB,EAAlB,CA1BoD;AA2B1D,QAAM,eAAe;AACnB,YAAM,SAAN;AACA,eAAS,OAAT;AACA,eAAS,eAAT;AACA,eAAS,eAAT;AACA,gBAAU,gBAAV;KALI,CA3BoD;AAkC1D,eAAW,YAAX,CAAwB,YAAxB,EAlC0D;AAmC1D,kBAAc,QAAd,CAAuB,UAAvB,EACuB,aAAa,IAAb,EACA,wBAFvB,EAGuB,UAAC,EAAD,EAAQ;AACN,QAAE,MAAF,CAAS,aAAa,QAAb,EAAuB,EAAhC,EADM;KAAR,CAHvB,CAnC0D;AAyC1D,WAAO,YAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAzC0D,aAoFjD,cAAT,CAAwB,KAAxB,EAA+B,KAA/B,EAAsC;AACpC,aAAO,EAAE,OAAF,GACL,uBAAuB,KAAvB,CADK,EAEL;eAAM,MAAM,MAAN,CACJ,aADI,EACW,EAAE,QAAF,CAAW,oBAAX,CADX,EAEJ,2BAA2B,IAA3B,CACE,OADF,EAEE,CAAC,MAAM,QAAN,EAAgB,MAAhB,CAAuB,KAAvB,CAA6B,KAA7B,CAFH,EAGE,KAHF,CAFI;OAAN,CAFF,CADoC;KAAtC;AAaA,aAAS,uBAAT,CAAiC,KAAjC,EAAwC,KAAxC,EAA+C;AAC7C,aAAO,EAAE,OAAF,GACL,uBAAuB,KAAvB,CADK,EAEL;eAAM,MAAM,MAAN,CACJ,aADI,EACW,EAAE,QAAF,CAAW,oBAAX,CADX,EAEJ,2BAA2B,IAA3B,CACE,OADF,EAEE,CAAC,MAAM,QAAN,EAAgB,MAAhB,CAAuB,KAAvB,CAA6B,KAA7B,CAFH,EAGE,KAHF,CAFI;OAAN,EAQA,YAAM;AACJ,cAAM,iBAAN,CACE,2BADF,EAEE,UAFF,EAEc,MAAM,QAAN,EAAgB,MAAhB,CAFd,CADI;OAAN,CAVF,CAD6C;KAA/C;AAmBA,aAAS,aAAT,CAAuB,KAAvB,EAA8B,KAA9B,EAAqC;AACnC,aAAO,EAAE,OAAF,GACL,wBAAwB,KAAxB,CADK,EAEL;eAAM,MAAM,MAAN,CACJ,aADI,EACW,EAAE,QAAF,CAAW,mBAAX,CADX,EAEJ,0BAA0B,IAA1B,CACE,OADF,EAEE,CAAC,MAAM,QAAN,EAAgB,MAAhB,CAAuB,KAAvB,CAA6B,KAA7B,CAFH,EAGE,KAHF,CAFI;OAAN,CAFF,CADmC;KAArC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AApH0D,aAkKjD,OAAT,CAAiB,KAAjB,EAAwB;AACtB,UAAG,EAAE,KAAF,CAAQ,MAAM,IAAN,CAAW,iBAAX,CAAX,EAA0C;AACxC,eAAO,IAAP,CADwC;OAA1C;AAGA,aAAO,EAAE,MAAF,GACL;eAAM,2BACH,UADG,CACQ,KADR,EACe,MAAM,IAAN,CAAW,kBAAX;OADrB,EAEA,EAAE,UAAF,CAAa,CACX,CAAE,EAAE,CAAF,EAAK;eAAM,0BACV,UADU,CACC,KADD,EACQ,MAAM,IAAN,CAAW,iBAAX;OADd,CADI,CAAb,CAHK;;;;;AAWL,QAAE,UAAF,CAAa,CACX,CAAE,EAAE,CAAF,EAAK,EAAE,MAAF,CAAS,IAAT,CAAP,CADW,CAAb,CAXK,CAAP,CAJsB;KAAxB;AAoBA,aAAS,uBAAT,CAAiC,KAAjC,EAAwC;AACtC,aAAO;eAAM,MAAM,MAAN,CACX,aADW,EACI,EAAE,QAAF,CAAW,oBAAX,CADJ,EAEX,2BAA2B,MAA3B,CAAkC,OAAlC,EAA2C,KAA3C,CAFW;OAAN,CAD+B;KAAxC;AAMA,aAAS,sBAAT,CAAgC,KAAhC,EAAuC;AACrC,aAAO;eAAM,MAAM,MAAN,CACX,aADW,EACI,EAAE,QAAF,CAAW,mBAAX,CADJ,EAEX,0BAA0B,MAA1B,CAAiC,OAAjC,EAA0C,KAA1C,CAFW;OAAN,CAD8B;KAAvC;GApMF;CAfD,CAAD","file":"default.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('defaultMode', defaultModeModelFactory);\n\n  defaultModeModelFactory.$inject = [\n    'modes',\n    'settings',\n    'commonMode',\n    // 'game',\n    // 'template',\n    'gameTemplateSelection',\n    // 'gameModels',\n    // 'gameModelSelection',\n    'gameTerrainSelection',\n  ];\n  function defaultModeModelFactory(modesModel,\n                                   settingsModel,\n                                   commonModeModel,\n                                   // gameModel,\n                                   // templateModel,\n                                   gameTemplateSelectionModel,\n                                   // gameModelsModel,\n                                   // gameModelSelectionModel,\n                                   gameTerrainSelectionModel) {\n    const default_actions = Object.create(commonModeModel.actions);\n    // default_actions.setModelSelection = setModelSelection;\n    // default_actions.toggleModelSelection = toggleModelSelection;\n    // default_actions.modelSelectionDetail = modelSelectionDetail;\n    default_actions.selectTemplate = selectTemplate;\n    default_actions.templateSelectionDetail = templateSelectionDetail;\n    default_actions.selectTerrain = selectTerrain;\n    // default_actions.enterRulerMode = enterRulerMode;\n    // default_actions.enterLosMode = enterLosMode;\n    // default_actions.dragStartMap = dragStartMap;\n    // default_actions.dragMap = dragMap;\n    // default_actions.dragEndMap = dragEndMap;\n\n    const default_default_bindings = {\n      // enterRulerMode: 'ctrl+r',\n      // enterLosMode: 'ctrl+l',\n      // setModelSelection: 'clickModel',\n      // toggleModelSelection: 'ctrl+clickModel',\n      // modelSelectionDetail: 'rightClickModel',\n      selectTemplate: 'clickTemplate',\n      templateSelectionDetail: 'rightClickTemplate',\n      selectTerrain: 'clickTerrain'\n    };\n    const default_bindings = R.extend(Object.create(commonModeModel.bindings),\n                                      default_default_bindings);\n    const default_buttons = [];\n    const default_mode = {\n      name: 'Default',\n      onEnter: onEnter,\n      actions: default_actions,\n      buttons: default_buttons,\n      bindings: default_bindings\n    };\n    modesModel.registerMode(default_mode);\n    settingsModel.register('Bindings',\n                           default_mode.name,\n                           default_default_bindings,\n                           (bs) => {\n                             R.extend(default_mode.bindings, bs);\n                           });\n    return default_mode;\n\n    // function setModelSelection(state, event) {\n    //   return R.pipePromise(\n    //     clearTemplateSelection$(state),\n    //     clearTerrainSelection$(state),\n    //     () => {\n    //       const stamp = event['click#'].target.state.stamp;\n    //       return state.event('Game.command.execute',\n    //                          'setModelSelection', ['set', [stamp]]);\n    //     }\n    //   )();\n    // }\n    // function toggleModelSelection(state, event) {\n    //   return R.pipePromise(\n    //     clearTemplateSelection$(state),\n    //     clearTerrainSelection$(state),\n    //     () => {\n    //       const stamp = event['click#'].target.state.stamp;\n    //       if(gameModelSelectionModel.in('local', stamp, state.game.model_selection)) {\n    //         return state.event('Game.command.execute',\n    //                            'setModelSelection', ['removeFrom', [stamp]]);\n    //       }\n    //       else {\n    //         return state.event('Game.command.execute',\n    //                            'setModelSelection', ['addTo', [stamp]]);\n    //       }\n    //     }\n    //   )();\n    // }\n    // function modelSelectionDetail(state, event) {\n    //   return R.pipePromise(\n    //     clearTemplateSelection$(state),\n    //     clearTerrainSelection$(state),\n    //     () => {\n    //       const stamp = event['click#'].target.state.stamp;\n    //       state.changeEvent('Game.selectionDetail.open',\n    //                         'model', event['click#'].target);\n    //       return state.event('Game.command.execute',\n    //                          'setModelSelection', ['set', [stamp]]);\n    //     }\n    //   )();\n    // }\n    function selectTemplate(state, event) {\n      return R.threadP()(\n        clearTerrainSelection$(state),\n        () => state.eventP(\n          'Game.update', R.lensProp('template_selection'),\n          gameTemplateSelectionModel.set$(\n            'local',\n            [event['click#'].target.state.stamp],\n            state\n          )\n        )\n      );\n    }\n    function templateSelectionDetail(state, event) {\n      return R.threadP()(\n        clearTerrainSelection$(state),\n        () => state.eventP(\n          'Game.update', R.lensProp('template_selection'),\n          gameTemplateSelectionModel.set$(\n            'local',\n            [event['click#'].target.state.stamp],\n            state\n          )\n        ),\n        () => {\n          state.queueChangeEventP(\n            'Game.selectionDetail.open',\n            'template', event['click#'].target\n          );\n        }\n      );\n    }\n    function selectTerrain(state, event) {\n      return R.threadP()(\n        clearTemplateSelection$(state),\n        () => state.eventP(\n          'Game.update', R.lensProp('terrain_selection'),\n          gameTerrainSelectionModel.set$(\n            'local',\n            [event['click#'].target.state.stamp],\n            state\n          )\n        )\n      );\n    }\n    // function enterRulerMode(state) {\n    //   return state.event('Modes.switchTo', 'Ruler');\n    // }\n    // function enterLosMode(state) {\n    //   return state.event('Modes.switchTo', 'LoS');\n    // }\n    // function dragStartMap(state, event) {\n    //   state.changeEvent('Game.dragBox.enable', event.start, event.now);\n    // }\n    // function dragMap(state, event) {\n    //   state.changeEvent('Game.dragBox.enable', event.start, event.now);\n    // }\n    // function dragEndMap(state, event) {\n    //   state.changeEvent('Game.dragBox.disable');\n    //   const top_left = {\n    //     x: Math.min(event.now.x, event.start.x),\n    //     y: Math.min(event.now.y, event.start.y)\n    //   };\n    //   const bottom_right = {\n    //     x: Math.max(event.now.x, event.start.x),\n    //     y: Math.max(event.now.y, event.start.y)\n    //   };\n    //   return R.pipeP(\n    //     gameModelsModel.findStampsBetweenPoints$(top_left, bottom_right),\n    //     function(stamps) {\n    //       if(R.isEmpty(stamps)) {\n    //         return null;\n    //       }\n    //       return state.event('Game.command.execute',\n    //                          'setModelSelection', ['set', stamps]);\n    //     }\n    //   )(state.game.models);\n    // }\n    function onEnter(state) {\n      if(R.isNil(state.game.terrain_selection)) {\n        return null;\n      }\n      return R.thread()(\n        () => gameTemplateSelectionModel\n          .checkModeP(state, state.game.template_selection),\n        R.condErrorP([\n          [ R.T, () => gameTerrainSelectionModel\n            .checkModeP(state, state.game.terrain_selection) ]\n        ]),\n        // R.condErrorP([\n        //   [ R.T, () => gameModelSelectionModel\n        //     .checkModeP(state, state.game.model_selection) ]\n        // ]),\n        R.condErrorP([\n          [ R.T, R.always(null) ]\n        ])\n      );\n    }\n    function clearTemplateSelection$(state) {\n      return () => state.eventP(\n        'Game.update', R.lensProp('template_selection'),\n        gameTemplateSelectionModel.clear$('local', state)\n      );\n    }\n    function clearTerrainSelection$(state) {\n      return () => state.eventP(\n        'Game.update', R.lensProp('terrain_selection'),\n        gameTerrainSelectionModel.clear$('local', state)\n      );\n    }\n  }\n})();\n"]}