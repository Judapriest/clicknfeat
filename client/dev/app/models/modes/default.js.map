{"version":3,"sources":["default.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,aADX,EAC0B,uBAD1B,EADU;;AAIV,0BAAwB,OAAxB,GAAkC,CAChC,OADgC;;AAGhC,cAHgC,CAAlC,CAJU;;;;;;;;AAeV,WAAS,uBAAT,CAAiC,YAAjC;;AAEiC,mBAFjC,EAEoD;;;;;;;AAOlD,QAAM,gBAAgB;AACpB,mBAAa,CAAb;KADI,CAP4C;AAUlD,QAAM,QAAQ,EAAE,KAAF,CAAQ,aAAR,CAAR;;;;;;;AAV4C,QAiB5C,kBAAkB,OAAO,MAAP,CAAc,kBAAkB,OAAlB,CAAhC;;;;;;;;;;;;;AAjB4C,QA8B5C,2BAA2B;AAC/B,sBAAgB,QAAhB;AACA,oBAAc,QAAd;AACA,yBAAmB,YAAnB;AACA,4BAAsB,iBAAtB;AACA,4BAAsB,iBAAtB;AACA,sBAAgB,eAAhB;AACA,+BAAyB,oBAAzB;AACA,qBAAe,cAAf;KARI,CA9B4C;AAwClD,QAAM,mBAAmB,EAAE,MAAF,CAAS,OAAO,MAAP,CAAc,kBAAkB,QAAlB,CAAvB,EACS,wBADT,CAAnB,CAxC4C;AA0ClD,QAAM,kBAAkB,EAAlB,CA1C4C;AA2ClD,QAAM,eAAe;AACnB,YAAM,SAAN;AACA,eAAS,OAAT;AACA,eAAS,eAAT;AACA,eAAS,eAAT;AACA,gBAAU,gBAAV;AACA,aAAO;eAAM;OAAN;KANH,CA3C4C;AAmDlD,iBAAa,YAAb,CAA0B,YAA1B;;;;;;;AAnDkD,WA0D3C,YAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA1DkD,aAwLzC,OAAT,CAAiB,KAAjB,EAAwB;;;;;;;;;;;;KAAxB;GA1LF;CAfD,CAAD","file":"default.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('defaultMode', defaultModeModelFactory);\n\n  defaultModeModelFactory.$inject = [\n    'modes',\n    // 'settings',\n    'commonMode',\n    // 'game',\n    // 'template',\n    // 'gameTemplateSelection',\n    // 'gameModels',\n    // 'gameModelSelection',\n    // 'gameTerrainSelection',\n  ];\n  function defaultModeModelFactory(modesService,\n                                   // settingsService,\n                                   commonModeService) {\n    // gameService,\n    // templateService,\n    // gameTemplateSelectionService,\n    // gameModelsService,\n    // gameModelSelectionService,\n    // gameTerrainSelectionService) {\n    const DEFAULT_MOVES = {\n      DragEpsilon: 3\n    };\n    const MOVES = R.clone(DEFAULT_MOVES);\n    // settingsService.register('Moves',\n    //                          'Default',\n    //                          DEFAULT_MOVES,\n    //                          (moves) => {\n    //                            R.extend(MOVES, moves);\n    //                          });\n    const default_actions = Object.create(commonModeService.actions);\n    // default_actions.setModelSelection = setModelSelection;\n    // default_actions.toggleModelSelection = toggleModelSelection;\n    // default_actions.modelSelectionDetail = modelSelectionDetail;\n    // default_actions.selectTemplate = selectTemplate;\n    // default_actions.templateSelectionDetail = templateSelectionDetail;\n    // default_actions.selectTerrain = selectTerrain;\n    // default_actions.enterRulerMode = enterRulerMode;\n    // default_actions.enterLosMode = enterLosMode;\n    // default_actions.dragStartMap = dragStartMap;\n    // default_actions.dragMap = dragMap;\n    // default_actions.dragEndMap = dragEndMap;\n\n    const default_default_bindings = {\n      enterRulerMode: 'ctrl+r',\n      enterLosMode: 'ctrl+l',\n      setModelSelection: 'clickModel',\n      toggleModelSelection: 'ctrl+clickModel',\n      modelSelectionDetail: 'rightClickModel',\n      selectTemplate: 'clickTemplate',\n      templateSelectionDetail: 'rightClickTemplate',\n      selectTerrain: 'clickTerrain'\n    };\n    const default_bindings = R.extend(Object.create(commonModeService.bindings),\n                                      default_default_bindings);\n    const default_buttons = [];\n    const default_mode = {\n      name: 'Default',\n      onEnter: onEnter,\n      actions: default_actions,\n      buttons: default_buttons,\n      bindings: default_bindings,\n      moves: () => MOVES\n    };\n    modesService.registerMode(default_mode);\n    // settingsService.register('Bindings',\n    //                          default_mode.name,\n    //                          default_default_bindings,\n    //                          (bs) => {\n    //                            R.extend(default_mode.bindings, bs);\n    //                          });\n    return default_mode;\n\n    // function clearTemplateSelection$(state) {\n    //   return () => {\n    //     return state.event('Game.update', R.lensProp('template_selection'),\n    //                        gameTemplateSelectionService.clear$('local', state));\n    //   };\n    // }\n    // function clearTerrainSelection$(state) {\n    //   return () => {\n    //     return state.event('Game.update', R.lensProp('terrain_selection'),\n    //                        gameTerrainSelectionService.clear$('local', state));\n    //   };\n    // }\n    // function setModelSelection(state, event) {\n    //   return R.pipePromise(\n    //     clearTemplateSelection$(state),\n    //     clearTerrainSelection$(state),\n    //     () => {\n    //       const stamp = event['click#'].target.state.stamp;\n    //       return state.event('Game.command.execute',\n    //                          'setModelSelection', ['set', [stamp]]);\n    //     }\n    //   )();\n    // }\n    // function toggleModelSelection(state, event) {\n    //   return R.pipePromise(\n    //     clearTemplateSelection$(state),\n    //     clearTerrainSelection$(state),\n    //     () => {\n    //       const stamp = event['click#'].target.state.stamp;\n    //       if(gameModelSelectionService.in('local', stamp, state.game.model_selection)) {\n    //         return state.event('Game.command.execute',\n    //                            'setModelSelection', ['removeFrom', [stamp]]);\n    //       }\n    //       else {\n    //         return state.event('Game.command.execute',\n    //                            'setModelSelection', ['addTo', [stamp]]);\n    //       }\n    //     }\n    //   )();\n    // }\n    // function modelSelectionDetail(state, event) {\n    //   return R.pipePromise(\n    //     clearTemplateSelection$(state),\n    //     clearTerrainSelection$(state),\n    //     () => {\n    //       const stamp = event['click#'].target.state.stamp;\n    //       state.changeEvent('Game.selectionDetail.open',\n    //                         'model', event['click#'].target);\n    //       return state.event('Game.command.execute',\n    //                          'setModelSelection', ['set', [stamp]]);\n    //     }\n    //   )();\n    // }\n    // function selectTemplate(state, event) {\n    //   return R.pipePromise(\n    //     clearTerrainSelection$(state),\n    //     () => {\n    //       return state\n    //         .event('Game.update', R.lensProp('template_selection'),\n    //                gameTemplateSelectionService.set$('local',\n    //                                                  [event['click#'].target.state.stamp],\n    //                                                  state));\n    //     }\n    //   )();\n    // }\n    // function templateSelectionDetail(state, event) {\n    //   return R.pipePromise(\n    //     clearTerrainSelection$(state),\n    //     () => {\n    //       return state\n    //         .event('Game.update', R.lensProp('template_selection'),\n    //                gameTemplateSelectionService.set$('local',\n    //                                                  [event['click#'].target.state.stamp],\n    //                                                  state));\n    //     },\n    //     () => { return state.changeEvent('Game.selectionDetail.open',\n    //                                      'template', event['click#'].target); }\n    //   )();\n    // }\n    // function selectTerrain(state, event) {\n    //   return R.pipePromise(\n    //     clearTemplateSelection$(state),\n    //     () => {\n    //       return state\n    //         .event('Game.update', R.lensProp('terrain_selection'),\n    //                gameTerrainSelectionService.set$('local',\n    //                                                 [event['click#'].target.state.stamp],\n    //                                                 state));\n    //     }\n    //   )();\n    // }\n    // function enterRulerMode(state) {\n    //   return state.event('Modes.switchTo', 'Ruler');\n    // }\n    // function enterLosMode(state) {\n    //   return state.event('Modes.switchTo', 'LoS');\n    // }\n    // function dragStartMap(state, event) {\n    //   state.changeEvent('Game.dragBox.enable', event.start, event.now);\n    // }\n    // function dragMap(state, event) {\n    //   state.changeEvent('Game.dragBox.enable', event.start, event.now);\n    // }\n    // function dragEndMap(state, event) {\n    //   state.changeEvent('Game.dragBox.disable');\n    //   const top_left = {\n    //     x: Math.min(event.now.x, event.start.x),\n    //     y: Math.min(event.now.y, event.start.y)\n    //   };\n    //   const bottom_right = {\n    //     x: Math.max(event.now.x, event.start.x),\n    //     y: Math.max(event.now.y, event.start.y)\n    //   };\n    //   return R.pipeP(\n    //     gameModelsService.findStampsBetweenPoints$(top_left, bottom_right),\n    //     function(stamps) {\n    //       if(R.isEmpty(stamps)) {\n    //         return null;\n    //       }\n    //       return state.event('Game.command.execute',\n    //                          'setModelSelection', ['set', stamps]);\n    //     }\n    //   )(state.game.models);\n    // }\n    function onEnter(state) {\n      // gameTemplateSelectionService\n      //   .checkMode(state, state.game.template_selection)\n      //   .catch(() => {\n      //     return gameTerrainSelectionService\n      //       .checkMode(state, state.game.terrain_selection);\n      //   })\n      //   .catch(() => {\n      //     return gameModelSelectionService\n      //       .checkMode(state, state.game.model_selection);\n      //   })\n      //   .catch(R.always(null));\n    }\n  }\n})();\n"]}