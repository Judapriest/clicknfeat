{"version":3,"sources":["default.es6"],"names":[],"mappings":"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","file":"default.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('defaultMode', defaultModeModelFactory);\n\n  defaultModeModelFactory.$inject = [\n    'appState',\n    'modes',\n    'settings',\n    'commonMode',\n    // 'gameModels',\n    // 'gameModelSelection',\n    'gameTemplateSelection',\n    'gameTerrainSelection',\n  ];\n  const TERRAIN_SELECTION_LENS = R.lensPath(['game','terrain_selection']);\n  const TEMPLATE_SELECTION_LENS = R.lensPath(['game','template_selection']);\n  function defaultModeModelFactory(appStateService,\n                                   modesModel,\n                                   settingsModel,\n                                   commonModeModel,\n                                   // gameModelsModel,\n                                   // gameModelSelectionModel,\n                                   gameTemplateSelectionModel,\n                                   gameTerrainSelectionModel) {\n    const default_actions = Object.create(commonModeModel.actions);\n    // default_actions.setModelSelection = setModelSelection;\n    // default_actions.toggleModelSelection = toggleModelSelection;\n    // default_actions.modelSelectionDetail = modelSelectionDetail;\n    default_actions.selectTemplate = selectTemplate;\n    default_actions.templateSelectionDetail = templateSelectionDetail;\n    default_actions.selectTerrain = selectTerrain;\n    // default_actions.enterRulerMode = enterRulerMode;\n    // default_actions.enterLosMode = enterLosMode;\n    // default_actions.dragStartMap = dragStartMap;\n    // default_actions.dragMap = dragMap;\n    // default_actions.dragEndMap = dragEndMap;\n\n    const default_default_bindings = {\n      enterRulerMode: 'ctrl+r',\n      enterLosMode: 'ctrl+l',\n      setModelSelection: 'clickModel',\n      toggleModelSelection: 'ctrl+clickModel',\n      modelSelectionDetail: 'rightClickModel',\n      selectTemplate: 'clickTemplate',\n      templateSelectionDetail: 'rightClickTemplate',\n      selectTerrain: 'clickTerrain'\n    };\n    const default_bindings = R.extend(Object.create(commonModeModel.bindings),\n                                      default_default_bindings);\n    const default_buttons = [];\n    const default_mode = {\n      name: 'Default',\n      actions: default_actions,\n      buttons: default_buttons,\n      bindings: default_bindings\n    };\n    modesModel.registerMode(default_mode);\n    settingsModel.register('Bindings',\n                           default_mode.name,\n                           default_default_bindings,\n                           (bs) => {\n                             R.extend(default_mode.bindings, bs);\n                           });\n    return default_mode;\n\n    // function setModelSelection(state, event) {\n    //   return R.threadP()(\n    //     clearTemplateSelection$(state),\n    //     clearTerrainSelection$(state),\n    //     () => event['click#'].target.state.stamp,\n    //     (stamp) => state.eventP('Game.command.execute',\n    //                             'setModelSelection',\n    //                             ['set', [stamp]])\n    //   );\n    // }\n    // function toggleModelSelection(state, event) {\n    //   return R.threadP()(\n    //     clearTemplateSelection$(state),\n    //     clearTerrainSelection$(state),\n    //     () => event['click#'].target.state.stamp,\n    //     (stamp) => {\n    //       if(gameModelSelectionModel.in('local', stamp,\n    //                                     state.game.model_selection)) {\n    //         return state.eventP('Game.command.execute',\n    //                             'setModelSelection',\n    //                             ['removeFrom', [stamp]]);\n    //       }\n    //       else {\n    //         return state.eventP('Game.command.execute',\n    //                             'setModelSelection',\n    //                             ['addTo', [stamp]]);\n    //       }\n    //     }\n    //   );\n    // }\n    // function modelSelectionDetail(state, event) {\n    //   return R.threadP()(\n    //     clearTemplateSelection$(state),\n    //     clearTerrainSelection$(state),\n    //     () => event['click#'].target.state.stamp,\n    //     (stamp) => {\n    //       state.queueChangeEventP('Game.selectionDetail.open',\n    //                               'model', event['click#'].target);\n    //       return state.eventP('Game.command.execute',\n    //                           'setModelSelection', ['set', [stamp]]);\n    //     }\n    //   );\n    // }\n    function selectTemplate(state, event) {\n      return R.thread(state)(\n        clearTerrainSelection,\n        R.over(\n          TEMPLATE_SELECTION_LENS,\n          gameTemplateSelectionModel.set$(\n            'local',\n            [event['click#'].target.state.stamp]\n          )\n        )\n      );\n    }\n    function templateSelectionDetail(state, event) {\n      appStateService.emit(\n        'Game.selectionDetail.open',\n        'template', event['click#'].target\n      );\n      return selectTemplate(state, event);\n    }\n    function selectTerrain(state, event) {\n      return R.thread(state)(\n        clearTemplateSelection,\n        R.over(\n          TERRAIN_SELECTION_LENS,\n          gameTerrainSelectionModel.set$(\n            'local',\n            [event['click#'].target.state.stamp]\n          )\n        )\n      );\n    }\n    // function enterRulerMode(state) {\n    //   return state.eventP('Modes.switchTo', 'Ruler');\n    // }\n    // function enterLosMode(state) {\n    //   return state.eventP('Modes.switchTo', 'Los');\n    // }\n    // function dragStartMap(state, event) {\n    //   state.queueChangeEventP('Game.dragBox.enable', event.start, event.now);\n    // }\n    // function dragMap(state, event) {\n    //   state.queueChangeEventP('Game.dragBox.enable', event.start, event.now);\n    // }\n    // function dragEndMap(state, event) {\n    //   state.queueChangeEventP('Game.dragBox.disable');\n    //   const top_left = {\n    //     x: Math.min(event.now.x, event.start.x),\n    //     y: Math.min(event.now.y, event.start.y)\n    //   };\n    //   const bottom_right = {\n    //     x: Math.max(event.now.x, event.start.x),\n    //     y: Math.max(event.now.y, event.start.y)\n    //   };\n    //   return R.threadP(state.game)(\n    //     R.prop('models'),\n    //     (models) => gameModelsModel\n    //       .findStampsBetweenPointsP(top_left, bottom_right, models)\n    //       .catch(R.always([])),\n    //     (stamps) => {\n    //       if(R.isEmpty(stamps)) return null;\n    //       return state.eventP('Game.command.execute',\n    //                           'setModelSelection',\n    //                           ['set', stamps]);\n    //     }\n    //   );\n    // }\n    function clearTemplateSelection(state) {\n      return R.over(\n        TEMPLATE_SELECTION_LENS,\n        R.unless(\n          gameTemplateSelectionModel.isEmpty$('local'),\n          gameTemplateSelectionModel.clear$('local')\n        ),\n        state\n      );\n    }\n    function clearTerrainSelection(state) {\n      return R.over(\n        TERRAIN_SELECTION_LENS,\n        R.unless(\n          gameTerrainSelectionModel.isEmpty$('local'),\n          gameTerrainSelectionModel.clear$('local')\n        ),\n        state\n      );\n    }\n  }\n})();\n"]}