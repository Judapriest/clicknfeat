{"version":3,"sources":["segment.es6"],"names":[],"mappings":"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","file":"segment.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('segmentMode', segmentModeModelFactory);\n\n  segmentModeModelFactory.$inject = [\n    'modes',\n    'settings',\n    'commonMode',\n    'game',\n    'gameModels',\n    'gameModelSelection',\n  ];\n  function segmentModeModelFactory(modesModel,\n                                   settingsModel,\n                                   commonModeModel,\n                                   gameModel,\n                                   gameModelsModel,\n                                   gameModelSelectionModel) {\n    return function buildSegmentModeModel(type, gameSegmentModel, default_bindings) {\n      const segment_actions = Object.create(commonModeModel.actions);\n      segment_actions[`exit${s.capitalize(type)}Mode`] =\n        commonModeModel.actions.modeBackToDefault;\n      segment_actions.dragStartMap = segmentDragStartMap;\n      segment_actions.dragMap = segmentDragMap;\n      segment_actions.dragEndMap = segmentDragEndMap;\n      segment_actions.dragStartTemplate = segment_actions.dragStartMap;\n      segment_actions.dragTemplate = segment_actions.dragMap;\n      segment_actions.dragEndTemplate = segment_actions.dragEndMap;\n      segment_actions.dragStartModel = segment_actions.dragStartMap;\n      segment_actions.dragModel = segment_actions.dragMap;\n      segment_actions.dragEndModel = segment_actions.dragEndMap;\n\n      const segment_bindings = R.extend(Object.create(commonModeModel.bindings),\n                                        default_bindings);\n      const segment_buttons = [];\n      const segment_mode = {\n        onEnter: segmentOnEnter,\n        onLeave: segmentOnLeave,\n        name: s.capitalize(type),\n        actions: segment_actions,\n        buttons: segment_buttons,\n        bindings: segment_bindings\n      };\n      modesModel.registerMode(segment_mode);\n      settingsModel.register('Bindings',\n                             segment_mode.name,\n                             default_bindings,\n                             (bs) => {\n                               R.extend(segment_mode.bindings, bs);\n                             });\n      return segment_mode;\n\n      function segmentDragStartMap(state, drag) {\n        return state.eventP('Game.update', R.lensProp(type),\n                            gameSegmentModel.setLocal$(drag.start, drag.now,\n                                                       state, state.game));\n      }\n      function segmentDragMap(state, drag) {\n        return state.eventP('Game.update', R.lensProp(type),\n                            gameSegmentModel.setLocal$(drag.start, drag.now,\n                                                       state, state.game));\n      }\n      function segmentDragEndMap(state, drag) {\n        return state.eventP('Game.command.execute',\n                            `set${s.capitalize(type)}`, [\n                              'setRemote',\n                              [drag.start, drag.now]\n                            ]);\n      }\n      function segmentOnEnter(state) {\n        return R.threadP(state)(\n          R.path(['game','model_selection']),\n          gameModelSelectionModel.get$('local'),\n          (stamps) => {\n            if(R.length(stamps) !== 1) return null;\n\n            return gameModelsModel\n              .findStampP(stamps[0], state.game.models)\n              .catch(R.always(null));\n          },\n          (model) => {\n            if(R.isNil(model)) return null;\n\n            return state\n              .eventP('Game.command.execute',\n                      `set${s.capitalize(type)}`, [\n                        'setOriginResetTarget',\n                        [model]\n                      ]);\n          }\n        );\n      }\n      function segmentOnLeave(state) {\n        state.queueChangeEventP(`Game.${type}.remote.change`);\n      }\n    };\n  }\n})();\n"]}