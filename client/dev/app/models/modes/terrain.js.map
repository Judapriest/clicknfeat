{"version":3,"sources":["terrain.es6"],"names":[],"mappings":"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","file":"terrain.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('terrainMode', terrainModeModelFactory);\n\n  terrainModeModelFactory.$inject = [\n    'modes',\n    'settings',\n    'defaultMode',\n    'terrain',\n    'game',\n    'gameTerrains',\n    'gameTerrainSelection',\n  ];\n  function terrainModeModelFactory(modesModel,\n                                   settingsModel,\n                                   defaultModeModel,\n                                   terrainModel,\n                                   gameModel,\n                                   gameTerrainsModel,\n                                   gameTerrainSelectionModel) {\n    const terrain_actions = Object.create(defaultModeModel.actions);\n    terrain_actions.modeBackToDefault = clearTerrainSelection;\n    terrain_actions.clickMap = clearTerrainSelection;\n    terrain_actions.rightClickMap = clearTerrainSelection;\n    terrain_actions.copySelection = copySelection;\n    terrain_actions.delete = doDelete;\n    terrain_actions.toggleLock = toggleLock;\n\n    const moves = [\n      ['moveFront', 'up'],\n      ['moveBack', 'down'],\n      ['rotateLeft', 'left'],\n      ['rotateRight', 'right'],\n    ];\n    R.forEach(buildMove, moves);\n    const shifts = [\n      ['shiftUp', 'ctrl+up', 'shiftDown'],\n      ['shiftDown', 'ctrl+down', 'shiftUp'],\n      ['shiftLeft', 'ctrl+left', 'shiftRight'],\n      ['shiftRight', 'ctrl+right', 'shiftLeft'],\n    ];\n    R.forEach(buildShift, shifts);\n    buildDrag();\n\n    const terrain_default_bindings = {\n      'clickMap': 'clickMap',\n      'rightClickMap': 'rightClickMap',\n      'copySelection': 'ctrl+c',\n      'delete': 'del',\n      'toggleLock': 'l'\n    };\n    R.forEach(buildMoveBindings, moves);\n    R.forEach(buildShiftBindings, shifts);\n    const terrain_bindings = R.extend(Object.create(defaultModeModel.bindings),\n                                    terrain_default_bindings);\n    const terrain_buttons = [\n      [ 'Delete', 'delete' ],\n      [ 'Lock/Unlock', 'toggleLock' ],\n    ];\n    const terrain_mode = {\n      onEnter: () => { },\n      onLeave: () => { },\n      name: 'Terrain',\n      actions: terrain_actions,\n      buttons: terrain_buttons,\n      bindings: terrain_bindings\n    };\n\n    modesModel.registerMode(terrain_mode);\n    settingsModel.register('Bindings',\n                           terrain_mode.name,\n                           terrain_default_bindings,\n                           (bs) => {\n                             R.extend(terrain_mode.bindings, bs);\n                           });\n    return terrain_mode;\n\n    function clearTerrainSelection(state) {\n      return state.eventP('Game.update', R.lensProp('terrain_selection'),\n                         gameTerrainSelectionModel.clear$('local', state));\n    }\n    function copySelection(state) {\n      const stamps = gameTerrainSelectionModel\n            .get('local', state.game.terrain_selection);\n      return R.threadP(state.game.terrains)(\n        gameTerrainsModel.copyStampsP$(stamps),\n        (copy) => {\n          state.create = copy;\n          return state.eventP('Modes.switchTo', 'CreateTerrain');\n        }\n      );\n    }\n    function doDelete(state) {\n      const stamps = gameTerrainSelectionModel\n            .get('local', state.game.terrain_selection);\n      return state.eventP('Game.command.execute',\n                          'deleteTerrain', [stamps]);\n    }\n    function toggleLock(state) {\n      const stamps = gameTerrainSelectionModel\n            .get('local', state.game.terrain_selection);\n      return R.threadP(state.game.terrains)(\n        gameTerrainsModel.findStampP$(stamps[0]),\n        (terrain) => {\n          const is_locked = terrainModel.isLocked(terrain);\n          return state.eventP('Game.command.execute',\n                              'lockTerrains', [!is_locked, stamps]);\n        }\n      );\n    }\n    function buildMove([move]) {\n      terrain_actions[move] = (state) => {\n        const stamps = gameTerrainSelectionModel\n              .get('local', state.game.terrain_selection);\n        return state.eventP('Game.command.execute',\n                            'onTerrains', [ `${move}P`, [false], stamps ]);\n      };\n      terrain_actions[move+'Small'] = (state) => {\n        const stamps = gameTerrainSelectionModel\n              .get('local', state.game.terrain_selection);\n        return state.eventP('Game.command.execute',\n                            'onTerrains', [ `${move}P`, [true], stamps ]);\n      };\n    }\n    function buildShift([shift, key, flip_shift]) {\n      terrain_actions[shift] = (state) => {\n        const stamps = gameTerrainSelectionModel\n              .get('local', state.game.terrain_selection);\n        const terrain_shift = ( R.path(['ui_state', 'flip_map'], state)\n                                ? flip_shift\n                                : shift\n                              );\n        return state.eventP('Game.command.execute',\n                            'onTerrains', [ `${terrain_shift}P`, [false], stamps ]);\n      };\n      terrain_actions[shift+'Small'] = (state) => {\n        const stamps = gameTerrainSelectionModel\n              .get('local', state.game.terrain_selection);\n        const terrain_shift = ( R.path(['ui_state', 'flip_map'], state)\n                                ? flip_shift\n                                : shift\n                              );\n        return state.eventP('Game.command.execute',\n                            'onTerrains', [ `${terrain_shift}P`, [true], stamps ]);\n      };\n    }\n\n    function buildDrag() {\n      let drag_terrain_start_state;\n      terrain_actions.dragStartTerrain = (state, event) => {\n        return R.threadP(event.target)(\n          R.rejectIf(terrainModel.isLocked, 'Terrain is locked'),\n          () => {\n            drag_terrain_start_state = R.clone(event.target.state);\n            return terrain_actions.dragTerrain(state, event);\n          },\n          () => {\n            return state\n              .eventP('Game.update',\n                      R.lensProp('terrain_selection'),\n                      gameTerrainSelectionModel.set$('local', [event.target.state.stamp], state));\n          }\n        );\n      };\n      defaultModeModel.actions.dragStartTerrain = terrain_actions.dragStartTerrain;\n      terrain_actions.dragTerrain = (state, event) => {\n        return R.threadP(event.target)(\n          R.rejectIf(terrainModel.isLocked, 'Terrain is locked'),\n          () => {\n            updateStateWithDelta(event, event.target.state);\n            state.queueChangeEventP(`Game.terrain.change.${event.target.state.stamp}`);\n          }\n        );\n      };\n      terrain_actions.dragEndTerrain = (state, event) => {\n        return R.threadP(event.target)(\n          R.rejectIf(terrainModel.isLocked, 'Terrain is locked'),\n          () => {\n            event.target.state = R.clone(drag_terrain_start_state);\n            const end_state = R.clone(drag_terrain_start_state);\n            updateStateWithDelta(event, end_state);\n            return state.eventP('Game.command.execute',\n                                'onTerrains', [ 'setPositionP',\n                                                [end_state],\n                                                [event.target.state.stamp]\n                                              ]);\n          }\n        );\n      };\n      function updateStateWithDelta(event, state) {\n        const dx = event.now.x - event.start.x;\n        const dy = event.now.y - event.start.y;\n        state.x = drag_terrain_start_state.x + dx;\n        state.y = drag_terrain_start_state.y + dy;\n      }\n    }\n\n    function buildMoveBindings([move, keys]) {\n      terrain_default_bindings[move] = keys;\n      terrain_default_bindings[move+'Small'] = 'shift+'+keys;\n    }\n    function buildShiftBindings([shift, keys]) {\n      terrain_default_bindings[shift] = keys;\n      terrain_default_bindings[shift+'Small'] = 'shift+'+keys;\n    }\n  }\n})();\n"]}