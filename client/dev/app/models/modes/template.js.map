{"version":3,"sources":["template.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,cADX,EAC2B,wBAD3B,EADU;;AAIV,2BAAyB,OAAzB,GAAmC,CACjC,SADiC,EAEjC,aAFiC,EAGjC,OAHiC,EAIjC,UAJiC,EAKjC,UALiC,EAMjC,eANiC,EAOjC,uBAPiC,CAAnC,CAJU;AAaV,WAAS,wBAAT,CAAkC,cAAlC,EACkC,gBADlC,EAEkC,UAFlC,EAGkC,aAHlC,EAIkC,aAJlC,EAKkC,kBALlC,EAMkC,0BANlC,EAM8D;AAC5D,QAAM,gBAAgB,iBAAiB,UAAjB,EACiB,aADjB,EAEiB,kBAFjB,EAGiB,0BAHjB,CAAhB,CADsD;AAK5D,kBAAc,OAAd,CAAsB,aAAtB,GAAsC,qBAAtC,CAL4D;AAM5D,kBAAc,QAAd,CAAuB,aAAvB,GAAuC,SAAvC,CAN4D;;AAQ5D,eAAW,YAAX,CAAwB,aAAxB,EAR4D;AAS5D,kBAAc,QAAd,CAAuB,UAAvB,EACuB,cAAc,IAAd,EACA,cAAc,QAAd,EACA,UAAC,EAAD,EAAQ;AACN,QAAE,MAAF,CAAS,cAAc,QAAd,EAAwB,EAAjC,EADM;KAAR,CAHvB,CAT4D;AAe5D,WAAO,aAAP,CAf4D;;AAiB5D,aAAS,qBAAT,CAA+B,KAA/B,EAAsC;AACpC,UAAM,SAAS,2BACN,GADM,CACF,OADE,EACO,MAAM,IAAN,CAAW,kBAAX,CADhB,CAD8B;AAGpC,UAAM,WAAW,EAAE,MAAF,CAAS,KAAT,EACf,EAAE,IAAF,CAAO,CAAC,MAAD,EAAQ,WAAR,CAAP,CADe,EAEf,mBAAmB,UAAnB,CAA8B,OAAO,CAAP,CAA9B,CAFe,CAAX,CAH8B;AAOpC,UAAG,EAAE,KAAF,CAAQ,QAAR,CAAH,EAAsB,OAAO,IAAP,CAAtB;AACA,aAAO,EAAE,SAAF,CAAY,CAAC,MAAD,EAAQ,YAAR,CAAZ,EAAmC;AACxC,cAAM,UAAN,EAAkB,SAAS,QAAT;OADb,EAEJ,KAFI,CAAP,CARoC;KAAtC;GAvBF;CAbD,CAAD","file":"template.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('templateMode', templateModeModelFactory);\n\n  templateModeModelFactory.$inject = [\n    'appGame',\n    'elementMode',\n    'modes',\n    'settings',\n    'template',\n    'gameTemplates',\n    'gameTemplateSelection',\n  ];\n  function templateModeModelFactory(appGameService,\n                                    elementModeModel,\n                                    modesModel,\n                                    settingsModel,\n                                    templateModel,\n                                    gameTemplatesModel,\n                                    gameTemplateSelectionModel) {\n    const template_mode = elementModeModel('template',\n                                           templateModel,\n                                           gameTemplatesModel,\n                                           gameTemplateSelectionModel);\n    template_mode.actions.openEditLabel = templateOpenEditLabel;\n    template_mode.bindings.openEditLabel = 'shift+l';\n\n    modesModel.registerMode(template_mode);\n    settingsModel.register('Bindings',\n                           template_mode.name,\n                           template_mode.bindings,\n                           (bs) => {\n                             R.extend(template_mode.bindings, bs);\n                           });\n    return template_mode;\n\n    function templateOpenEditLabel(state) {\n      const stamps = gameTemplateSelectionModel\n              .get('local', state.game.template_selection);\n      const template = R.thread(state)(\n        R.path(['game','templates']),\n        gameTemplatesModel.findStamp$(stamps[0])\n      );\n      if(R.isNil(template)) return null;\n      return R.assocPath(['view','edit_label'], {\n        type: 'template', element: template\n      }, state);\n    }\n  }\n})();\n"]}