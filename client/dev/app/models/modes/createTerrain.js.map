{"version":3,"sources":["createTerrain.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,mBADX,EACgC,6BADhC,EADU;;AAIV,gCAA8B,OAA9B,GAAwC,CACtC,OADsC,EAEtC,UAFsC,EAGtC,YAHsC,CAAxC,CAJU;AASV,WAAS,6BAAT,CAAuC,UAAvC,EACuC,aADvC,EAEuC,eAFvC,EAEwD;AACtD,QAAM,wBAAwB,OAAO,MAAP,CAAc,gBAAgB,OAAhB,CAAtC,CADgD;AAEtD,0BAAsB,OAAtB,GAAgC,OAAhC,CAFsD;AAGtD,0BAAsB,MAAtB,GAA+B,MAA/B,CAHsD;;AAKtD,QAAM,iCAAiC;AACrC,gBAAU,UAAV;KADI,CALgD;AAQtD,QAAM,yBAAyB,EAAE,MAAF,CAAS,OAAO,MAAP,CAAc,gBAAgB,QAAhB,CAAvB,EACS,8BADT,CAAzB,CARgD;AAUtD,QAAM,wBAAwB,EAAxB,CAVgD;;AAYtD,QAAM,qBAAqB;AACzB,eAAS,OAAT;AACA,eAAS,OAAT;AACA,YAAM,eAAN;AACA,eAAS,qBAAT;AACA,eAAS,qBAAT;AACA,gBAAU,sBAAV;KANI,CAZgD;;AAqBtD,eAAW,YAAX,CAAwB,kBAAxB,EArBsD;AAsBtD,kBAAc,QAAd,CAAuB,UAAvB,EACuB,mBAAmB,IAAnB,EACA,8BAFvB,EAGuB,UAAC,EAAD,EAAQ;AACN,QAAE,MAAF,CAAS,mBAAmB,QAAnB,EAA6B,EAAtC,EADM;KAAR,CAHvB,CAtBsD;AA4BtD,WAAO,kBAAP,CA5BsD;;AA8BtD,aAAS,OAAT,CAAiB,KAAjB,EAAwB;AACtB,YAAM,iBAAN,CAAwB,4BAAxB,EADsB;AAEtB,YAAM,iBAAN,CAAwB,qBAAxB,EAFsB;KAAxB;AAIA,aAAS,OAAT,CAAiB,KAAjB,EAAwB;AACtB,YAAM,MAAN,GAAe,EAAE,KAAF,CAAQ,UAAR,EAAoB,IAApB,EAA0B,MAAM,MAAN,CAAzC,CADsB;AAEtB,YAAM,iBAAN,CAAwB,sBAAxB,EAFsB;AAGtB,YAAM,iBAAN,CAAwB,6BAAxB,EAHsB;KAAxB;AAKA,aAAS,OAAT,CAAiB,KAAjB,EAAwB,KAAxB,EAA+B;AAC7B,uBAAiB,KAAjB,EAAwB,KAAxB,EAD6B;AAE7B,YAAM,iBAAN,CAAwB,oBAAxB,EAF6B;KAA/B;AAIA,aAAS,MAAT,CAAgB,KAAhB,EAAuB,KAAvB,EAA8B;AAC5B,UAAI,aAAa,EAAE,IAAF,CAAO,CAAC,UAAD,EAAY,UAAZ,CAAP,EAAgC,KAAhC,CAAb,CADwB;AAE5B,uBAAiB,MAAM,QAAN,CAAjB,EAAkC,KAAlC,EAF4B;AAG5B,aAAO,MAAM,MAAN,CAAa,sBAAb,EACa,eADb,EAEa,CAAE,MAAM,MAAN,EAAc,UAAhB,CAFb,CAAP,CAH4B;KAA9B;AAOA,aAAS,gBAAT,CAA0B,KAA1B,EAAiC,KAAjC,EAAwC;AACtC,YAAM,MAAN,GAAe,EAAE,IAAF,CACb,EAAE,QAAF,CAAW,MAAX,CADa,EAEb,EAAE,IAAF,CACE,EAAE,KAAF,CAAQ,GAAR,EAAa,MAAM,CAAN,CADf,EAEE,EAAE,KAAF,CAAQ,GAAR,EAAa,MAAM,CAAN,CAFf,CAFa,EAMb,MAAM,MAAN,CANF,CADsC;KAAxC;GApDF;CATD,CAAD","file":"createTerrain.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('createTerrainMode', createTerrainModeModelFactory);\n\n  createTerrainModeModelFactory.$inject = [\n    'modes',\n    'settings',\n    'commonMode',\n  ];\n  function createTerrainModeModelFactory(modesModel,\n                                         settingsModel,\n                                         commonModeModel) {\n    const createTerrain_actions = Object.create(commonModeModel.actions);\n    createTerrain_actions.moveMap = moveMap;\n    createTerrain_actions.create = create;\n\n    const createTerrain_default_bindings = {\n      'create': 'clickMap'\n    };\n    const createTerrain_bindings = R.extend(Object.create(commonModeModel.bindings),\n                                            createTerrain_default_bindings);\n    const createTerrain_buttons = [];\n\n    const createTerrain_mode = {\n      onEnter: onEnter,\n      onLeave: onLeave,\n      name: 'CreateTerrain',\n      actions: createTerrain_actions,\n      buttons: createTerrain_buttons,\n      bindings: createTerrain_bindings\n    };\n\n    modesModel.registerMode(createTerrain_mode);\n    settingsModel.register('Bindings',\n                           createTerrain_mode.name,\n                           createTerrain_default_bindings,\n                           (bs) => {\n                             R.extend(createTerrain_mode.bindings, bs);\n                           });\n    return createTerrain_mode;\n\n    function onEnter(state) {\n      state.queueChangeEventP('Game.terrain.create.enable');\n      state.queueChangeEventP('Game.moveMap.enable');\n    }\n    function onLeave(state) {\n      state.create = R.assoc('terrains', null, state.create);\n      state.queueChangeEventP('Game.moveMap.disable');\n      state.queueChangeEventP('Game.terrain.create.disable');\n    }\n    function moveMap(state, coord) {\n      updateCreateBase(coord, state);\n      state.queueChangeEventP('Game.create.update');\n    }\n    function create(state, event) {\n      let is_flipped = R.path(['ui_state','flip_map'], state);\n      updateCreateBase(event['click#'], state);\n      return state.eventP('Game.command.execute',\n                          'createTerrain',\n                          [ state.create, is_flipped ]);\n    }\n    function updateCreateBase(coord, state) {\n      state.create = R.over(\n        R.lensProp('base'),\n        R.pipe(\n          R.assoc('x', coord.x),\n          R.assoc('y', coord.y)\n        ),\n        state.create\n      );\n    }\n  }\n})();\n"]}