{"version":3,"sources":["ruler.es6"],"names":[],"mappings":"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","file":"ruler.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('rulerMode', [\n    'modes',\n    'settings',\n    'commonMode',\n    'game',\n    'gameRuler',\n    'model',\n    'gameModels',\n    'gameModelSelection',\n    'prompt',\n    function rulerModeServiceFactory(modesService,\n                                     settingsService,\n                                     commonModeService,\n                                     gameService,\n                                     gameRulerService,\n                                     modelService,\n                                     gameModelsService,\n                                     gameModelSelectionService,\n                                     promptService) {\n      let ruler_actions = Object.create(commonModeService.actions);\n      ruler_actions.exitRulerMode = commonModeService.actions.modeBackToDefault;\n      ruler_actions.dragStartMap = (state, drag) => {\n        return state.event('Game.update', R.lensProp('ruler'),\n                           gameRulerService.setLocal$(drag.start, drag.now, state));\n      };\n      ruler_actions.dragMap = (state, drag) => {\n        return state.event('Game.update', R.lensProp('ruler'),\n                           gameRulerService.setLocal$(drag.start, drag.now, state));\n      };\n      ruler_actions.dragEndMap = (state, drag) => {\n        return state.event('Game.command.execute',\n                           'setRuler', [ 'setRemote', [drag.start, drag.now]]);\n      };\n      ruler_actions.dragStartTemplate = ruler_actions.dragStartMap;\n      ruler_actions.dragTemplate = ruler_actions.dragMap;\n      ruler_actions.dragEndTemplate = ruler_actions.dragEndMap;\n      ruler_actions.dragStartModel = ruler_actions.dragStartMap;\n      ruler_actions.dragModel = ruler_actions.dragMap;\n      ruler_actions.dragEndModel = ruler_actions.dragEndMap;\n      ruler_actions.setOriginModel = (state, event) => {\n        return R.pipePromise(\n          () => {\n            return state.event('Game.command.execute',\n                               'setRuler', ['setOrigin', [event['click#'].target]]);\n          },\n          (result) => {\n            updateMaxLengthButton(state);\n            return result;\n          }\n        )();\n      };\n      ruler_actions.setTargetModel = (state, event) => {\n        return state.event('Game.command.execute',\n                           'setRuler', ['setTarget', [event['click#'].target]]);\n      };\n      ruler_actions.setMaxLength = (state) => {\n        return R.pipeP(\n          () => {\n            return promptService\n              .prompt('prompt', 'Set ruler max length :',\n                      gameRulerService.maxLength(state.game.ruler))\n              .catch(R.always(null));\n          },\n          (value) => {\n            value = (value === 0) ? null : value;\n            return R.pipePromise(\n              () => {\n                return state.event('Game.command.execute',\n                                   'setRuler', ['setMaxLength', [value]]);\n              },\n              (result) => {\n                let origin = gameRulerService.origin(state.game.ruler);\n                if(R.isNil(origin)) return result;\n\n                return state.event('Game.command.execute',\n                                   'onModels', ['setRulerMaxLength', [value], [origin]]);\n              }\n            )();\n          },\n          (result) => {\n            updateMaxLengthButton(state);\n            return result;\n          }\n        )();\n      };\n      ruler_actions.createAoEOnTarget = (state) => {\n        return R.pipeP(\n          () => {\n            return gameRulerService\n              .targetAoEPosition(state.game.models, state.game.ruler);\n          },\n          (position) => {\n            position.type = 'aoe';\n            let create = {\n              base: { x: 0, y: 0, r: 0 },\n              templates: [ position ]\n            };\n            return state.event('Game.command.execute',\n                               'createTemplate', [create, false]);\n          }\n        )();\n      };\n      let ruler_default_bindings = {\n        exitRulerMode: 'ctrl+r',\n        setMaxLength: 'shift+r',\n        setOriginModel: 'ctrl+clickModel',\n        setTargetModel: 'shift+clickModel',\n        createAoEOnTarget: 'ctrl+a'\n      };\n      let ruler_bindings = R.extend(Object.create(commonModeService.bindings),\n                                    ruler_default_bindings);\n      let ruler_buttons = [\n        [ 'Set Max Len.', 'setMaxLength' ],\n        [ 'AoE on Target', 'createAoEOnTarget' ],\n      ];\n      let ruler_mode = {\n        onEnter: (state) => {\n          return R.pipePromise(\n            () => {\n              return gameModelSelectionService\n                .get('local', state.game.model_selection);\n            },\n            (stamps) => {\n              if(R.length(stamps) !== 1) return null;\n\n              return gameModelsService\n                .findStamp(stamps[0], state.game.models)\n                .catch(R.always(null));\n            },\n            (model) => {\n              if(R.isNil(model)) return null;\n              \n              return state\n                .event('Game.command.execute',\n                       'setRuler', ['setOriginResetTarget', [model]]);\n            },\n            () => {\n              updateMaxLengthButton(state);\n            }\n          )();\n        },\n        onLeave: (state) => {\n          state.changeEvent('Game.ruler.remote.change');\n        },\n        name: 'Ruler',\n        actions: ruler_actions,\n        buttons: ruler_buttons,\n        bindings: ruler_bindings\n      };\n      modesService.registerMode(ruler_mode);\n      settingsService.register('Bindings',\n                               ruler_mode.name,\n                               ruler_default_bindings,\n                               (bs) => {\n                                 R.extend(ruler_mode.bindings, bs);\n                               });\n\n      function updateMaxLengthButton(state) {\n        let max = gameRulerService.maxLength(state.game.ruler);\n        ruler_mode.buttons[0][0] = 'Set Max Len. ('+max+')';\n        state.changeEvent('Modes.buttons.update');\n      }\n\n      return ruler_mode;\n    }\n  ]);\n"]}