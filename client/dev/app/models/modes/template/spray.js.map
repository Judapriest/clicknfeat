{"version":3,"sources":["spray.es6"],"names":[],"mappings":"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","file":"spray.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('sprayTemplateMode', sprayTemplateModeModelFactory);\n\n  sprayTemplateModeModelFactory.$inject = [\n    'modes',\n    'settings',\n    'templateMode',\n    'sprayTemplate',\n    'gameTemplates',\n    'gameTemplateSelection',\n    'gameModels',\n  ];\n  function sprayTemplateModeModelFactory(modesModel,\n                                         settingsModel,\n                                         templateModeModel,\n                                         sprayTemplateModel,\n                                         gameTemplatesModel,\n                                         gameTemplateSelectionModel,\n                                         gameModelsModel) {\n    const template_actions = Object.create(templateModeModel.actions);\n    template_actions.spraySize6 = spraySize6;\n    template_actions.spraySize8 = spraySize8;\n    template_actions.spraySize10 = spraySize10;\n    template_actions.setOriginModel = setOriginModel;\n    template_actions.setTargetModel = setTargetModel;\n    const moves = [\n      ['rotateLeft', 'left'],\n      ['rotateRight', 'right'],\n    ];\n    const buildTemplateMove$ = R.curry(buildTemplateMove);\n    R.forEach(([move]) => {\n      template_actions[move] = buildTemplateMove$(move, false);\n      template_actions[move+'Small'] = buildTemplateMove$(move, true);\n    }, moves);\n\n    const template_default_bindings = {\n      setOriginModel: 'ctrl+clickModel',\n      setTargetModel: 'shift+clickModel',\n      spraySize6: '6',\n      spraySize8: '8',\n      spraySize10: '0'\n    };\n    const template_bindings = R.extend(Object.create(templateModeModel.bindings),\n                                     template_default_bindings);\n\n    const template_buttons = R.concat([\n      [ 'Size'    , 'toggle'      , 'size' ],\n      [ 'Spray6'  , 'spraySize6'  , 'size' ],\n      [ 'Spray8'  , 'spraySize8'  , 'size' ],\n      [ 'Spray10' , 'spraySize10' , 'size' ],\n    ], templateModeModel.buttons);\n\n    const template_mode = {\n      onEnter: () => { },\n      onLeave: () => { },\n      name: 'spray'+templateModeModel.name,\n      actions: template_actions,\n      buttons: template_buttons,\n      bindings: template_bindings\n    };\n    modesModel.registerMode(template_mode);\n    settingsModel.register('Bindings',\n                             template_mode.name,\n                             template_default_bindings,\n                             (bs) => {\n                               R.extend(template_mode.bindings, bs);\n                             });\n    const findOriginModel$ = R.curry(findOriginModel);\n    return template_mode;\n\n    function spraySize6(state) {\n      const stamps = gameTemplateSelectionModel\n            .get('local', state.game.template_selection);\n      return state.eventP('Game.command.execute',\n                          'onTemplates',\n                          ['setSizeP', [6], stamps]);\n    }\n    function spraySize8(state) {\n      const stamps = gameTemplateSelectionModel\n            .get('local', state.game.template_selection);\n      return state.eventP('Game.command.execute',\n                          'onTemplates',\n                          ['setSizeP', [8], stamps]);\n    }\n    function spraySize10(state) {\n      const stamps = gameTemplateSelectionModel\n            .get('local', state.game.template_selection);\n      return state.eventP('Game.command.execute',\n                          'onTemplates',\n                          ['setSizeP', [10], stamps]);\n    }\n    function setOriginModel(state, event) {\n      const stamps = gameTemplateSelectionModel\n            .get('local', state.game.template_selection);\n      return state.eventP('Game.command.execute',\n                          'onTemplates',\n                          [ 'setOriginP',\n                            [state.factions, event['click#'].target],\n                            stamps\n                          ]);\n    }\n    function setTargetModel(state, event) {\n      const stamps = gameTemplateSelectionModel\n              .get('local', state.game.template_selection);\n      return R.threadP(state.game)(\n        R.prop('templates'),\n        gameTemplatesModel.findStampP$(stamps[0]),\n        sprayTemplateModel.origin,\n        findOriginModel$(state),\n        (origin_model) => {\n          if(R.isNil(origin_model)) return null;\n\n          return state.eventP('Game.command.execute',\n                              'onTemplates',\n                              [ 'setTargetP',\n                                [state.factions, origin_model, event['click#'].target],\n                                stamps\n                              ]);\n        }\n      );\n    }\n    function buildTemplateMove(move, small, state) {\n      const stamps = gameTemplateSelectionModel\n              .get('local', state.game.template_selection);\n      return R.threadP(state.game)(\n        R.prop('templates'),\n        gameTemplatesModel.findStampP$(stamps[0]),\n        sprayTemplateModel.origin,\n        findOriginModel$(state),\n        (origin_model) => state\n          .eventP('Game.command.execute',\n                  'onTemplates',\n                  [ move+'P',\n                    [state.factions, origin_model, small],\n                    stamps\n                  ])\n      );\n    }\n    function findOriginModel(state, stamp) {\n      if(R.isNil(stamp)) return null;\n\n      return gameModelsModel\n          .findStampP(stamp, state.game.models);\n    }\n  }\n})();\n"]}