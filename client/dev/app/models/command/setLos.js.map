{"version":3,"sources":["setLos.es6"],"names":[],"mappings":";;;;AAAA,QAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,eADX,EAC4B,CACxB,UADwB,EAExB,SAFwB,EAGxB,SAAS,2BAAT,CAAqC,eAArC,EACqC,cADrC,EACqD;AACnD,MAAI,uBAAuB;AACzB,aAAS,SAAS,aAAT,CAAuB,MAAvB,EAA+B,IAA/B,EAAqC,KAArC,EAA4C,IAA5C,EAAkD;AACzD,UAAG,eAAe,EAAE,IAAF,CAAO,eAAe,MAAf,CAAP,CAAf,EAA+C;AAChD,eAAO,KAAK,OAAL,CAAa,MAAb,yBAA0C,MAA1C,CAAP,CADgD;OAAlD;;AAIA,UAAI,OAAO;AACT,gBAAQ,EAAR;AACA,eAAO,EAAP;AACA,cAAM,MAAN;OAHE,CALqD;;AAWzD,aAAO,EAAE,WAAF,CACL,eAAe,eAAf,EACA,UAAC,MAAD,EAAY;AACV,aAAK,MAAL,GAAc,MAAd,CADU;;AAGV,eAAO,eAAe,MAAf,EACJ,KADI,CACE,IADF,+BACY,QAAM,OAAO,MAAM,KAAK,GAAL,EAD/B,CAAP,CAHU;OAAZ,EAMA,UAAC,GAAD,EAAS;AACP,eAAO,EAAE,KAAF,CAAQ,KAAR,EAAe,GAAf,EAAoB,IAApB,CAAP,CADO;;AAGP,eAAO,eAAe,eAAf,CAA+B,KAAK,GAAL,CAAtC,CAHO;OAAT,EAKA,UAAC,KAAD,EAAW;AACT,aAAK,KAAL,GAAa,KAAb,CADS;;AAGT,cAAM,WAAN,CAAkB,wBAAlB,EAHS;;AAKT,eAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CALS;OAAX,CAbK,CAoBL,KAAK,GAAL,CApBF,CAXyD;KAAlD;AAiCT,YAAQ,SAAS,UAAT,CAAoB,IAApB,EAA0B,KAA1B,EAAiC,IAAjC,EAAuC;AAC7C,aAAO,EAAE,KAAF,CACL,eAAe,YAAf,CAA4B,KAAK,KAAL,EAAY,KAAxC,EAA+C,IAA/C,CADK,EAEL,UAAC,GAAD,EAAS;AACP,cAAM,WAAN,CAAkB,wBAAlB,EADO;;AAGP,eAAO,EAAE,KAAF,CAAQ,KAAR,EAAe,GAAf,EAAoB,IAApB,CAAP,CAHO;OAAT,CAFK,CAOL,KAAK,GAAL,CAPF,CAD6C;KAAvC;AAUR,UAAM,SAAS,UAAT,CAAoB,IAApB,EAA0B,KAA1B,EAAiC,IAAjC,EAAuC;AAC3C,aAAO,EAAE,KAAF,CACL,eAAe,YAAf,CAA4B,KAAK,MAAL,EAAa,KAAzC,EAAgD,IAAhD,CADK,EAEL,UAAC,GAAD,EAAS;AACP,cAAM,WAAN,CAAkB,wBAAlB,EADO;;AAGP,eAAO,EAAE,KAAF,CAAQ,KAAR,EAAe,GAAf,EAAoB,IAApB,CAAP,CAHO;OAAT,CAFK,CAOL,KAAK,GAAL,CAPF,CAD2C;KAAvC;GA5CJ,CAD+C;AAwDnD,kBAAgB,eAAhB,CAAgC,QAAhC,EAA0C,oBAA1C,EAxDmD;AAyDnD,SAAO,oBAAP,CAzDmD;CADrD,CAJJ","file":"setLos.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('setLosCommand', [\n    'commands',\n    'gameLos',\n    function setLosCommandServiceFactory(commandsService,\n                                         gameLosService) {\n      var setLosCommandService = {\n        execute: function setLosExecute(method, args, state, game) {\n          if('Function' !== R.type(gameLosService[method])) {\n            return self.Promise.reject(`Los unknown method ${method}`);\n          }\n\n          var ctxt = {\n            before: [],\n            after: [],\n            desc: method\n          };\n          \n          return R.pipePromise(\n            gameLosService.saveRemoteState,\n            (before) => {\n              ctxt.before = before;\n              \n              return gameLosService[method]\n                .apply(null, [...args, state, game, game.los]);\n            },\n            (los) => {\n              game = R.assoc('los', los, game);\n              \n              return gameLosService.saveRemoteState(game.los);\n            },\n            (after) => {\n              ctxt.after = after;\n\n              state.changeEvent('Game.los.remote.change');\n              \n              return [ctxt, game];\n            }\n          )(game.los);\n        },\n        replay: function setLosRedo(ctxt, state, game) {\n          return R.pipeP(\n            gameLosService.resetRemote$(ctxt.after, state, game),\n            (los) => {\n              state.changeEvent('Game.los.remote.change');\n\n              return R.assoc('los', los, game);\n            }\n          )(game.los);\n        },\n        undo: function setLosUndo(ctxt, state, game) {\n          return R.pipeP(\n            gameLosService.resetRemote$(ctxt.before, state, game),\n            (los) => {\n              state.changeEvent('Game.los.remote.change');\n\n              return R.assoc('los', los, game);\n            }\n          )(game.los);\n        }\n      };\n      commandsService.registerCommand('setLos', setLosCommandService);\n      return setLosCommandService;\n    }\n  ]);\n"]}