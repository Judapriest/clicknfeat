{"version":3,"sources":["setLayers.es6"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,kBADX,EAC+B,CAC3B,UAD2B,EAE3B,YAF2B,EAG3B,SAAS,8BAAT,CAAwC,eAAxC,EACwC,iBADxC,EAC2D;AACzD,MAAI,0BAA0B;AAC5B,aAAS,SAAS,gBAAT,CAA0B,GAA1B,EAA+B,CAA/B,EAAkC,KAAlC,EAAyC,IAAzC,EAA+C;AACtD,UAAG,eAAe,EAAE,IAAF,CAAO,kBAAkB,GAAlB,CAAP,CAAf,EAA+C;AAChD,eAAO,KAAK,OAAL,CAAa,MAAb,6BAA8C,SAA9C,CAAP,CADgD;OAAlD;;AAIA,UAAI,OAAO;AACT,gBAAQ,KAAK,MAAL;AACR,cAAS,YAAO,OAAhB;OAFE,CALkD;AAStD,aAAO,EAAE,KAAF,CAAQ,QAAR,EAAkB,kBAAkB,GAAlB,EAAuB,CAAvB,EAA0B,KAAK,MAAL,CAA5C,EAA0D,IAA1D,CAAP,CATsD;AAUtD,WAAK,KAAL,GAAa,KAAK,MAAL,CAVyC;;AAYtD,YAAM,WAAN,CAAkB,oBAAlB,EAZsD;;AActD,aAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CAdsD;KAA/C;AAgBT,YAAQ,SAAS,aAAT,CAAuB,IAAvB,EAA6B,KAA7B,EAAoC,IAApC,EAA0C;AAChD,aAAO,EAAE,KAAF,CAAQ,QAAR,EAAkB,KAAK,KAAL,EAAY,IAA9B,CAAP,CADgD;;AAGhD,YAAM,WAAN,CAAkB,oBAAlB,EAHgD;;AAKhD,aAAO,IAAP,CALgD;KAA1C;AAOR,UAAM,SAAS,aAAT,CAAuB,IAAvB,EAA6B,KAA7B,EAAoC,IAApC,EAA0C;AAC9C,aAAO,EAAE,KAAF,CAAQ,QAAR,EAAkB,KAAK,MAAL,EAAa,IAA/B,CAAP,CAD8C;;AAG9C,YAAM,WAAN,CAAkB,oBAAlB,EAH8C;;AAK9C,aAAO,IAAP,CAL8C;KAA1C;GAxBJ,CADqD;AAiCzD,kBAAgB,eAAhB,CAAgC,WAAhC,EAA6C,uBAA7C,EAjCyD;AAkCzD,SAAO,uBAAP,CAlCyD;CAD3D,CAJJ","file":"setLayers.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('setLayersCommand', [\n    'commands',\n    'gameLayers',\n    function setLayersCommandServiceFactory(commandsService,\n                                            gameLayersService) {\n      var setLayersCommandService = {\n        execute: function setLayersExecute(cmd, l, state, game) {\n          if('Function' !== R.type(gameLayersService[cmd])) {\n            return self.Promise.reject(`Layers unknown method \"${cmd}\"`);\n          }\n          \n          var ctxt = {\n            before: game.layers,\n            desc: `${cmd}(${l})`\n          };\n          game = R.assoc('layers', gameLayersService[cmd](l, game.layers), game);\n          ctxt.after = game.layers;\n\n          state.changeEvent('Game.layers.change');\n\n          return [ctxt, game];\n        },\n        replay: function setLayersRedo(ctxt, state, game) {\n          game = R.assoc('layers', ctxt.after, game);\n\n          state.changeEvent('Game.layers.change');\n\n          return game;\n        },\n        undo: function setLayersUndo(ctxt, state, game) {\n          game = R.assoc('layers', ctxt.before, game);\n\n          state.changeEvent('Game.layers.change');\n\n          return game;\n        }\n      };\n      commandsService.registerCommand('setLayers', setLayersCommandService);\n      return setLayersCommandService;\n    }\n  ]);\n"]}