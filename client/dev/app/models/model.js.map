{"version":3,"sources":["model.es6"],"names":[],"mappings":"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","file":"model.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('model', modelModelFactory);\n\n  modelModelFactory.$inject = [\n    'settings',\n    'element',\n    'gameFactions',\n    'modelArea',\n    'modelAura',\n    'modelCharge',\n    'modelCounter',\n    'modelDamage',\n    'modelEffect',\n    'modelGeom',\n    'modelImage',\n    'modelIncorporeal',\n    'modelLeader',\n    'modelMelee',\n    'modelMove',\n    'modelPlace',\n    'modelRuler',\n    'modelUnit',\n    'modelWreck',\n  ];\n  function modelModelFactory(settingsModel,\n                             elementModel,\n                             gameFactionsModel,\n                             modelAreaModel,\n                             modelAuraModel,\n                             modelChargeModel,\n                             modelCounterModel,\n                             modelDamageModel,\n                             modelEffectModel,\n                             modelGeomModel,\n                             modelImageModel,\n                             modelIncorporealModel,\n                             modelLeaderModel,\n                             modelMeleeModel,\n                             modelMoveModel,\n                             modelPlaceModel,\n                             modelUnitModel,\n                             modelWreckModel,\n                             modelRulerModel) {\n    const DEFAULT_MOVES = {\n      Move: 10,\n      MoveSmall: 5,\n      Rotate: 15,\n      RotateSmall: 5,\n      Shift: 10,\n      ShiftSmall: 1,\n      RotateCharge: 10,\n      RotateChargeSmall: 2\n    };\n    const MOVES = R.clone(DEFAULT_MOVES);\n    settingsModel.register('Misc',\n                           'Model',\n                           DEFAULT_MOVES,\n                           (moves) => {\n                             R.extend(MOVES, moves);\n                           });\n\n    const base = elementModel('model', MOVES);\n    const modelModel = Object.create(base);\n    R.deepExtend(\n      modelModel, {\n        create: modelCreate,\n        state_checkers: [],\n        state_updaters: [],\n        checkState: modelCheckState,\n        descriptionFromInfo: modelDescriptionFromInfo,\n        user: modelUser,\n        userIs: modelUserIs,\n        modeFor: modelModeFor,\n        render: modelRender\n      },\n      modelAreaModel(modelModel),\n      modelAuraModel(modelModel),\n      modelChargeModel(MOVES, modelModel),\n      modelCounterModel(modelModel),\n      modelDamageModel(modelModel),\n      modelEffectModel(modelModel),\n      modelGeomModel(modelModel),\n      modelImageModel(modelModel),\n      modelIncorporealModel(modelModel),\n      modelLeaderModel(modelModel),\n      modelMeleeModel(modelModel),\n      modelMoveModel(MOVES, modelModel),\n      modelPlaceModel(MOVES, modelModel),\n      modelRulerModel(modelModel),\n      modelUnitModel(modelModel),\n      modelWreckModel(modelModel)\n    );\n\n    R.curryService(modelModel);\n    return modelModel;\n\n    function modelCreate(factions, temp) {\n      return R.thread(factions)(\n        gameFactionsModel.getModelInfo$(temp.info),\n        R.unless(\n          R.isNil,\n          (info) => {\n            const model = {\n              state: {\n                x: 0, y: 0, r: 0,\n                img: 0,\n                dsp: ['i'],\n                eff: [],\n                l: [],\n                c: 0, s: 0,\n                u: null,\n                aur: null,\n                are: null,\n                rml: null,\n                cml: null,\n                pml: [null,false],\n                cha: null,\n                pla: null,\n                dmg: initDamage(info.damage),\n                stamp: R.guid()\n              }\n            };\n            if(info.type === 'wardude' ||\n               info.type === 'beast' ||\n               info.type === 'jack') {\n              model.state.dsp = R.append('c', model.state.dsp);\n            }\n            if(info.immovable) {\n              model.state.lk = true;\n            }\n            model.state = R.deepExtend(model.state, temp);\n            return modelModel.checkState(factions, null, model);\n          }\n        )\n      );\n    }\n    function modelUser(model) {\n      return R.path(['state', 'user'], model);\n    }\n    function modelUserIs(user, model) {\n      return R.pathEq(['state', 'user'], user, model);\n    }\n    function modelCheckState(factions, target, model) {\n      return R.thread(factions)(\n        gameFactionsModel.getModelInfo$(model.state.info),\n        R.ifElse(\n          R.isNil,\n          () => R.prop('state', model),\n          (info) => {\n            const radius = info.base_radius;\n            return R.thread(model.state)(\n              R.assoc('x', Math.max(0+radius, Math.min(480-radius, model.state.x))),\n              R.assoc('y', Math.max(0+radius, Math.min(480-radius, model.state.y))),\n              (state) => R.reduce((state, checker) => {\n                return checker(info, target, state);\n              }, state, modelModel.state_checkers),\n              (state) => R.reduce(function(state, updater) {\n                return updater(state);\n              }, state, modelModel.state_updaters)\n            );\n          }\n        ),\n        (state) => R.assoc('state', state, model)\n      );\n    }\n    function modelModeFor(model) {\n      if(modelModel.isCharging(model)) {\n        return 'ModelCharge';\n      }\n      if(modelModel.isPlacing(model)) {\n        return 'ModelPlace';\n      }\n      return 'Model';\n    }\n    function modelDescriptionFromInfo(info, model) {\n      return R.thread(info)(\n        R.props(['unit_name', 'name']),\n        R.prepend(modelModel.user(model)),\n        R.reject(R.isNil),\n        R.join('/')\n      );\n    }\n    function initDamage(info) {\n      if(info.type === 'warrior') {\n        return { n: 0, t: 0 };\n      }\n      return R.thread(info)(\n        R.keys,\n        R.reject(R.equals('type')),\n        R.reject(R.equals('field')),\n        R.reject(R.equals('total')),\n        R.reject(R.equals('depth')),\n        R.reduce((mem, key) => {\n          return R.assoc(key, R.map(R.always(0), info[key]), mem);\n        }, {}),\n        R.assoc('f', 0),\n        R.assoc('t', 0)\n      );\n    }\n    function modelRender({ is_flipped,\n                           charge_target\n                         }, factions, state) {\n      const info = R.thread(factions)(\n        gameFactionsModel.getModelInfo$(state.info),\n        R.defaultTo({ base_radius: 5.905 })\n      );\n      const is_wreck = modelModel.isWreckDisplayed({state});\n      const img = (is_wreck\n                   ? modelModel.getWreckImage(factions, {state})\n                   : modelModel.getImage(factions, {state}));\n      const cx = img.width / 2;\n      const cy = img.height / 2;\n      const radius = info.base_radius;\n      const dx = cx;\n      const dy = cy - info.base_radius;\n      const frx = cx - info.base_radius;\n      const flx = cx + info.base_radius;\n      const los = {\n        dy: cy - 700,\n        lx: cx - 700,\n        rx: cx + 700\n      };\n      const lock = {\n        show: modelModel.isLocked({state}),\n        x: cx + radius - 5,\n        y: cy - 5\n      };\n      const path = { show: false, x: 0, y: 0, transform: '', length: {} };\n      const label_options = {\n        flipped: is_flipped,\n        flip_center: { x: cx, y: cy },\n        text_center: { x: cx, y: cx + radius + 8 }\n      };\n      const label = base\n              .renderLabel(label_options, state);\n      return R.deepExtend(\n        {\n          stamp: state.stamp,\n          x: state.x, y: state.y,\n          transform: [ `translate(${state.x-cx},${state.y-cy})`,\n                       `rotate(${state.r},${cx},${cy})`\n                     ].join(' '),\n          cx, cy, radius, dx, dy, frx, flx, los,\n          width: img.width, height: img.height,\n          base_color: info.base_color,\n          title: modelModel.descriptionFromInfo(info, {state}),\n          label, lock, path\n        },\n        modelModel.renderArea({ info, radius }, factions, state),\n        modelModel.renderAura({ radius }, state),\n        modelModel.renderCharge({ base, charge_target, radius }, path, state),\n        modelModel.renderCounter({ base, cx, cy, is_flipped, radius }, state),\n        modelModel.renderDamage({ cx, cy, info, radius }, state),\n        modelModel.renderEffect({ img, info }, state),\n        modelModel.renderImage({ img }, state),\n        modelModel.renderLeader({ cx, cy, radius }, state),\n        modelModel.renderMelee({ img, info }, state),\n        modelModel.renderPlace({ base, info, path }, state),\n        modelModel.renderUnit({ base, cx, cy, radius }, state)\n      );\n    }\n  }\n})();\n"]}