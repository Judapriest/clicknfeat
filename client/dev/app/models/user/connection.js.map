{"version":3,"sources":["connection.es6"],"names":[],"mappings":"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","file":"connection.js","sourcesContent":["(function() {\n  angular.module('clickApp.models')\n    .factory('userConnection', userConnectionServiceFactory);\n\n  userConnectionServiceFactory.$inject = [\n    'http',\n    'pubSub',\n    'websocket',\n  ];\n  function userConnectionServiceFactory(httpService,\n                                        pubSubService,\n                                        websocketService) {\n    const userConnectionService = {\n      init: userConnectionInit,\n      open: userConnectionOpen,\n      close: userConnectionClose,\n      active: userConnectionActive,\n      sendChat: userConnectionSendChat,\n      userNameForStamp: userNameForStamp,\n      usersNamesForStamps: usersNamesForStamps\n    };\n    const usersMessageHandler$ = R.curry(usersMessageHandler);\n    const gamesMessageHandler$ = R.curry(gamesMessageHandler);\n    const chatMessageHandler$ = R.curry(chatMessageHandler);\n    const userForStamp$ = R.curry(userForStamp);\n    const usersForStamps$ = R.curry(usersForStamps);\n    R.curryService(userConnectionService);\n    return userConnectionService;\n\n    function userConnectionInit(user) {\n      const connection = {\n        state: { socket: null }\n      };\n      return R.assoc('connection', connection, user);\n    }\n    function userConnectionOpen(state, user) {\n      if(R.exists(user.connection.state.socket)) {\n        return self.Promise.resolve(user);\n      }\n\n      const handlers = {\n        close: closeHandler$(state),\n        users: usersMessageHandler$(state),\n        games: gamesMessageHandler$(state),\n        chat: chatMessageHandler$(state)\n      };\n\n      user = R.assocPath(['connection','state','socket'], null, user);\n      return R.pipeP(\n        () => {\n          return websocketService\n            .create('/api/users/'+user.state.stamp, 'user', handlers);\n        },\n        (socket) => {\n          return R.assocPath(['connection','state','socket'], socket, user);\n        }\n      )();\n    }\n    function userConnectionClose(user) {\n      return R.pipeP(\n        () => {\n          if(R.isNil(user.connection.state.socket)) {\n            return self.Promise.resolve();\n          }\n          return websocketService\n            .close(user.connection.state.socket);\n        },\n        () => {\n          return R.assoc('connection', cleanupConnection(user.connection), user);\n        }\n      )();\n    }\n    function userConnectionActive(user) {\n      return R.pipe(\n        R.path(['connection','state','socket']),\n        R.exists\n      )(user);\n    }\n    function userConnectionSendChat(chat, user) {\n      if(!userConnectionService.active(user)) {\n        return self.Promise.reject('Not active');\n      }\n\n      chat = R.pipe(\n        R.assoc('type', 'chat'),\n        R.assoc('from', user.state.stamp)\n      )(chat);\n      return websocketService\n        .send(chat, user.connection.state.socket);\n    }\n    function userNameForStamp(stamp, user) {\n      return R.pipe(\n        userForStamp$(stamp),\n        R.defaultTo({ name: 'Unknown' }),\n        R.prop('name'),\n        (n) => {\n          return s(n).trim().capitalize().value();\n        }\n      )(user.connection);\n    }\n    function usersNamesForStamps(stamps, user) {\n      return R.pipe(\n        R.defaultTo({}),\n        R.propOr({}, 'connection'),\n        usersForStamps$(R.defaultTo([], stamps)),\n        R.pluck('name'),\n        (names) => {\n          return ( R.isEmpty(names) ?\n                   [ 'Unknown' ] :\n                   names\n                 );\n        },\n        R.map((n) => {\n          return s(n).trim().capitalize().value();\n        })\n      )(user);\n    }\n    function cleanupConnection(connection) {\n      return R.pipe(\n        R.assocPath(['state','socket'], null),\n        R.assoc('users', [])\n      )(connection);\n    }\n    function closeHandler$(state) {\n      return () => {\n        console.error('User connection: close');\n        state.event('User.connection.close');\n      };\n    }\n    function usersMessageHandler(state, msg) {\n      console.log('User connection: users list', msg);\n      state.event('User.setOnlineUsers', R.pipe(\n        R.propOr([], 'users'),\n        R.sortBy(R.compose(R.toLower, R.prop('name')))\n      )(msg));\n    }\n    function gamesMessageHandler(state, msg) {\n      console.log('User connection: games list', msg);\n      state.event('User.setOnlineGames', R.pipe(\n        R.propOr([], 'games')\n      )(msg));\n    }\n    function chatMessageHandler(state, msg) {\n      console.log('User connection: chat msg', msg);\n      state.event('User.newChatMsg', msg);\n    }\n    function userForStamp(stamp, connection) {\n      return R.pipe(\n        R.prop('users'),\n        R.find(R.propEq('stamp', stamp))\n      )(connection);\n    }\n    function usersForStamps(stamps, connection) {\n      return R.pipe(\n        R.map(R.flip(userForStamp$)(connection)),\n        R.reject(R.isNil)\n      )(stamps);\n    }\n  }\n})();\n"]}