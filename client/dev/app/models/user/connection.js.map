{"version":3,"sources":["connection.es6"],"names":[],"mappings":"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","file":"connection.js","sourcesContent":["(function() {\n  angular.module('clickApp.models')\n    .factory('userConnection', userConnectionServiceFactory);\n\n  userConnectionServiceFactory.$inject = [\n    'http',\n    'pubSub',\n    'websocket',\n  ];\n  function userConnectionServiceFactory(httpService,\n                                        pubSubService,\n                                        websocketService) {\n    const userConnectionService = {\n      init: userConnectionInit,\n      openP: userConnectionOpenP,\n      close: userConnectionClose,\n      active: userConnectionActive,\n      sendChatP: userConnectionSendChatP,\n      userNameForStamp: userNameForStamp,\n      usersNamesForStamps: usersNamesForStamps\n    };\n    const usersMessageHandler$ = R.curry(usersMessageHandler);\n    const gamesMessageHandler$ = R.curry(gamesMessageHandler);\n    const chatMessageHandler$ = R.curry(chatMessageHandler);\n    const userForStamp$ = R.curry(userForStamp);\n    const usersForStamps$ = R.curry(usersForStamps);\n    R.curryService(userConnectionService);\n    return userConnectionService;\n\n    function userConnectionInit(user) {\n      const connection = {\n        state: { socket: null }\n      };\n      return R.assoc('connection', connection, user);\n    }\n    function userConnectionOpenP(state, user) {\n      if(userConnectionService.active(user)) {\n        return R.resolveP(user);\n      }\n\n      const handlers = {\n        close: closeHandler$(state),\n        users: usersMessageHandler$(state),\n        games: gamesMessageHandler$(state),\n        chat: chatMessageHandler$(state)\n      };\n\n      user = R.assocPath(['connection','state','socket'], null, user);\n      return R.threadP()(\n        () => websocketService\n          .createP('/api/users/'+user.state.stamp, 'user', handlers),\n        (socket) => R.assocPath(['connection','state','socket'], socket, user)\n      );\n    }\n    function userConnectionClose(user) {\n      return R.thread()(\n        () => {\n          if(userConnectionService.active(user)) {\n            websocketService\n              .close(user.connection.state.socket);\n          }\n        },\n        () => R.over(R.lensProp('connection'),\n                     cleanupConnection, user)\n      );\n    }\n    function userConnectionActive(user) {\n      return R.thread(user)(\n        R.path(['connection','state','socket']),\n        R.exists\n      );\n    }\n    function userConnectionSendChatP(chat, user) {\n      return R.threadP(user)(\n        R.rejectIf(R.complement(userConnectionService.active),\n                   'Not active'),\n        (user) => {\n          chat = R.thread(chat)(\n            R.assoc('type', 'chat'),\n            R.assoc('from', user.state.stamp)\n          );\n          return websocketService\n            .send(chat, user.connection.state.socket);\n        }\n      );\n    }\n    function userNameForStamp(stamp, user) {\n      return R.thread(user)(\n        R.prop('connection'),\n        userForStamp$(stamp),\n        R.defaultTo({ name: 'Unknown' }),\n        R.prop('name'),\n        normalizeUserName\n      );\n    }\n    function usersNamesForStamps(stamps, user) {\n      return R.thread(user)(\n        R.defaultTo({}),\n        R.propOr({}, 'connection'),\n        usersForStamps$(R.defaultTo([], stamps)),\n        R.pluck('name'),\n        (names) => ( R.isEmpty(names)\n                     ? [ 'Unknown' ]\n                     : names\n                   ),\n        R.map(normalizeUserName)\n      );\n    }\n    function normalizeUserName(name) {\n      return s(name).trim().capitalize().value();\n    }\n    function cleanupConnection(connection) {\n      return R.thread(connection)(\n        R.assocPath(['state','socket'], null),\n        R.assoc('users', [])\n      );\n    }\n    function closeHandler$(state) {\n      return () => {\n        console.error('User connection: close');\n        state.queueEventP('User.connection.close');\n      };\n    }\n    function usersMessageHandler(state, msg) {\n      console.log('User connection: users list', msg);\n      state.queueEventP('User.setOnlineUsers', R.thread(msg)(\n        R.propOr([], 'users'),\n        R.sortBy(R.compose(R.toLower, R.prop('name')))\n      ));\n    }\n    function gamesMessageHandler(state, msg) {\n      console.log('User connection: games list', msg);\n      state.queueEventP('User.setOnlineGames', R.thread(msg)(\n        R.propOr([], 'games')\n      ));\n    }\n    function chatMessageHandler(state, msg) {\n      console.log('User connection: chat msg', msg);\n      state.queueEventP('User.newChatMsg', msg);\n    }\n    function userForStamp(stamp, connection) {\n      return R.thread(connection)(\n        R.prop('users'),\n        R.find(R.propEq('stamp', stamp))\n      );\n    }\n    function usersForStamps(stamps, connection) {\n      return R.thread(stamps)(\n        R.map(R.flip(userForStamp$)(connection)),\n        R.reject(R.isNil)\n      );\n    }\n  }\n})();\n"]}