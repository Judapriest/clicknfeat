{"version":3,"sources":["createTerrain.es6"],"names":[],"mappings":"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","file":"createTerrain.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('createTerrainCommand', createTerrainCommandModelFactory);\n\n  createTerrainCommandModelFactory.$inject = [\n    'commands',\n    'point',\n    'terrain',\n    'gameTerrains',\n    'gameTerrainSelection',\n  ];\n  function createTerrainCommandModelFactory(commandsModel,\n                                            pointModel,\n                                            terrainModel,\n                                            gameTerrainsModel,\n                                            gameTerrainSelectionModel) {\n    const createTerrainCommandModel = {\n      executeP: createTerrainExecuteP,\n      replayP: createTerrainReplayP,\n      undoP: createTerrainUndoP\n    };\n\n    const emitCreateEvent$ = R.curry(emitCreateEvent);\n    const onCreatedTerrains$ = R.curry(onCreatedTerrains);\n\n    commandsModel.registerCommand('createTerrain', createTerrainCommandModel);\n    return createTerrainCommandModel;\n\n    function createTerrainExecuteP(create, is_flipped, state, game) {\n      const add$ = pointModel.addToWithFlip$(is_flipped);\n      return R.threadP(create)(\n        R.prop('terrains'),\n        R.map(addTerrainP),\n        R.promiseAll,\n        R.reject(R.isNil),\n        R.rejectIf(R.isEmpty, 'No valid terrain definition'),\n        onNewTerrains\n      );\n\n      function addTerrainP(terrain) {\n        return R.thread(terrain)(\n          add$(create.base),\n          R.omit(['stamp']),\n          tryToCreateTerrainP\n        );\n      }\n      function onNewTerrains(terrains) {\n        const ctxt = {\n          terrains: R.map(terrainModel.saveState, terrains),\n          desc: terrains[0].state.info.join('.')\n        };\n        return R.thread(terrains)(\n          onCreatedTerrains$('local', state, game),\n          (game) => {\n            return [ctxt, game];\n          }\n        );\n      }\n    }\n    function createTerrainReplayP(ctxt, state, game) {\n      return R.threadP(ctxt)(\n        R.prop('terrains'),\n        R.map(tryToCreateTerrainP),\n        R.promiseAll,\n        R.reject(R.isNil),\n        R.rejectIf(R.isEmpty, 'No valid terrain definition'),\n        onCreatedTerrains$('remote', state, game)\n      );\n    }\n    function createTerrainUndoP(ctxt, state, game) {\n      const stamps = R.pluck('stamp', ctxt.terrains);\n      return R.thread(game)(\n        R.over(R.lensProp('terrains'),\n               gameTerrainsModel.removeStamps$(stamps)),\n        R.over(R.lensProp('terrain_selection'),\n               gameTerrainSelectionModel.removeFrom$('local', stamps, state)),\n        R.over(R.lensProp('terrain_selection'),\n               gameTerrainSelectionModel.removeFrom$('remote', stamps, state)),\n        emitCreateEvent$(state)\n      );\n    }\n    function tryToCreateTerrainP(terrain) {\n      return self.Promise\n        .resolve(terrainModel.create(terrain))\n        .catch(R.always(null));\n    }\n    function onCreatedTerrains(selection, state, game, terrains) {\n      return R.thread(game)(\n        addToGameTerrains,\n        addToGameTerrainSelection,\n        emitCreateEvent$(state)\n      );\n\n      function addToGameTerrains(game) {\n        return R.thread(game.terrains)(\n          gameTerrainsModel.add$(terrains),\n          (game_terrains) => {\n            return R.assoc('terrains', game_terrains, game);\n          }\n        );\n      }\n      function addToGameTerrainSelection(game) {\n        const stamps = R.map(R.path(['state','stamp']), terrains);\n        return R.thread(game.terrain_selection)(\n          gameTerrainSelectionModel\n            .set$(selection, stamps, state),\n          (selection) => {\n            return R.assoc('terrain_selection', selection, game);\n          }\n        );\n      }\n    }\n    function emitCreateEvent(state, game) {\n      state.queueChangeEventP('Game.terrain.create');\n      return game;\n    }\n  }\n})();\n"]}