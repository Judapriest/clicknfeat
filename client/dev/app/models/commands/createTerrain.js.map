{"version":3,"sources":["createTerrain.es6"],"names":[],"mappings":"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","file":"createTerrain.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('createTerrainCommand', [\n    'commands',\n    'point',\n    'terrain',\n    'gameTerrains',\n    'gameTerrainSelection',\n    function createTerrainCommandServiceFactory(commandsService,\n                                                pointService,\n                                                terrainService,\n                                                gameTerrainsService,\n                                                gameTerrainSelectionService) {\n      var createTerrainCommandService = {\n        execute: function createTerrainExecute(create, is_flipped, state, game) {\n          var add$ = pointService.addToWithFlip$(is_flipped);\n          return R.pipePromise(\n            R.prop('terrains'),\n            R.map((terrain) => {\n              return R.pipe(\n                add$(create.base),\n                R.omit(['stamp']),\n                R.spyError('terrain', create, is_flipped),\n                (terrain) => {\n                  return self.Promise\n                    .resolve(terrainService.create(terrain))\n                    .catch(R.always(null));\n                }\n              )(terrain);\n            }),\n            R.promiseAll,\n            R.reject(R.isNil),\n            R.rejectIf(R.isEmpty, 'No valid terrain definition'),\n            R.spyError('terrains'),\n            (terrains) => {\n              var ctxt = {\n                terrains: R.map(terrainService.saveState, terrains),\n                desc: terrains[0].state.info.join('.')\n              };\n              return R.pipe(\n                gameTerrainsService.add$(terrains),\n                (game_terrains) => {\n                  game = R.assoc('terrains', game_terrains, game);\n              \n                  return gameTerrainSelectionService\n                    .set('local', R.map(R.path(['state','stamp']), terrains),\n                         state, game.terrain_selection);\n                },\n                (selection) => {\n                  game = R.assoc('terrain_selection', selection, game);\n\n                  state.changeEvent('Game.terrain.create');\n                  \n                  return [ctxt, game];\n                }\n              )(game.terrains);\n            }\n          )(create);\n        },\n        replay: function createTerrainReplay(ctxt, state, game) {\n          return R.pipePromise(\n            R.prop('terrains'),\n            R.map((terrain) => {\n              return self.Promise\n                .resolve(terrainService.create(terrain))\n                .catch(R.always(null));\n            }),\n            R.promiseAll,\n            R.reject(R.isNil),\n            R.rejectIf(R.isEmpty, 'No valid terrain definition'),\n            (terrains) => {\n              return R.pipe(\n                gameTerrainsService.add$(terrains),\n                (game_terrains) => {\n                  game = R.assoc('terrains', game_terrains, game);\n                  \n                  return gameTerrainSelectionService\n                    .set('remote', R.map(R.path(['state','stamp']), terrains),\n                         state, game.terrain_selection);\n                },\n                (selection) => {\n                  game = R.assoc('terrain_selection', selection, game);\n                  \n                  state.changeEvent('Game.terrain.create');\n\n                  return game;\n                }\n              )(game.terrains);\n            }\n          )(ctxt);\n        },\n        undo: function createTerrainUndo(ctxt, state, game) {\n          var stamps = R.pluck('stamp', ctxt.terrains);\n          game = R.pipe(\n            R.over(R.lensProp('terrains'),\n                   gameTerrainsService.removeStamps$(stamps)),\n            R.over(R.lensProp('terrain_selection'),\n                    gameTerrainSelectionService.removeFrom$('local', stamps, state)),\n            R.over(R.lensProp('terrain_selection'),\n                   gameTerrainSelectionService.removeFrom$('remote', stamps, state))\n          )(game);\n          state.changeEvent('Game.terrain.create');\n          return game;\n        }\n      };\n      commandsService.registerCommand('createTerrain', createTerrainCommandService);\n      return createTerrainCommandService;\n    }\n  ]);\n"]}