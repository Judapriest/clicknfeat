{"version":3,"sources":["segment.es6"],"names":[],"mappings":";;;;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,mBADX,EACgC,6BADhC,EADU;;AAIV,gCAA8B,OAA9B,GAAuC,EAAvC,CAJU;AAKV,WAAS,6BAAT,GAAyC;AACvC,WAAO,SAAS,2BAAT,CAAqC,IAArC,EACqC,gBADrC,EACuD;AAC5D,UAAM,yBAAyB;AAC7B,kBAAU,kBAAV;AACA,iBAAS,iBAAT;AACA,eAAO,eAAP;OAHI,CADsD;AAM5D,aAAO,sBAAP,CAN4D;;AAQ5D,eAAS,kBAAT,CAA4B,MAA5B,EAAoC,IAApC,EAA0C,KAA1C,EAAiD,IAAjD,EAAuD;AACrD,YAAM,OAAO;AACX,kBAAQ,EAAR;AACA,iBAAO,EAAP;AACA,gBAAM,MAAN;SAHI,CAD+C;AAMrD,eAAO,EAAE,OAAF,CAAU,gBAAV,EACL,WADK,EAEL,EAAE,MAAF,CAAS,IAAT,CAFK,EAGL,UAAU,QAAV,CAHK,EAIL;iBAAM,iBAAiB,MAAjB,EACH,KADG,CACG,IADH,+BACa,QAAM,OAAO,MAAM,EAAE,IAAF,CAAO,IAAP,EAAa,IAAb,GADhC;SAAN,EAEA,UAAC,OAAD;iBAAa,EAAE,KAAF,CAAQ,IAAR,EAAc,OAAd,EAAuB,IAAvB;SAAb,EACA,UAAU,OAAV,CAPK,EAQL,UAAC,IAAD,EAAU;AACR,gBAAM,iBAAN,WAAgC,uBAAhC,EADQ;AAER,iBAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CAFQ;SAAV,CARF,CANqD;;AAoBrD,iBAAS,WAAT,CAAqB,gBAArB,EAAuC;AACrC,iBAAO,EAAE,OAAF,CAAU,gBAAV,EACL,EAAE,IAAF,CAAO,MAAP,CADK,EAEL,EAAE,IAAF,EACA,EAAE,SAAF,CAAY,EAAE,UAAF,CAAa,EAAE,MAAF,CAAS,UAAT,CAAb,CAAZ,EACc,EAAE,UAAF,CAAa,IAAb,0BAAsC,YADpD,CAHK,CAAP,CADqC;SAAvC;AAQA,iBAAS,SAAT,CAAmB,IAAnB,EAAyB;AACvB,iBAAO,UAAC,IAAD,EAAU;AACf,iBAAK,IAAL,IAAa,iBAAiB,eAAjB,CAAiC,EAAE,IAAF,CAAO,IAAP,EAAa,IAAb,CAAjC,CAAb,CADe;AAEf,mBAAO,IAAP,CAFe;WAAV,CADgB;SAAzB;OA5BF;AAmCA,eAAS,iBAAT,CAA2B,IAA3B,EAAiC,KAAjC,EAAwC,IAAxC,EAA8C;AAC5C,eAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,IAAX,CAAP,EAAyB,EAAE,IAAF,CAC9B,iBAAiB,YAAjB,CAA8B,KAAK,KAAL,EAAY,KAA1C,EAAiD,IAAjD,CAD8B,EAE9B,UAAC,OAAD,EAAa;AACX,gBAAM,iBAAN,WAAgC,uBAAhC,EADW;AAEX,iBAAO,OAAP,CAFW;SAAb,CAFK,EAMJ,IANI,CAAP,CAD4C;OAA9C;AASA,eAAS,eAAT,CAAyB,IAAzB,EAA+B,KAA/B,EAAsC,IAAtC,EAA4C;AAC1C,eAAO,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,IAAX,CAAP,EAAyB,EAAE,IAAF,CAC9B,iBAAiB,YAAjB,CAA8B,KAAK,MAAL,EAAa,KAA3C,EAAkD,IAAlD,CAD8B,EAE9B,UAAC,OAAD,EAAa;AACX,gBAAM,iBAAN,WAAgC,uBAAhC,EADW;AAEX,iBAAO,OAAP,CAFW;SAAb,CAFK,EAMJ,IANI,CAAP,CAD0C;OAA5C;KArDK,CADgC;GAAzC;CALD,CAAD","file":"segment.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('setSegmentCommand', setSegmentCommandModelFactory);\n\n  setSegmentCommandModelFactory.$inject =[];\n  function setSegmentCommandModelFactory() {\n    return function buildSetSegmentCommandModel(type,\n                                                gameSegmentModel) {\n      const setSegmentCommandModel = {\n        executeP: setSegmentExecuteP,\n        replayP: setSegmentReplayP,\n        undoP: setSegmentUndoP\n      };\n      return setSegmentCommandModel;\n\n      function setSegmentExecuteP(method, args, state, game) {\n        const ctxt = {\n          before: [],\n          after: [],\n          desc: method\n        };\n        return R.threadP(gameSegmentModel)(\n          checkMethod,\n          R.always(game),\n          saveState('before'),\n          () => gameSegmentModel[method]\n            .apply(null, [...args, state, game, R.prop(type, game)]),\n          (segment) => R.assoc(type, segment, game),\n          saveState('after'),\n          (game) => {\n            state.queueChangeEventP(`Game.${type}.remote.change`);\n            return [ctxt, game];\n          }\n        );\n\n        function checkMethod(gameSegmentModel) {\n          return R.threadP(gameSegmentModel)(\n            R.prop(method),\n            R.type,\n            R.rejectIfP(R.complement(R.equals('Function')),\n                       `${s.capitalize(type)} unknown method \"${method}\"`)\n          );\n        }\n        function saveState(when) {\n          return (game) => {\n            ctxt[when] = gameSegmentModel.saveRemoteState(R.prop(type, game));\n            return game;\n          };\n        }\n      }\n      function setSegmentReplayP(ctxt, state, game) {\n        return R.over(R.lensProp(type), R.pipe(\n          gameSegmentModel.resetRemote$(ctxt.after, state, game),\n          (segment) => {\n            state.queueChangeEventP(`Game.${type}.remote.change`);\n            return segment;\n          }\n        ), game);\n      }\n      function setSegmentUndoP(ctxt, state, game) {\n        return R.over(R.lensProp(type), R.pipe(\n          gameSegmentModel.resetRemote$(ctxt.before, state, game),\n          (segment) => {\n            state.queueChangeEventP(`Game.${type}.remote.change`);\n            return segment;\n          }\n        ), game);\n      }\n    };\n  }\n})();\n"]}