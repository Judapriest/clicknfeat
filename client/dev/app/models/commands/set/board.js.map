{"version":3,"sources":["board.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,iBADX,EAC8B,2BAD9B,EADU;;AAIV,8BAA4B,OAA5B,GAAsC,CACpC,UADoC,CAAtC,CAJU;AAOV,WAAS,2BAAT,CAAqC,eAArC,EAAsD;AACpD,QAAM,uBAAuB;AAC3B,gBAAU,gBAAV;AACA,eAAS,eAAT;AACA,aAAO,aAAP;KAHI,CAD8C;;AAOpD,oBAAgB,eAAhB,CAAgC,UAAhC,EAA4C,oBAA5C,EAPoD;AAQpD,WAAO,oBAAP,CARoD;;AAUpD,aAAS,gBAAT,CAA0B,KAA1B,EAAiC,KAAjC,EAAwC,IAAxC,EAA8C;AAC5C,UAAM,OAAO;AACX,gBAAQ,KAAK,KAAL;AACR,eAAO,KAAP;AACA,cAAM,MAAM,IAAN;OAHF,CADsC;AAM5C,aAAO,EAAE,KAAF,CAAQ,OAAR,EAAiB,KAAjB,EAAwB,IAAxB,CAAP,CAN4C;;AAQ5C,YAAM,iBAAN,CAAwB,mBAAxB,EAR4C;;AAU5C,aAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CAV4C;KAA9C;AAYA,aAAS,eAAT,CAAyB,IAAzB,EAA+B,KAA/B,EAAsC,IAAtC,EAA4C;AAC1C,aAAO,EAAE,KAAF,CAAQ,OAAR,EAAiB,KAAK,KAAL,EAAY,IAA7B,CAAP,CAD0C;;AAG1C,YAAM,iBAAN,CAAwB,mBAAxB,EAH0C;;AAK1C,aAAO,IAAP,CAL0C;KAA5C;AAOA,aAAS,aAAT,CAAuB,IAAvB,EAA6B,KAA7B,EAAoC,IAApC,EAA0C;AACxC,aAAO,EAAE,KAAF,CAAQ,OAAR,EAAiB,KAAK,MAAL,EAAa,IAA9B,CAAP,CADwC;;AAGxC,YAAM,iBAAN,CAAwB,mBAAxB,EAHwC;;AAKxC,aAAO,IAAP,CALwC;KAA1C;GA7BF;CAPD,CAAD","file":"board.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('setBoardCommand', setBoardCommandModelFactory);\n\n  setBoardCommandModelFactory.$inject = [\n    'commands',\n  ];\n  function setBoardCommandModelFactory(commandsService) {\n    const setBoardCommandModel = {\n      executeP: setBoardExecuteP,\n      replayP: setBoardReplayP,\n      undoP: setBoardUndoP\n    };\n\n    commandsService.registerCommand('setBoard', setBoardCommandModel);\n    return setBoardCommandModel;\n\n    function setBoardExecuteP(board, state, game) {\n      const ctxt = {\n        before: game.board,\n        after: board,\n        desc: board.name\n      };\n      game = R.assoc('board', board, game);\n\n      state.queueChangeEventP('Game.board.change');\n\n      return [ctxt, game];\n    }\n    function setBoardReplayP(ctxt, state, game) {\n      game = R.assoc('board', ctxt.after, game);\n\n      state.queueChangeEventP('Game.board.change');\n\n      return game;\n    }\n    function setBoardUndoP(ctxt, state, game) {\n      game = R.assoc('board', ctxt.before, game);\n\n      state.queueChangeEventP('Game.board.change');\n\n      return game;\n    }\n  }\n})();\n"]}