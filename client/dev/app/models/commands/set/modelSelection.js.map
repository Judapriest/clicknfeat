{"version":3,"sources":["modelSelection.es6"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,0BADX,EACuC,CACnC,UADmC,EAEnC,oBAFmC,EAGnC,SAAS,sCAAT,CAAgD,eAAhD,EACgD,yBADhD,EAC2E;AACzE,MAAI,kCAAkC;AACpC,aAAS,SAAS,wBAAT,CAAkC,MAAlC,EAA0C,MAA1C,EAAkD,KAAlD,EAAyD,IAAzD,EAA+D;AACtE,UAAG,eAAe,EAAE,IAAF,CAAO,0BAA0B,MAA1B,CAAP,CAAf,EAA0D;AAC3D,eAAO,KAAK,OAAL,CACJ,MADI,uCACuC,MADvC,CAAP,CAD2D;OAA7D;;AAKA,UAAI,YAAY,0BAA0B,MAA1B,EAAkC,OAAlC,EAA2C,MAA3C,EACkC,KADlC,EACyC,KAAK,eAAL,CADrD,CANkE;AAQtE,aAAO,EAAE,KAAF,CAAQ,iBAAR,EAA2B,SAA3B,EAAsC,IAAtC,CAAP,CARsE;;AAUtE,UAAI,OAAO;AACT,eAAO,0BAA0B,GAA1B,CAA8B,OAA9B,EAAuC,KAAK,eAAL,CAA9C;AACA,cAAM,EAAN;AACA,oBAAY,IAAZ;OAHE,CAVkE;AAetE,aAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CAfsE;KAA/D;AAiBT,YAAQ,SAAS,uBAAT,CAAiC,IAAjC,EAAuC,KAAvC,EAA8C,IAA9C,EAAoD;AAC1D,UAAI,YAAY,0BACT,GADS,CACL,QADK,EACK,KAAK,KAAL,EAAY,KADjB,EACwB,KAAK,eAAL,CADpC,CADsD;AAG1D,aAAO,EAAE,KAAF,CAAQ,iBAAR,EAA2B,SAA3B,EAAsC,IAAtC,CAAP,CAH0D;AAI1D,aAAO,IAAP,CAJ0D;KAApD;AAMR,UAAM,SAAS,qBAAT,GAAiC;AACrC,aAAO,KAAK,OAAL,CACJ,MADI,CACG,uCADH,CAAP,CADqC;KAAjC;GAxBJ,CADqE;AA8BzE,kBAAgB,eAAhB,CAAgC,mBAAhC,EAAqD,+BAArD,EA9ByE;AA+BzE,SAAO,+BAAP,CA/ByE;CAD3E,CAJJ","file":"modelSelection.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('setModelSelectionCommand', [\n    'commands',\n    'gameModelSelection',\n    function setModelSelectionCommandServiceFactory(commandsService,\n                                                    gameModelSelectionService) {\n      var setModelSelectionCommandService = {\n        execute: function setModelSelectionExecute(method, stamps, state, game) {\n          if('Function' !== R.type(gameModelSelectionService[method])) {\n            return self.Promise\n              .reject(`SetModelSelection unknown method ${method}`);\n          }\n\n          let selection = gameModelSelectionService[method]('local', stamps,\n                                                            state, game.model_selection);\n          game = R.assoc('model_selection', selection, game);\n\n          var ctxt = {\n            after: gameModelSelectionService.get('local', game.model_selection),\n            desc: '',\n            do_not_log: true\n          };\n          return [ctxt, game];\n        },\n        replay: function setModelSelectionReplay(ctxt, state, game) {\n          let selection = gameModelSelectionService\n                .set('remote', ctxt.after, state, game.model_selection);\n          game = R.assoc('model_selection', selection, game);\n          return game;\n        },\n        undo: function setModelSelectionUndo() {\n          return self.Promise\n            .reject('!!! ERROR : WE SHOULD NOT BE HERE !!!');\n        }\n      };\n      commandsService.registerCommand('setModelSelection', setModelSelectionCommandService);\n      return setModelSelectionCommandService;\n    }\n  ]);\n"]}