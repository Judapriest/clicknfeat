{"version":3,"sources":["layers.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,kBADX,EAC+B,4BAD/B,EADU;;AAIV,+BAA6B,OAA7B,GAAuC,CACrC,UADqC,EAErC,YAFqC,CAAvC,CAJU;AAQV,WAAS,4BAAT,CAAsC,aAAtC,EACsC,eADtC,EACuD;AACrD,QAAM,cAAc,EAAE,QAAF,CAAW,QAAX,CAAd,CAD+C;;AAGrD,QAAM,wBAAwB;AAC5B,gBAAU,iBAAV;AACA,eAAS,cAAT;AACA,aAAO,cAAP;KAHI,CAH+C;AAQrD,kBAAc,eAAd,CAA8B,WAA9B,EAA2C,qBAA3C,EARqD;AASrD,WAAO,qBAAP,CATqD;;AAWrD,aAAS,iBAAT,CAA2B,MAA3B,EAAmC,GAAnC,EAAwC,IAAxC,EAA8C;AAC5C,aAAO,EAAE,OAAF,CAAU,MAAV,EACL,YADK,EAEL;eAAO;AACL,kBAAQ,EAAE,IAAF,CAAO,WAAP,EAAoB,IAApB,CAAR;AACA,gBAAS,eAAU,SAAnB;;OAFF,EAIA,UAAC,IAAD,EAAU;AACR,eAAO,EAAE,IAAF,CACL,WADK,EAEL,gBAAmB,YAAnB,EAA8B,GAA9B,CAFK,EAGL,IAHK,CAAP,CADQ;AAMR,aAAK,KAAL,GAAa,EAAE,IAAF,CAAO,WAAP,EAAoB,IAApB,CAAb,CANQ;AAOR,eAAO,CAAE,IAAF,EAAQ,IAAR,CAAP,CAPQ;OAAV,CANF,CAD4C;KAA9C;AAkBA,aAAS,cAAT,CAAwB,IAAxB,EAA8B,IAA9B,EAAoC;AAClC,aAAO,EAAE,GAAF,CAAM,WAAN,EAAmB,KAAK,KAAL,EAAY,IAA/B,CAAP,CADkC;KAApC;AAGA,aAAS,cAAT,CAAwB,IAAxB,EAA8B,IAA9B,EAAoC;AAClC,aAAO,EAAE,GAAF,CAAM,WAAN,EAAmB,KAAK,MAAL,EAAa,IAAhC,CAAP,CADkC;KAApC;AAGA,aAAS,YAAT,CAAsB,MAAtB,EAA8B;AAC5B,aAAO,EAAE,MAAF,CAAS,MAAT,EACL,EAAE,IAAF,CAAO,EAAE,EAAF,EAAM,eAAb,CADK,EAEL,EAAE,IAAF,EACA,EAAE,SAAF,CAAY,EAAE,UAAF,CAAa,EAAE,MAAF,CAAb,CAAuB,UAAvB,CAAZ,8BACsC,YADtC,CAHK,CAAP,CAD4B;KAA9B;GApCF;CARD,CAAD","file":"layers.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('setLayersCommand', setLayersCommandModelFactory);\n\n  setLayersCommandModelFactory.$inject = [\n    'commands',\n    'gameLayers',\n  ];\n  function setLayersCommandModelFactory(commandsModel,\n                                        gameLayersModel) {\n    const LAYERS_LENS = R.lensProp('layers');\n\n    const setLayersCommandModel = {\n      executeP: setLayersExecuteP,\n      replayP: setLayersRedoP,\n      undoP: setLayersUndoP\n    };\n    commandsModel.registerCommand('setLayers', setLayersCommandModel);\n    return setLayersCommandModel;\n\n    function setLayersExecuteP(method, arg, game) {\n      return R.threadP(method)(\n        checkMethodP,\n        () => ({\n          before: R.view(LAYERS_LENS, game),\n          desc: `${method}(${arg})`\n        }),\n        (ctxt) => {\n          game = R.over(\n            LAYERS_LENS,\n            gameLayersModel[`${method}$`](arg),\n            game\n          );\n          ctxt.after = R.view(LAYERS_LENS, game);\n          return [ ctxt, game ];\n        }\n      );\n    }\n    function setLayersRedoP(ctxt, game) {\n      return R.set(LAYERS_LENS, ctxt.after, game);\n    }\n    function setLayersUndoP(ctxt, game) {\n      return R.set(LAYERS_LENS, ctxt.before, game);\n    }\n    function checkMethodP(method) {\n      return R.thread(method)(\n        R.prop(R.__, gameLayersModel),\n        R.type,\n        R.rejectIfP(R.complement(R.equals)('Function'),\n                    `Layers unknown method \"${method}\"`)\n      );\n    }\n  }\n})();\n"]}