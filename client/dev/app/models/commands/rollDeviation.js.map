{"version":3,"sources":["rollDeviation.es6"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,sBADX,EACmC,CAC/B,UAD+B,EAE/B,SAAS,kCAAT,CAA4C,eAA5C,EAA6D;AAC3D,MAAI,8BAA8B;AAChC,aAAS,SAAS,oBAAT,CAA8B,KAA9B,EAAqC,IAArC,EAA2C;AAClD,UAAI,YAAY,EAAE,WAAF,CAAc,CAAd,EAAiB,CAAjB,CAAZ,CAD8C;AAElD,UAAI,WAAW,EAAE,WAAF,CAAc,CAAd,EAAiB,CAAjB,CAAX,CAF8C;;AAIlD,UAAI,OAAO;AACT,6CAAmC,4BAAuB,cAA1D;AACA,WAAG,SAAH;AACA,WAAG,QAAH;OAHE,CAJ8C;;AAUlD,YAAM,WAAN,CAAkB,gBAAlB,EAVkD;;AAYlD,aAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CAZkD;KAA3C;AAcT,YAAQ,SAAS,YAAT,CAAsB,IAAtB,EAA4B,KAA5B,EAAmC,IAAnC,EAAyC;AAC/C,UAAI,OAAO,EAAE,MAAF,CAAS,EAAT,EAAa,MAAb,EAAqB,IAArB,CAAP,CAD2C;AAE/C,aAAO,EAAE,KAAF,CAAQ,MAAR,EAAgB,EAAE,MAAF,CAAS,IAAT,EAAe,IAAf,CAAhB,EAAsC,IAAtC,CAAP,CAF+C;;AAI/C,YAAM,WAAN,CAAkB,gBAAlB,EAJ+C;;AAM/C,aAAO,IAAP,CAN+C;KAAzC;AAQR,UAAM,SAAS,YAAT,CAAsB,IAAtB,EAA4B,KAA5B,EAAmC,IAAnC,EAAyC;AAC7C,UAAI,OAAO,EAAE,MAAF,CAAS,EAAT,EAAa,MAAb,EAAqB,IAArB,CAAP,CADyC;AAE7C,aAAO,EAAE,KAAF,CAAQ,MAAR,EAAgB,EAAE,MAAF,CAAS,EAAE,MAAF,CAAS,OAAT,EAAkB,KAAK,KAAL,CAA3B,EAAwC,IAAxC,CAAhB,EAA+D,IAA/D,CAAP,CAF6C;;AAI7C,YAAM,WAAN,CAAkB,gBAAlB,EAJ6C;;AAM7C,aAAO,IAAP,CAN6C;KAAzC;GAvBJ,CADuD;AAiC3D,kBAAgB,eAAhB,CAAgC,eAAhC,EAAiD,2BAAjD,EAjC2D;AAkC3D,SAAO,2BAAP,CAlC2D;CAA7D,CAHJ","file":"rollDeviation.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('rollDeviationCommand', [\n    'commands',\n    function rollDeviationCommandServiceFactory(commandsService) {\n      var rollDeviationCommandService = {\n        execute: function rollDeviationExecute(state, game) {\n          var direction = R.randomRange(1, 6);\n          var distance = R.randomRange(1, 6);\n          \n          var ctxt = {\n            desc: `AoE deviation : direction ${direction}, distance ${distance}\"`,\n            r: direction,\n            d: distance\n          };\n\n          state.changeEvent('Game.dice.roll');\n\n          return [ctxt, game];\n        },\n        replay: function rollDiceRedo(ctxt, state, game) {\n          let dice = R.propOr([], 'dice', game);\n          game = R.assoc('dice', R.append(ctxt, dice), game);\n\n          state.changeEvent('Game.dice.roll');\n\n          return game;\n        },\n        undo: function rollDiceUndo(ctxt, state, game) {\n          let dice = R.propOr([], 'dice', game);\n          game = R.assoc('dice', R.reject(R.propEq('stamp', ctxt.stamp), dice), game);\n\n          state.changeEvent('Game.dice.roll');\n\n          return game;\n        }\n      };\n      commandsService.registerCommand('rollDeviation', rollDeviationCommandService);\n      return rollDeviationCommandService;\n    }\n  ]);\n"]}