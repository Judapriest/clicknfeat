{"version":3,"sources":["onElements.es6"],"names":[],"mappings":"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","file":"onElements.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('onElementsCommand', onElementsCommandModelFactory);\n\n  onElementsCommandModelFactory.$inject = [];\n  function onElementsCommandModelFactory() {\n    return function buildOnElementsCommandModel(type,\n                                                elementModel,\n                                                gameElementsModel,\n                                                gameElementSelectionModel) {\n      const onElementsCommandModel = {\n        executeP: onElementsExecuteP,\n        replayP: onElementsReplayP,\n        undoP: onElementsUndoP\n      };\n\n      const applyMethodOnGameElementsP$ = R.curry(applyMethodOnGameElementsP);\n      const setStates$ = R.curry(setStates);\n      const saveStatesP$ = R.curry(saveStatesP);\n      const setRemoteSelection$ = R.curry(setRemoteSelection);\n      const emitChangeEvents$ = R.curry(emitChangeEvents);\n\n      return onElementsCommandModel;\n\n      function onElementsExecuteP(method, args, stamps, state, game) {\n        return R.threadP(elementModel)(\n          R.prop(method),\n          R.type,\n          R.rejectIf(R.complement(R.equals('Function')),\n                     `Unknown method \"${method}\" on ${type}`),\n          () => {\n            const ctxt = {\n              before: [],\n              after: [],\n              desc: method\n            };\n\n            return R.threadP(game)(\n              saveStatesP$(ctxt, 'before', stamps),\n              applyMethodOnGameElementsP$(method, args, stamps),\n              saveStatesP$(ctxt, 'after', stamps),\n              emitChangeEvents$(stamps, state),\n              (game) => {\n                return [ctxt, game];\n              }\n            );\n          }\n        );\n      }\n      function onElementsReplayP(ctxt, state, game) {\n        const stamps = R.pluck('stamp', ctxt.after);\n        return R.threadP(game)(\n          setStates$(ctxt.after, stamps),\n          setRemoteSelection$(stamps, state),\n          emitChangeEvents$(stamps, state)\n        );\n      }\n      function onElementsUndoP(ctxt, state, game) {\n        const stamps = R.pluck('stamp', ctxt.before);\n        return R.threadP(game)(\n          setStates$(ctxt.before, stamps),\n          setRemoteSelection$(stamps, state),\n          emitChangeEvents$(stamps, state)\n        );\n      }\n\n      function applyMethodOnGameElementsP(method, args, stamps, game) {\n        return R.threadP(game)(\n          R.prop(`${type}s`),\n          gameElementsModel.onStampsP$(method, args, stamps),\n          (elements) => {\n            return R.assoc(`${type}s`, elements, game);\n          }\n        );\n      }\n      function setStates(states, stamps, game) {\n        return R.threadP(game)(\n          R.prop(`${type}s`),\n          gameElementsModel.setStateStampsP$(states, stamps),\n          (elements) => {\n            return R.assoc(`${type}s`, elements, game);\n          }\n        );\n      }\n      function saveStatesP(ctxt, prop, stamps, game) {\n        return R.threadP(game)(\n          R.prop(`${type}s`),\n          gameElementsModel.fromStampsP$('saveState', [], stamps),\n          (states) => {\n            ctxt[prop] = states;\n            return game;\n          }\n        );\n      }\n      function setRemoteSelection(stamps, state, game) {\n        return R.thread(game)(\n          R.prop(`${type}_selection`),\n          gameElementSelectionModel.set$('remote', stamps, state),\n          (selection) => {\n            return R.assoc(`${type}_selection`, selection, game);\n          }\n        );\n      }\n      function emitChangeEvents(stamps, state, game) {\n        R.forEach((stamp) => {\n          state.queueChangeEventP(`Game.${type}.change.${stamp}`);\n        }, stamps);\n        return game;\n      }\n    };\n  }\n})();\n"]}