{"version":3,"sources":["onTerrains.es6"],"names":[],"mappings":"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","file":"onTerrains.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('onTerrainsCommand', onTerrainsCommandModelFactory);\n\n  onTerrainsCommandModelFactory.$inject = [\n    'commands',\n    'terrain',\n    'gameTerrains',\n    'gameTerrainSelection',\n  ];\n  function onTerrainsCommandModelFactory(commandsModel,\n                                         terrainModel,\n                                         gameTerrainsModel,\n                                         gameTerrainSelectionModel) {\n    const onTerrainsCommandModel = {\n      executeP: onTerrainsExecuteP,\n      replayP: onTerrainsReplayP,\n      undoP: onTerrainsUndoP\n    };\n\n    const applyMethodOnGameTerrainsP$ = R.curry(applyMethodOnGameTerrainsP);\n    const setStates$ = R.curry(setStates);\n    const saveStatesP$ = R.curry(saveStatesP);\n    const setRemoteSelection$ = R.curry(setRemoteSelection);\n    const emitChangeEvents$ = R.curry(emitChangeEvents);\n\n    commandsModel.registerCommand('onTerrains', onTerrainsCommandModel);\n    return onTerrainsCommandModel;\n\n    function onTerrainsExecuteP(method, args, stamps, state, game) {\n      return R.threadP(terrainModel)(\n        R.prop(method),\n        R.type,\n        R.rejectIf(R.complement(R.equals('Function')),\n                   `Unknown method \"${method}\" on terrain`),\n        () => {\n          const ctxt = {\n            before: [],\n            after: [],\n            desc: method\n          };\n\n          return R.threadP(game)(\n            saveStatesP$(ctxt, 'before', stamps),\n            applyMethodOnGameTerrainsP$(method, args, stamps),\n            saveStatesP$(ctxt, 'after', stamps),\n            emitChangeEvents$(stamps, state),\n            (game) => {\n              return [ctxt, game];\n            }\n          );\n        }\n      );\n    }\n    function onTerrainsReplayP(ctxt, state, game) {\n      const stamps = R.pluck('stamp', ctxt.after);\n      return R.threadP(game)(\n        setStates$(ctxt.after, stamps),\n        setRemoteSelection$(stamps, state),\n        emitChangeEvents$(stamps, state)\n      );\n    }\n    function onTerrainsUndoP(ctxt, state, game) {\n      const stamps = R.pluck('stamp', ctxt.before);\n      return R.threadP(game)(\n        setStates$(ctxt.before, stamps),\n        setRemoteSelection$(stamps, state),\n        emitChangeEvents$(stamps, state)\n      );\n    }\n\n    function applyMethodOnGameTerrainsP(method, args, stamps, game) {\n      return R.threadP(game.terrains)(\n        gameTerrainsModel.onStampsP$(method, args, stamps),\n        (terrains) => {\n          return R.assoc('terrains', terrains, game);\n        }\n      );\n    }\n    function setStates(states, stamps, game) {\n      return R.threadP(game.terrains)(\n        gameTerrainsModel.setStateStampsP$(states, stamps),\n        (terrains) => {\n          return R.assoc('terrains', terrains, game);\n        }\n      );\n    }\n    function saveStatesP(ctxt, prop, stamps, game) {\n      return R.threadP(game.terrains)(\n        gameTerrainsModel.fromStampsP$('saveState', [], stamps),\n        (states) => {\n          ctxt[prop] = states;\n          return game;\n        }\n      );\n    }\n    function setRemoteSelection(stamps, state, game) {\n      return R.thread(game.terrain_selection)(\n        gameTerrainSelectionModel.set$('remote', stamps, state),\n        (selection) => {\n          return R.assoc('terrain_selection', selection, game);\n        }\n      );\n    }\n    function emitChangeEvents(stamps, state, game) {\n      R.forEach((stamp) => {\n        state.queueChangeEventP(`Game.terrain.change.${stamp}`);\n      }, stamps);\n      return game;\n    }\n  }\n})();\n"]}