{"version":3,"sources":["lockTerrains.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,qBADX,EACkC,+BADlC,EADU;;AAIV,kCAAgC,OAAhC,GAA0C,CACxC,UADwC,EAExC,cAFwC,CAA1C,CAJU;AAQV,WAAS,+BAAT,CAAyC,aAAzC,EACyC,iBADzC,EAC4D;AAC1D,QAAM,2BAA2B;AAC/B,gBAAU,oBAAV;AACA,eAAS,iBAAT;AACA,aAAO,iBAAP;KAHI,CADoD;;AAO1D,QAAM,eAAe,EAAE,KAAF,CAAQ,WAAR,CAAf,CAPoD;AAQ1D,QAAM,oBAAoB,EAAE,KAAF,CAAQ,gBAAR,CAApB,CARoD;;AAU1D,kBAAc,eAAd,CAA8B,cAA9B,EAA8C,wBAA9C,EAV0D;AAW1D,WAAO,wBAAP,CAX0D;;AAa1D,aAAS,oBAAT,CAA8B,IAA9B,EAAoC,MAApC,EAA4C,KAA5C,EAAmD,IAAnD,EAAyD;AACvD,UAAM,OAAO;AACX,cAAM,IAAN;AACA,gBAAQ,MAAR;OAFI,CADiD;;AAMvD,aAAO,EAAE,OAAF,CAAU,IAAV,EACL,aAAa,IAAb,EAAmB,MAAnB,CADK,EAEL,kBAAkB,MAAlB,EAA0B,KAA1B,CAFK,EAGL,UAAC,IAAD,EAAU;AACR,eAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CADQ;OAAV,CAHF,CANuD;KAAzD;AAcA,aAAS,iBAAT,CAA2B,IAA3B,EAAiC,KAAjC,EAAwC,IAAxC,EAA8C;AAC5C,aAAO,EAAE,OAAF,CAAU,IAAV,EACL,aAAa,KAAK,IAAL,EAAW,KAAK,MAAL,CADnB,EAEL,kBAAkB,KAAK,MAAL,EAAa,KAA/B,CAFK,CAAP,CAD4C;KAA9C;AAMA,aAAS,iBAAT,CAA2B,IAA3B,EAAiC,KAAjC,EAAwC,IAAxC,EAA8C;AAC5C,aAAO,EAAE,OAAF,CAAU,IAAV,EACL,aAAa,CAAC,KAAK,IAAL,EAAW,KAAK,MAAL,CADpB,EAEL,kBAAkB,KAAK,MAAL,EAAa,KAA/B,CAFK,CAAP,CAD4C;KAA9C;AAMA,aAAS,WAAT,CAAqB,IAArB,EAA2B,MAA3B,EAAmC,IAAnC,EAAyC;AACvC,aAAO,EAAE,OAAF,CAAU,KAAK,QAAL,CAAV,CACL,kBAAkB,YAAlB,CAA+B,IAA/B,EAAqC,MAArC,CADK,EAEL,UAAC,aAAD,EAAmB;AACjB,eAAO,EAAE,KAAF,CAAQ,UAAR,EAAoB,aAApB,EAAmC,IAAnC,CAAP,CADiB;OAAnB,CAFF,CADuC;KAAzC;AAQA,aAAS,gBAAT,CAA0B,MAA1B,EAAkC,KAAlC,EAAyC,IAAzC,EAA+C;AAC7C,QAAE,OAAF,CAAU,UAAC,KAAD,EAAW;AACnB,cAAM,iBAAN,0BAA+C,KAA/C,EADmB;OAAX,EAEP,MAFH,EAD6C;AAI7C,YAAM,iBAAN,CAAwB,qBAAxB,EAJ6C;AAK7C,aAAO,IAAP,CAL6C;KAA/C;GAhDF;CARD,CAAD","file":"lockTerrains.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('lockTerrainsCommand', lockTerrainsCommandModelFactory);\n\n  lockTerrainsCommandModelFactory.$inject = [\n    'commands',\n    'gameTerrains',\n  ];\n  function lockTerrainsCommandModelFactory(commandsModel,\n                                           gameTerrainsModel) {\n    const lockTerrainsCommandModel = {\n      executeP: lockTerrainsExecuteP,\n      replayP: lockTerrainsRedoP,\n      undoP: lockTerrainsUndoP\n    };\n\n    const lockStampsP$ = R.curry(lockStampsP);\n    const emitChangeEvents$ = R.curry(emitChangeEvents);\n\n    commandsModel.registerCommand('lockTerrains', lockTerrainsCommandModel);\n    return lockTerrainsCommandModel;\n\n    function lockTerrainsExecuteP(lock, stamps, state, game) {\n      const ctxt = {\n        desc: lock,\n        stamps: stamps\n      };\n\n      return R.threadP(game)(\n        lockStampsP$(lock, stamps),\n        emitChangeEvents$(stamps, state),\n        (game) => {\n          return [ctxt, game];\n        }\n      );\n    }\n    function lockTerrainsRedoP(ctxt, state, game) {\n      return R.threadP(game)(\n        lockStampsP$(ctxt.desc, ctxt.stamps),\n        emitChangeEvents$(ctxt.stamps, state)\n      );\n    }\n    function lockTerrainsUndoP(ctxt, state, game) {\n      return R.threadP(game)(\n        lockStampsP$(!ctxt.desc, ctxt.stamps),\n        emitChangeEvents$(ctxt.stamps, state)\n      );\n    }\n    function lockStampsP(lock, stamps, game) {\n      return R.threadP(game.terrains)(\n        gameTerrainsModel.lockStampsP$(lock, stamps),\n        (game_terrains) => {\n          return R.assoc('terrains', game_terrains, game);\n        }\n      );\n    }\n    function emitChangeEvents(stamps, state, game) {\n      R.forEach((stamp) => {\n        state.queueChangeEventP(`Game.terrain.change.${stamp}`);\n      }, stamps);\n      state.queueChangeEventP('Game.terrain.create');\n      return game;\n    }\n  }\n})();\n"]}