{"version":3,"sources":["terrainInfo.es6"],"names":[],"mappings":"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","file":"terrainInfo.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('gameTerrainInfo', gameTerrainInfoModelFactory);\n\n  gameTerrainInfoModelFactory.$inject = [\n    'http',\n  ];\n  function gameTerrainInfoModelFactory(httpService) {\n    const gameTerrainInfoModel = {\n      initP: gameTerrainInfoInitP,\n      getInfoP: gameTerrainInfoGetInfoP\n    };\n\n    R.curryService(gameTerrainInfoModel);\n    return gameTerrainInfoModel;\n\n    function gameTerrainInfoInitP() {\n      return R.thread('/data/terrains.json')(\n        httpService.getP,\n        R.condErrorP([\n          [ R.T, (reason) => {\n            console.error('Error getting terrains.json', reason);\n            return [];\n          } ]\n        ]),\n        updateTerrainsP\n      );\n    }\n    function gameTerrainInfoGetInfoP(path, infos) {\n      return new self.Promise((resolve, reject) => {\n        var info = R.path(path, infos);\n        if(R.isNil(info)) reject(`Terrain info \"${path.join('.')}\" not found`);\n        else resolve(info);\n      });\n    }\n    function updateTerrainsP(terrains) {\n      return R.threadP(terrains)(\n        updateTerrains\n      );\n    }\n    function updateTerrains(terrains) {\n      return R.thread(terrains)(\n        R.keys,\n        R.sortBy(R.identity),\n        R.reduce((mem, key) => {\n          mem[key] = updateAmbiance(terrains[key]);\n          return mem;\n        }, {})\n      );\n    }\n    function updateAmbiance(ambiance) {\n      return R.thread(ambiance)(\n        R.keys,\n        R.sortBy(R.identity),\n        R.reduce((mem, key) => {\n          mem[key] = updateType(ambiance[key]);\n          return mem;\n        }, {})\n      );\n    }\n    function updateType(type) {\n      return R.thread(type)(\n        R.keys,\n        R.sortBy(R.identity),\n        R.reduce((mem, key) => {\n          mem[key] = updateTerrain(type[key]);\n          return mem;\n        }, {})\n      );\n    }\n    function updateTerrain(terrain) {\n      return R.thread(terrain)(\n        R.over(R.lensPath(['img','width']), R.divide(R.__, 3)),\n        R.over(R.lensPath(['img','height']), R.divide(R.__, 3))\n      );\n    }\n  }\n})();\n"]}