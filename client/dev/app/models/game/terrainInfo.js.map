{"version":3,"sources":["terrainInfo.es6"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,iBADX,EAC8B,CAC1B,MAD0B,EAE1B,SAAS,6BAAT,CAAuC,WAAvC,EAAoD;AAClD,MAAI,yBAAyB;AAC3B,UAAM,SAAS,mBAAT,GAA+B;AACnC,aAAO,YAAY,GAAZ,CAAgB,qBAAhB,EACJ,KADI,CACE,UAAC,MAAD,EAAY;AACjB,gBAAQ,KAAR,CAAc,6BAAd,EAA6C,MAA7C,EADiB;AAEjB,eAAO,EAAP,CAFiB;OAAZ,CADF,CAKJ,IALI,CAKC,cALD,CAAP,CADmC;KAA/B;AAQN,aAAS,SAAS,sBAAT,CAAgC,IAAhC,EAAsC,KAAtC,EAA6C;AACpD,aAAO,IAAI,KAAK,OAAL,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AAC3C,YAAI,OAAO,EAAE,IAAF,CAAO,IAAP,EAAa,KAAb,CAAP,CADuC;AAE3C,YAAG,EAAE,KAAF,CAAQ,IAAR,CAAH,EAAkB,yBAAuB,KAAK,IAAL,CAAU,GAAV,gBAAvB,EAAlB,KACK,QAAQ,IAAR,EADL;OAFsB,CAAxB,CADoD;KAA7C;GATP,CAD8C;AAkBlD,WAAS,cAAT,CAAwB,QAAxB,EAAkC;AAChC,WAAO,EAAE,IAAF,CACL,EAAE,IAAF,EACA,EAAE,MAAF,CAAS,EAAE,QAAF,CAFJ,EAGL,EAAE,MAAF,CAAS,UAAC,GAAD,EAAM,GAAN,EAAc;AACrB,UAAI,GAAJ,IAAW,eAAe,SAAS,GAAT,CAAf,CAAX,CADqB;AAErB,aAAO,GAAP,CAFqB;KAAd,EAGN,EAHH,CAHK,EAOL,QAPK,CAAP,CADgC;GAAlC;AAUA,WAAS,cAAT,CAAwB,QAAxB,EAAkC;AAChC,WAAO,EAAE,IAAF,CACL,EAAE,IAAF,EACA,EAAE,MAAF,CAAS,EAAE,QAAF,CAFJ,EAGL,EAAE,MAAF,CAAS,UAAC,GAAD,EAAM,GAAN,EAAc;AACrB,UAAI,GAAJ,IAAW,WAAW,SAAS,GAAT,CAAX,CAAX,CADqB;AAErB,aAAO,GAAP,CAFqB;KAAd,EAGN,EAHH,CAHK,EAOL,QAPK,CAAP,CADgC;GAAlC;AAUA,WAAS,UAAT,CAAoB,IAApB,EAA0B;AACxB,WAAO,EAAE,IAAF,CACL,EAAE,IAAF,EACA,EAAE,MAAF,CAAS,EAAE,QAAF,CAFJ,EAGL,EAAE,MAAF,CAAS,UAAC,GAAD,EAAM,GAAN,EAAc;AACrB,UAAI,GAAJ,IAAW,cAAc,KAAK,GAAL,CAAd,CAAX,CADqB;AAErB,aAAO,GAAP,CAFqB;KAAd,EAGN,EAHH,CAHK,EAOL,IAPK,CAAP,CADwB;GAA1B;AAUA,WAAS,aAAT,CAAuB,OAAvB,EAAgC;AAC9B,WAAO,EAAE,IAAF,CACL,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,KAAD,EAAO,OAAP,CAAX,CAAP,EAAoC,EAAE,MAAF,CAAS,EAAE,EAAF,EAAM,CAAf,CAApC,CADK,EAEL,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,CAAC,KAAD,EAAO,QAAP,CAAX,CAAP,EAAqC,EAAE,MAAF,CAAS,EAAE,EAAF,EAAM,CAAf,CAArC,CAFK,EAGL,OAHK,CAAP,CAD8B;GAAhC;AAMA,IAAE,YAAF,CAAe,sBAAf,EAtDkD;AAuDlD,SAAO,sBAAP,CAvDkD;CAApD,CAHJ","file":"terrainInfo.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('gameTerrainInfo', [\n    'http',\n    function gameTerrainInfoServiceFactory(httpService) {\n      var gameTerrainInfoService = {\n        init: function gameTerrainInfoInit() {\n          return httpService.get('/data/terrains.json')\n            .catch((reason) => {\n              console.error('Error getting terrains.json', reason);\n              return [];\n            })\n            .then(updateTerrains);\n        },\n        getInfo: function gameTerrainInfoGetInfo(path, infos) {\n          return new self.Promise((resolve, reject) => {\n            var info = R.path(path, infos);\n            if(R.isNil(info)) reject(`Terrain info ${path.join('.')} not found`);\n            else resolve(info);\n          });\n        }\n      };\n      function updateTerrains(terrains) {\n        return R.pipe(\n          R.keys,\n          R.sortBy(R.identity),\n          R.reduce((mem, key) => {\n            mem[key] = updateAmbiance(terrains[key]);\n            return mem;\n          }, {})\n        )(terrains);\n      }\n      function updateAmbiance(ambiance) {\n        return R.pipe(\n          R.keys,\n          R.sortBy(R.identity),\n          R.reduce((mem, key) => {\n            mem[key] = updateType(ambiance[key]);\n            return mem;\n          }, {})\n        )(ambiance);\n      }\n      function updateType(type) {\n        return R.pipe(\n          R.keys,\n          R.sortBy(R.identity),\n          R.reduce((mem, key) => {\n            mem[key] = updateTerrain(type[key]);\n            return mem;\n          }, {})\n        )(type);\n      }\n      function updateTerrain(terrain) {\n        return R.pipe(\n          R.over(R.lensPath(['img','width']), R.divide(R.__, 3)),\n          R.over(R.lensPath(['img','height']), R.divide(R.__, 3))\n        )(terrain);\n      }\n      R.curryService(gameTerrainInfoService);\n      return gameTerrainInfoService;\n    }\n  ]);\n"]}