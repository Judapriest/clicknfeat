{"version":3,"sources":["modelSelection.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,oBADX,EACiC,8BADjC,EADU;;AAIV,iCAA+B,OAA/B,GAAyC,CACvC,sBADuC,EAEvC,YAFuC,CAAzC,CAJU;AAQV,WAAS,8BAAT,CAAwC,yBAAxC,EACwC,eADxC,EACyD;AACvD,QAAM,OAAO,0BAA0B,OAA1B,CAAP,CADiD;AAEvD,QAAM,0BAA0B,OAAO,MAAP,CAAc,IAAd,CAA1B,CAFiD;AAGvD,MAAE,UAAF,CAAa,uBAAb,EAAsC;AACpC,gBAAU,sBAAV;AACA,gBAAU,QAAV;AACA,kBAAY,wBAAZ;KAHF,EAHuD;AAQvD,MAAE,YAAF,CAAe,uBAAf,EARuD;AASvD,WAAO,uBAAP,CATuD;;AAWvD,aAAS,sBAAT,CAAgC,KAAhC,EAAuC,KAAvC,EAA8C,SAA9C,EAAyD;AACvD,UAAM,SAAS,EAAE,IAAF,CAAO,KAAP,EAAc,SAAd,CAAT,CADiD;AAEvD,aAAS,EAAE,MAAF,CAAS,MAAT,MAAqB,CAArB,IACA,OAAO,CAAP,MAAc,KAAd,CAH8C;KAAzD;AAKA,aAAS,QAAT,CAAkB,MAAlB,EAA0B,SAA1B,EAAqC;AACnC,UAAM,QAAQ,wBAAwB,GAAxB,CAA4B,OAA5B,EAAqC,SAArC,CAAR,CAD6B;AAEnC,UAAG,EAAE,OAAF,CAAU,KAAV,CAAH,EAAqB;AACnB,eAAO,KAAK,OAAL,CAAa,MAAb,CAAoB,oBAApB,CAAP,CADmB;OAArB;AAGA,UAAG,EAAE,MAAF,CAAS,KAAT,MAAoB,CAApB,EAAuB;AACxB,eAAO,gBAAgB,aAAhB,CAA8B,MAAM,CAAN,CAA9B,EAAwC,MAAxC,CAAP,CADwB;OAA1B;AAGA,aAAO,QAAP,CARmC;KAArC;AAUA,aAAS,wBAAT,CAAkC,KAAlC,EAAyC,SAAzC,EAAoD;AAClD,aAAO,EAAE,OAAF,CAAU,SAAV,EACL,wBAAwB,SAAxB,CAAkC,MAAM,IAAN,CAAW,MAAX,CAD7B,EAEL,UAAC,IAAD,EAAU;AACR,cAAM,WAAN,CAAkB,gBAAlB,EAAoC,IAApC,EADQ;OAAV,CAFF,CADkD;KAApD;GA3BF;CARD,CAAD","file":"modelSelection.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('gameModelSelection', gameModelSelectionModelFactory);\n\n  gameModelSelectionModelFactory.$inject = [\n    'gameElementSelection',\n    'gameModels',\n  ];\n  function gameModelSelectionModelFactory(gameElementSelectionModel,\n                                          gameModelsModel) {\n    const base = gameElementSelectionModel('model');\n    const gameModelSelectionModel = Object.create(base);\n    R.deepExtend(gameModelSelectionModel, {\n      inSingle: modelSelectionInSingle,\n      modeForP: modeForP,\n      checkModeP: modelSelectionCheckModeP\n    });\n    R.curryService(gameModelSelectionModel);\n    return gameModelSelectionModel;\n\n    function modelSelectionInSingle(where, stamp, selection) {\n      const stamps = R.prop(where, selection);\n      return ( R.length(stamps) === 1 &&\n               stamps[0] === stamp );\n    }\n    function modeForP(models, selection) {\n      const local = gameModelSelectionModel.get('local', selection);\n      if(R.isEmpty(local)) {\n        return self.Promise.reject('No model selection');\n      }\n      if(R.length(local) === 1) {\n        return gameModelsModel.modeForStampP(local[0], models);\n      }\n      return 'Models';\n    }\n    function modelSelectionCheckModeP(state, selection) {\n      return R.threadP(selection)(\n        gameModelSelectionModel.modeForP$(state.game.models),\n        (mode) => {\n          state.queueEventP('Modes.switchTo', mode);\n        }\n      );\n    }\n  }\n})();\n"]}