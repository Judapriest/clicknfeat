{"version":3,"sources":["modelSelection.es6"],"names":[],"mappings":"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","file":"modelSelection.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('gameModelSelection', [\n    'modes',\n    'gameModels',\n    function gameModelSelectionServiceFactory(modesService,\n                                              gameModelsService) {\n      function checkSelection(where, state) {\n        if('local' === where) {\n          state.event('Modes.switchTo', 'Default');\n          state.changeEvent('Game.model.selection.local.change');\n        }\n      }\n      var gameModelSelectionService = {\n        create: function modelSelectionCreate() {\n          return {\n            local: [],\n            remote: []\n          };\n        },\n        'in': function modelSelectionIn(where, stamp, selection) {\n          var stamps = R.prop(where, selection);\n          return R.find(R.equals(stamp), stamps);\n        },\n        inSingle: function modelSelectionInSingle(where, stamp, selection) {\n          var stamps = R.prop(where, selection);\n          return ( R.length(stamps) === 1 &&\n                   stamps[0] === stamp );\n        },\n        get: function modelSelectionGet(where, selection) {\n          return R.pipe(\n            R.defaultTo({}),\n            R.propOr([], where)\n          )(selection);\n        },\n        modeFor: function(models, selection) {\n          var local = gameModelSelectionService.get('local', selection);\n          if(R.isEmpty(local)) {\n            return self.Promise.reject('No model selection');\n          }\n          if(R.length(local) === 1) {\n            return gameModelsService.modeForStamp(local[0], models);\n          }\n          return 'Models';\n        },\n        checkMode: function modelSelectionCheckMode(state, selection) {\n          return R.pipePromise(\n            gameModelSelectionService.modeFor$(state.game.models),\n            (mode) => {\n              state.event('Modes.switchTo', mode);\n            }\n          )(selection);\n        },\n        set: function modelSelectionSet(where, stamps, state, selection) {\n          var previous = gameModelSelectionService.get(where, selection);\n          var ret = R.assoc(where, stamps, selection);\n\n          checkSelection(where, state);\n          \n          R.forEach((stamp) => {\n            state.changeEvent(`Game.model.change.${stamp}`);\n          }, stamps);\n          R.forEach((stamp) => {\n            state.changeEvent(`Game.model.change.${stamp}`);\n          }, previous);\n\n          return ret;\n        },\n        addTo: function modelSelectionSet(where, stamps, state, selection) {\n          var previous = gameModelSelectionService.get(where, selection);\n          var new_selection = R.uniq(R.concat(previous, stamps));\n          var ret = R.assoc(where, new_selection, selection);\n\n          checkSelection(where, state);\n          \n          R.forEach((stamp) => {\n            state.changeEvent(`Game.model.change.${stamp}`);\n          }, new_selection);\n\n          return ret;\n        },\n        removeFrom: function modelSelectionRemoveFrom(where, stamps, state, selection) {\n          var previous = R.prop(where, selection);\n          var new_selection = R.difference(previous, stamps);\n          var ret = R.assoc(where, new_selection, selection);\n          \n          checkSelection(where, state);\n\n          R.forEach((stamp) => {\n            state.changeEvent(`Game.model.change.${stamp}`);\n          }, R.uniq(R.concat(previous, stamps)));\n\n          return ret;\n        },\n        clear: function modelSelectionClear(where, stamps, state, selection) {\n          var previous = R.prop(where, selection);\n          return gameModelSelectionService\n            .removeFrom(where, previous, state, selection);\n        }\n      };\n      R.curryService(gameModelSelectionService);\n      return gameModelSelectionService;\n    }\n  ]);\n"]}