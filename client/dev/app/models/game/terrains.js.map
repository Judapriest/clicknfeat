{"version":3,"sources":["terrains.es6"],"names":[],"mappings":";;;;;;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,cADX,EAC2B,wBAD3B,EADU;;AAIV,2BAAyB,OAAzB,GAAmC,CACjC,OADiC,EAEjC,SAFiC,CAAnC,CAJU;AAQV,WAAS,wBAAT,CAAkC,UAAlC,EACkC,YADlC,EACgD;AAC9C,QAAM,oBAAoB;AACxB,cAAQ,cAAR;AACA,WAAK,WAAL;AACA,kBAAY,kBAAZ;AACA,sBAAgB,sBAAhB;AACA,mBAAa,mBAAb;AACA,iBAAW,iBAAX;AACA,uBAAiB,uBAAjB;AACA,mBAAa,mBAAb;AACA,WAAK,WAAL;AACA,oBAAc,oBAAd;AACA,mBAAa,mBAAb;KAXI,CADwC;;AAe9C,QAAM,eAAe,EAAE,KAAF,CAAQ,WAAR,CAAf,CAfwC;AAgB9C,QAAM,kBAAkB,EAAE,KAAF,CAAQ,cAAR,CAAlB,CAhBwC;;AAkB9C,MAAE,YAAF,CAAe,iBAAf,EAlB8C;AAmB9C,WAAO,iBAAP,CAnB8C;;AAqB9C,aAAS,cAAT,GAA0B;AACxB,aAAO;AACL,gBAAQ,EAAR;AACA,gBAAQ,EAAR;OAFF,CADwB;KAA1B;AAMA,aAAS,WAAT,CAAqB,QAArB,EAA+B;AAC7B,aAAO,EAAE,MAAF,CAAS,SAAS,MAAT,EAAiB,SAAS,MAAT,CAAjC,CAD6B;KAA/B;AAGA,aAAS,kBAAT,CAA4B,KAA5B,EAAmC,QAAnC,EAA6C;AAC3C,aAAO,IAAI,KAAK,OAAL,CAAa,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AAChD,YAAI,UAAU,EAAE,MAAF,CAAS,QAAT,EACZ,kBAAkB,GAAlB,EACA,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,CAAC,OAAD,EAAS,OAAT,CAAT,EAA4B,KAA5B,CAAP,CAFY,CAAV,CAD4C;AAKhD,YAAG,EAAE,KAAF,CAAQ,OAAR,CAAH,EAAqB,oBAAkB,oBAAlB,EAArB,KACK,QAAQ,OAAR,EADL;OALsB,CAAxB,CAD2C;KAA7C;AAUA,aAAS,sBAAT,CAAgC,MAAhC,EAAwC,QAAxC,EAAkD;AAChD,aAAO,EAAE,OAAF,CAAU,MAAV,EACL,EAAE,GAAF,CAAM,UAAN,CADK,EAEL,EAAE,UAAF,EACA,EAAE,QAAF,CAAW,EAAE,OAAF,CAAU,EAAE,OAAF,EAAW,EAAE,MAAF,CAAS,EAAE,KAAF,CAA9B,CAAX,EACU,kBADV,CAHK,CAAP,CADgD;;AAQhD,eAAS,UAAT,CAAoB,KAApB,EAA2B;AACzB,eAAO,kBACJ,UADI,CACO,KADP,EACc,QADd,EAEJ,KAFI,CAEE,EAAE,MAAF,CAAS,IAAT,CAFF,CAAP,CADyB;OAA3B;KARF;AAcA,aAAS,mBAAT,CAA6B,MAA7B,EAAqC,IAArC,EAA2C,MAA3C,EAAmD,QAAnD,EAA6D;AAC3D,aAAO,YAAY;eAAM,EAAE,MAAF,CAAS,IAAT;OAAN,EACA,MADZ,EACoB,IADpB,EAC0B,MAD1B,EACkC,QADlC,CAAP,CAD2D;KAA7D;AAIA,aAAS,iBAAT,CAA2B,MAA3B,EAAmC,IAAnC,EAAyC,MAAzC,EAAiD,QAAjD,EAA2D;AACzD,aAAO,EAAE,OAAF,CAAU,QAAV,EACL,aAAa,EAAE,MAAF,EAAU,MAAvB,EAA+B,IAA/B,EAAqC,MAArC,CADK,EAEL,gBAAgB,QAAhB,CAFK,CAAP,CADyD;KAA3D;AAMA,aAAS,uBAAT,CAAiC,MAAjC,EAAyC,MAAzC,EAAiD,QAAjD,EAA2D;AACzD,aAAO,EAAE,OAAF,CAAU,QAAV,EACL,kBAAkB,eAAlB,CAAkC,MAAlC,CADK,EAEL,EAAE,QAAF,CAAW,EAAE,GAAF,CAAX,CAAkB,aAAlB,CAFK,EAGL,EAAE,MAAF,CAAS,EAAE,KAAF,CAHJ,EAIL,gBAAgB,QAAhB,CAJK,CAAP,CADyD;;AAQzD,eAAS,aAAT,CAAuB,OAAvB,EAAgC,KAAhC,EAAuC;AACrC,eAAS,EAAE,KAAF,CAAQ,OAAR,IACE,IADF,GAEE,aAAa,QAAb,CAAsB,OAAO,KAAP,CAAtB,EAAqC,OAArC,CAFF,CAD4B;OAAvC;KARF;AAeA,aAAS,mBAAT,CAA6B,IAA7B,EAAmC,MAAnC,EAA2C,QAA3C,EAAqD;AACnD,aAAO,EAAE,OAAF,CAAU,QAAV,EACL,kBAAkB,eAAlB,CAAkC,MAAlC,CADK,EAEL,EAAE,MAAF,CAAS,EAAE,KAAF,CAFJ,EAGL,EAAE,GAAF,CAAM,aAAa,QAAb,CAAsB,IAAtB,CAAN,CAHK,EAIL,gBAAgB,QAAhB,CAJK,CAAP,CADmD;KAArD;AAQA,aAAS,WAAT,CAAqB,IAArB,EAA2B,QAA3B,EAAqC;AACnC,UAAM,aAAa,EAAE,GAAF,CAAM,EAAE,IAAF,CAAO,CAAC,OAAD,EAAS,OAAT,CAAP,CAAN,EAAiC,IAAjC,CAAb,CAD6B;AAEnC,aAAO,EAAE,MAAF,CAAS,QAAT,EACL,kBAAkB,aAAlB,CAAgC,UAAhC,CADK,EAEL,EAAE,IAAF,CAAO,eAAP,EAAwB,IAAxB,CAFK,CAAP,CAFmC;KAArC;AAOA,aAAS,oBAAT,CAA8B,MAA9B,EAAsC,QAAtC,EAAgD;AAC9C,aAAO,EAAE,MAAF,CAAS,QAAT,EACL,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,QAAX,CAAP,EAA6B,EAAE,MAAF,CAAS,QAAT,CAA7B,CADK,EAEL,EAAE,IAAF,CAAO,EAAE,QAAF,CAAW,QAAX,CAAP,EAA6B,EAAE,MAAF,CAAS,QAAT,CAA7B,CAFK,CAAP,CAD8C;;AAM9C,eAAS,QAAT,CAAkB,OAAlB,EAA2B;AACzB,eAAO,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,EAAE,IAAF,CAAO,CAAC,OAAD,EAAU,OAAV,CAAP,EAA2B,OAA3B,CAAT,CAAP,EAAsD,MAAtD,CAAP,CADyB;OAA3B;KANF;AAUA,aAAS,mBAAT,CAA6B,MAA7B,EAAqC,QAArC,EAA+C;AAC7C,aAAO,EAAE,OAAF,CAAU,QAAV,EACL,kBAAkB,eAAlB,CAAkC,MAAlC,CADK,EAEL,EAAE,MAAF,CAAS,EAAE,KAAF,CAFJ,EAGL,UAHK,CAAP,CAD6C;;AAO7C,eAAS,UAAT,CAAoB,SAApB,EAA+B;AAC7B,YAAM,OAAO,EAAE,IAAF,CAAO,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAP,EAAsB,UAAU,CAAV,EAAa,KAAb,CAA7B,CADuB;;AAG7B,eAAO;AACL,gBAAM,IAAN;AACA,oBAAU,EAAE,GAAF,CAAM,EAAE,OAAF,CAAU,WAAW,eAAX,CAA2B,IAA3B,CAAV,EACU,aAAa,SAAb,CADhB,EAEM,SAFN,CAAV;SAFF,CAH6B;OAA/B;KAPF;AAkBA,aAAS,WAAT,CAAqB,OAArB,EAA8B,MAA9B,EAAsC,IAAtC,EAA4C,MAA5C,EAAoD,QAApD,EAA8D;AAC5D,aAAO,EAAE,OAAF,GACL,mBADK,EAEL,EAAE,MAAF,CAAS,QAAT,CAFK,EAGL,kBAAkB,eAAlB,CAAkC,MAAlC,CAHK,EAIL,EAAE,MAAF,CAAS,EAAE,KAAF,CAJJ,EAKL,EAAE,GAAF,CAAM,oBAAN,CALK,EAML,EAAE,UAAF,CANF,CAD4D;;AAU5D,eAAS,mBAAT,GAA+B;AAC7B,eAAO,EAAE,OAAF,CAAU,YAAV,EACL,EAAE,IAAF,CAAO,MAAP,CADK,EAEL,EAAE,IAAF,EACA,EAAE,QAAF,CAAW,EAAE,UAAF,CAAa,EAAE,MAAF,CAAS,UAAT,CAAb,CAAX,uBAC8B,wBAD9B,CAHK,CAAP,CAD6B;OAA/B;AAQA,eAAS,oBAAT,CAA8B,OAA9B,EAAuC;AACrC,eAAO,KAAK,OAAL,CACJ,OADI,CACI,aAAa,MAAb,EAAqB,KAArB,CAA2B,IAA3B,+BAAqC,QAAM,SAA3C,CADJ,EAEJ,KAFI,CAEE,QAAQ,OAAR,CAFF,CAAP,CADqC;OAAvC;KAlBF;AAwBA,aAAS,cAAT,CAAwB,QAAxB,EAAkC,IAAlC,EAAwC;AACtC,aAAO,EAAE,MAAF,CAAS,QAAT,EACL,kBAAkB,GAAlB,EACA,EAAE,MAAF,CAAS,IAAT,CAFK,EAGL,EAAE,MAAF,CAAS,EAAE,IAAF,CAAO,CAAC,OAAD,EAAS,OAAT,CAAP,CAAT,CAHK,EAIL,EAAE,SAAF,CAAY,aAAa,QAAb,CAJP,EAKL,gBAAsB;;;YAApB,kBAAoB;YAAZ,kBAAY;;AACpB,eAAO;AACL,kBAAQ,MAAR;AACA,kBAAQ,MAAR;SAFF,CADoB;OAAtB,CALF,CADsC;KAAxC;GAnJF;CARD,CAAD","file":"terrains.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('gameTerrains', gameTerrainsModelFactory);\n\n  gameTerrainsModelFactory.$inject = [\n    'point',\n    'terrain',\n  ];\n  function gameTerrainsModelFactory(pointModel,\n                                    terrainModel) {\n    const gameTerrainsModel = {\n      create: terrainsCreate,\n      all: terrainsAll,\n      findStampP: terrainsFindStampP,\n      findAnyStampsP: terrainsFindAnyStampsP,\n      fromStampsP: terrainsFromStampsP,\n      onStampsP: terrainsOnStampsP,\n      setStateStampsP: terrainsSetStateStampsP,\n      lockStampsP: terrainsLockStampsP,\n      add: terrainsAdd,\n      removeStamps: terrainsRemoveStamps,\n      copyStampsP: terrainsCopyStampsP\n    };\n\n    const fromStampsP$ = R.curry(fromStampsP);\n    const updateTerrains$ = R.curry(updateTerrains);\n\n    R.curryService(gameTerrainsModel);\n    return gameTerrainsModel;\n\n    function terrainsCreate() {\n      return {\n        active: [],\n        locked: []\n      };\n    }\n    function terrainsAll(terrains) {\n      return R.concat(terrains.active, terrains.locked);\n    }\n    function terrainsFindStampP(stamp, terrains) {\n      return new self.Promise(function(resolve, reject) {\n        var terrain = R.thread(terrains)(\n          gameTerrainsModel.all,\n          R.find(R.pathEq(['state','stamp'], stamp))\n        );\n        if(R.isNil(terrain)) reject(`Terrain ${stamp} not found`);\n        else resolve(terrain);\n      });\n    }\n    function terrainsFindAnyStampsP(stamps, terrains) {\n      return R.threadP(stamps)(\n        R.map(findStampP),\n        R.promiseAll,\n        R.rejectIf(R.compose(R.isEmpty, R.reject(R.isNil)),\n                  'No terrain found')\n      );\n\n      function findStampP(stamp) {\n        return gameTerrainsModel\n          .findStampP(stamp, terrains)\n          .catch(R.always(null));\n      }\n    }\n    function terrainsFromStampsP(method, args, stamps, terrains) {\n      return fromStampsP(() => R.always(null),\n                         method, args, stamps, terrains);\n    }\n    function terrainsOnStampsP(method, args, stamps, terrains) {\n      return R.threadP(terrains)(\n        fromStampsP$(R.always, method, args, stamps),\n        updateTerrains$(terrains)\n      );\n    }\n    function terrainsSetStateStampsP(states, stamps, terrains) {\n      return R.threadP(terrains)(\n        gameTerrainsModel.findAnyStampsP$(stamps),\n        R.addIndex(R.map)(setStateIndex),\n        R.reject(R.isNil),\n        updateTerrains$(terrains)\n      );\n\n      function setStateIndex(terrain, index) {\n        return ( R.isNil(terrain)\n                 ? null\n                 : terrainModel.setState(states[index], terrain)\n               );\n      }\n    }\n    function terrainsLockStampsP(lock, stamps, terrains) {\n      return R.threadP(terrains)(\n        gameTerrainsModel.findAnyStampsP$(stamps),\n        R.reject(R.isNil),\n        R.map(terrainModel.setLock$(lock)),\n        updateTerrains$(terrains)\n      );\n    }\n    function terrainsAdd(news, terrains) {\n      const new_stamps = R.map(R.path(['state','stamp']), news);\n      return R.thread(terrains)(\n        gameTerrainsModel.removeStamps$(new_stamps),\n        R.flip(updateTerrains$)(news)\n      );\n    }\n    function terrainsRemoveStamps(stamps, terrains) {\n      return R.thread(terrains)(\n        R.over(R.lensProp('active'), R.reject(inStamps)),\n        R.over(R.lensProp('locked'), R.reject(inStamps))\n      );\n\n      function inStamps(terrain) {\n        return R.find(R.equals(R.path(['state', 'stamp'], terrain)), stamps);\n      }\n    }\n    function terrainsCopyStampsP(stamps, terrains) {\n      return R.threadP(terrains)(\n        gameTerrainsModel.findAnyStampsP$(stamps),\n        R.reject(R.isNil),\n        makeCreate\n      );\n\n      function makeCreate(selection) {\n        const base = R.pick(['x','y','r'], selection[0].state);\n\n        return {\n          base: base,\n          terrains: R.map(R.compose(pointModel.differenceFrom$(base),\n                                    terrainModel.saveState),\n                          selection)\n        };\n      }\n    }\n    function fromStampsP(onError, method, args, stamps, terrains) {\n      return R.threadP()(\n        checkIfMethodExists,\n        R.always(terrains),\n        gameTerrainsModel.findAnyStampsP$(stamps),\n        R.reject(R.isNil),\n        R.map(callMethodOnTerrainP),\n        R.promiseAll\n      );\n\n      function checkIfMethodExists() {\n        return R.threadP(terrainModel)(\n          R.prop(method),\n          R.type,\n          R.rejectIf(R.complement(R.equals('Function')),\n                     `Unknown method \"${method}\" on terrains`)\n        );\n      }\n      function callMethodOnTerrainP(terrain) {\n        return self.Promise\n          .resolve(terrainModel[method].apply(null, [...args, terrain]))\n          .catch(onError(terrain));\n      }\n    }\n    function updateTerrains(terrains, news) {\n      return R.thread(terrains)(\n        gameTerrainsModel.all,\n        R.concat(news),\n        R.uniqBy(R.path(['state','stamp'])),\n        R.partition(terrainModel.isLocked),\n        ([locked, active]) => {\n          return {\n            active: active,\n            locked: locked\n          };\n        }\n      );\n    }\n  }\n})();\n"]}