{"version":3,"sources":["terrains.es6"],"names":[],"mappings":"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","file":"terrains.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('gameTerrains', [\n    'point',\n    'terrain',\n    function gameTerrainsServiceFactory(pointService,\n                                        terrainService) {\n      var gameTerrainsService = {\n        create: function() {\n          return {\n            active: [],\n            locked: []\n          };\n        },\n        all: function terrainsAll(terrains) {\n          return R.concat(terrains.active, terrains.locked);\n        },\n        findStamp: function terrainsFindStamp(stamp, terrains) {\n          return new self.Promise(function(resolve, reject) {\n            var terrain = R.pipe(\n              gameTerrainsService.all,\n              R.find(R.pathEq(['state','stamp'], stamp))\n            )(terrains);\n            if(R.isNil(terrain)) reject(`Terrain ${stamp} not found`);\n            else resolve(terrain);\n          });\n        },\n        findAnyStamps: function terrainsFindAnyStamps(stamps, terrains) {\n          return R.pipePromise(\n            R.map((stamp) => {\n              return gameTerrainsService\n                .findStamp(stamp, terrains)\n                .catch(R.always(null));\n            }),\n            R.promiseAll,\n            (terrains) => {\n              if(R.isEmpty(R.reject(R.isNil, terrains))) {\n                return self.Promise.reject('No terrain found');\n              }\n              return terrains;\n            }\n          )(stamps);\n        },\n        fromStamps: function terrainsFromStamps(method, args, stamps, terrains) {\n          return fromStamps$(R.compose(R.always, R.always(null)),\n                             method, args, stamps, terrains);\n        },\n        onStamps: function terrainsOnStamps(method, args, stamps, terrains) {\n          return R.pipeP(\n            fromStamps$(R.always, method, args, stamps),\n            updateTerrains$(terrains)\n          )(terrains);\n        },\n        setStateStamps: function terrainsSetStateStamps(states, stamps, terrains) {\n          return R.pipeP(\n            gameTerrainsService.findAnyStamps$(stamps),\n            R.addIndex(R.map)((terrain, index) => {\n              return ( R.isNil(terrain) ?\n                       null :\n                       terrainService.setState(states[index], terrain)\n                     );\n            }),\n            R.reject(R.isNil),\n            updateTerrains$(terrains)\n          )(terrains);\n        },\n        lockStamps: function terrainsLockStamps(lock, stamps, terrains) {\n          return R.pipeP(\n            gameTerrainsService.findAnyStamps$(stamps),\n            R.reject(R.isNil),\n            R.map(terrainService.setLock$(lock)),\n            updateTerrains$(terrains)\n          )(terrains);\n        },\n        add: function terrainsAdd(news, terrains) {\n          return R.pipe(\n            gameTerrainsService.removeStamps$(R.map(R.path(['state','stamp']), news)),\n            R.flip(updateTerrains$)(news)\n          )(terrains);\n        },\n        removeStamps: function terrainsRemoveStamps(stamps, terrains) {\n          function inStamps(terrain) {\n            return R.find(R.equals(R.path(['state', 'stamp'], terrain)), stamps);\n          }\n          return R.pipe(\n            R.assoc('active', R.reject(inStamps, terrains.active)),\n            R.assoc('locked', R.reject(inStamps, terrains.locked))\n          )(terrains);\n        },\n        copyStamps: function terrainsCopyStamps(stamps, terrains) {\n          return R.pipeP(\n            gameTerrainsService.findAnyStamps$(stamps),\n            R.reject(R.isNil),\n            (selection) => {\n              var base = R.pick(['x','y','r'], selection[0].state);\n\n              return {\n                base: base,\n                terrains: R.map(R.compose(pointService.differenceFrom$(base),\n                                        terrainService.saveState),\n                              selection)\n              };\n            }\n          )(terrains);\n        }\n      };\n      var fromStamps$ = R.curry((onError, method, args, stamps, terrains) => {\n        if('Function' !== R.type(terrainService[method])) {\n          return self.Promise.reject(`Unknown method ${method} on terrains`);\n        }\n          \n        return R.pipeP(\n          gameTerrainsService.findAnyStamps$(stamps),\n          R.reject(R.isNil),\n          R.map((terrain) => {\n            return self.Promise\n              .resolve(terrainService[method].apply(null, [...args, terrain]))\n              .catch(onError(terrain));\n          }),\n          R.promiseAll\n        )(terrains);\n      });\n      var updateTerrains$ = R.curry((terrains, news) => {\n        return R.pipe(\n          gameTerrainsService.all,\n          R.concat(news),\n          R.uniqBy(R.path(['state','stamp'])),\n          R.partition(terrainService.isLocked),\n          ([locked, active]) => {\n            return {\n              active: active,\n              locked: locked\n            };\n          }\n        )(terrains);\n      });\n      R.curryService(gameTerrainsService);\n      return gameTerrainsService;\n    }\n  ]);\n"]}