{"version":3,"sources":["factions.es6"],"names":[],"mappings":"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","file":"factions.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('gameFactions', gameFactionsModelFactory);\n\n  gameFactionsModelFactory.$inject = [\n    'localStorage',\n    'http',\n  ];\n  function gameFactionsModelFactory(localStorageModel,\n                                      httpModel) {\n    const BASE_RADIUS = {\n      huge: 24.605,\n      large: 9.842,\n      medium: 7.874,\n      small: 5.905\n    };\n    const STORAGE_KEY = 'clickApp.factions_desc';\n    const gameFactionsModel = {\n      initP: gameFactionsInitP,\n      loadDefaultP: gameFactionsLoadDefaultP,\n      updateDesc: gameFactionsUpdateDesc,\n      loadDescP: gameFactionsLoadDescP,\n      applyDesc: gameFactionsApplyDesc,\n      updateInfo: gameFactionsUpdateInfo,\n      storeDesc: gameFactionsStoreDesc,\n      buildReferences: gameFactionsBuildReferences,\n      getModelInfo: gameFactionsGetModelInfo,\n      getListInfo: gameFactionsGetListInfo,\n      buildModelsList: gameFactionsBuildModelsList,\n      buildReferenceRegexp: gameFactionsBuildReferenceRegexp\n    };\n    const buildFactionRefs$ = R.curry(buildFactionRefs);\n    const buildTypeRefs$ = R.curry(buildTypeRefs);\n    const buildUnitRefs$ = R.curry(buildUnitRefs);\n    const buildEntryTypeRefs$ = R.curry(buildEntryTypeRefs);\n    const buildEntryRef$ = R.curry(buildEntryRef);\n\n    R.curryService(gameFactionsModel);\n    return gameFactionsModel;\n\n    function gameFactionsInitP() {\n      return R.threadP()(\n        gameFactionsModel.loadDefaultP,\n        (base) => R.threadP()(\n          gameFactionsModel.loadDescP,\n          (desc) => ({\n            base: base,\n            desc: desc\n          })\n        ),\n        gameFactionsModel.updateDesc,\n        R.spyWarn('Factions')\n      );\n    }\n    function gameFactionsLoadDefaultP() {\n      return R.threadP('/data/model/factions.json')(\n        httpModel.getP,\n        (data) => R.thread(data)(\n          R.keys,\n          R.map((faction) => {\n            return httpModel.getP(data[faction])\n              .then((fdata) => ([ faction, fdata ]));\n          })\n        ),\n        R.allP,\n        R.reduce((mem, [name, faction]) => R.assoc(name, faction, mem), {})\n      );\n    }\n    function gameFactionsUpdateDesc(factions) {\n      return R.thread(factions)(\n        gameFactionsModel.applyDesc,\n        gameFactionsModel.updateInfo,\n        gameFactionsModel.buildReferences\n      );\n    }\n    function gameFactionsLoadDescP() {\n      return R.threadP()(\n        () => localStorageModel\n          .loadP(STORAGE_KEY)\n          .catch(R.spyError('Factions: no stored desc')),\n        R.defaultTo({}),\n        R.spyWarn('Factions Desc load')\n      );\n    }\n    function gameFactionsApplyDesc({ base, desc }) {\n      return { base: base,\n               desc: desc,\n               current: R.deepExtend(base, desc)\n             };\n    }\n    function gameFactionsUpdateInfo({ base, desc, current}) {\n      return { base: base,\n               desc: desc,\n               current: R.thread(current)(\n                 R.toPairs,\n                 R.sortBy(R.compose(R.prop('name'), R.nth(1))),\n                 R.reduce((mem, [name, faction]) => {\n                   return R.assoc(name, updateFaction(faction), mem);\n                 }, {})\n               )\n             };\n    }\n    function gameFactionsStoreDesc(factions) {\n      return R.thread(factions)(\n        R.prop('desc'),\n        R.spyWarn('Factions Desc store'),\n        localStorageModel.save$(STORAGE_KEY)\n      );\n    }\n    function gameFactionsBuildReferences({ base, desc, current }) {\n      return {\n        base: base,\n        desc: desc,\n        current: current,\n        references: R.reduce(buildFactionRefs$(current), {}, R.keys(current))\n      };\n    }\n    function gameFactionsGetModelInfo(path, factions) {\n      return R.path(['current',...path], factions);\n    }\n    function gameFactionsGetListInfo(list, references) {\n      const lineMatchesReference$ = R.curry(lineMatchesReference);\n      const buildEntry$ = R.curry(buildEntry);\n\n      return R.thread(list)(\n        s.lines,\n        R.map(parseLine),\n        R.reject(R.isNil)\n      );\n\n      function parseLine(line) {\n        return R.thread(references)(\n          R.values,\n          R.find(lineMatchesReference$(line)),\n          buildEntry$(line)\n        );\n      }\n    }\n    function lineMatchesReference(line, reference) {\n      return XRegExp.exec(line, reference.regexp);\n    }\n    function buildEntry(line, reference) {\n      if(R.isNil(reference)) return reference;\n\n      const match = XRegExp.exec(line, reference.regexp);\n      return [\n        R.prop('entries', reference),\n        parseNbGrunts(match.nb_grunts),\n        parseNbRepeat(match.nb_repeat)\n      ];\n    }\n    function parseNbGrunts(nb_grunts) {\n      return R.thread(nb_grunts)(\n        R.defaultTo('0'),\n        (s) => { return parseFloat(s)+1; }\n      );\n    }\n    function parseNbRepeat(nb_repeat) {\n      return R.thread(nb_repeat)(\n        R.defaultTo('0'),\n        (s) => { return parseFloat(s); }\n      );\n    }\n    function gameFactionsBuildModelsList(list, user, factions) {\n      const info = gameFactionsModel.getListInfo(list, factions.references);\n      const MAX_X = 240;\n      let x = 0, y = 0, y_offset = 0;\n      const last_unit = {\n        name: null,\n        number: 0\n      };\n\n      return {\n        base: { x: 240, y: 240, r: 0 },\n        models: R.chain(buildUnit, info)\n      };\n\n      function buildUnit([entries, nb_grunts, nb_repeat]) {\n        const grunts = buildGrunts(entries, nb_grunts);\n        const others = buildOthers(entries, nb_repeat);\n        const models = [...grunts, ...others];\n        updateUnit(entries, R.length(grunts), models);\n        return models;\n      }\n      function buildGrunts(entries, nb_grunts) {\n        let grunts = [];\n        const [grunt] = R.propOr([], 'grunt', entries);\n        if(R.exists(grunt) &&\n           R.exists(grunt.fk_grunts)) {\n          nb_grunts = grunt.fk_grunts;\n        }\n        if(nb_grunts > 0) {\n          const [leader] = R.propOr([], 'leader', entries);\n          if(R.exists(leader)) {\n            grunts = R.concat(grunts, addModel(1, leader));\n            nb_grunts--;\n          }\n          if(R.exists(grunt)) {\n            R.times(() => { grunts = R.concat(grunts, addModel(1, grunt)); }, nb_grunts);\n          }\n          if(!R.isEmpty(grunts)) {\n            grunts[0].dsp = ['l', 'i'];\n          }\n        }\n        return grunts;\n      }\n      function buildOthers(entries, nb_repeat) {\n        return R.thread(entries)(\n          R.omit(['grunt','leader']),\n          R.values,\n          R.flatten,\n          R.chain((model) => addModel(nb_repeat, model))\n        );\n      }\n      function addModel(nb_repeat, model) {\n        const ret = [];\n        R.thread(model)(\n          R.propOr(1, 'fk_repeat'),\n          R.max(nb_repeat),\n          R.times(addModel_)\n        );\n        return ret;\n\n        function addModel_() {\n          ret.push({\n            user: user,\n            info: model.path,\n            x: x + model.base_radius,\n            y: y + model.base_radius,\n            r: 0\n          });\n          x += model.base_radius*2;\n          y_offset = Math.max(y_offset, model.base_radius*2);\n          if(x > MAX_X) {\n            x = 0;\n            y += y_offset;\n            y_offset = 0;\n          }\n        }\n      }\n      function updateUnit(entries, nb_grunts, models) {\n        const unit_name = findUnitName(entries);\n        if( R.isNil(unit_name) ||\n            unit_name !== last_unit.name ||\n            nb_grunts > 0 ) {\n              last_unit.number++;\n            }\n        last_unit.name = unit_name;\n\n        R.forEach((model) => {\n          model.u = last_unit.number;\n        }, models);\n      }\n      function findUnitName(entries) {\n        return R.thread(entries)(\n          R.values,\n          R.find((entry) => {\n            return R.find((model) => {\n              return R.exists(model.unit_name);\n            }, entry);\n          }),\n          R.defaultTo([{}]),\n          R.head,\n          R.prop('unit_name')\n        );\n      }\n    }\n    function gameFactionsBuildReferenceRegexp(name) {\n      const regexp = '^\\\\**\\\\s*'+name;\n      return XRegExp(regexp, 'i');\n    }\n    function updateFaction(faction) {\n      // console.log(faction);\n      return R.thread(faction)(\n        R.assoc('wreck', updateWreck(faction.wreck)),\n        (faction) => R.assoc('models',\n                             updateFactionModels(faction, faction.models),\n                             faction)\n      );\n    }\n    function updateFactionModels(faction, models) {\n      // console.log(models);\n      return R.reduce((mem, section) => {\n        // console.log(section);\n        return R.assoc(section, updateSection(faction, models[section]), mem);\n      }, {}, R.keys(models));\n    }\n    function updateSection(faction, section) {\n      // console.log(section);\n      return R.thread(section)(\n        R.keys,\n        R.sortBy((entry) => section[entry].name),\n        R.reduce((mem, entry) => {\n          // console.log(entry);\n          return R.assoc(entry, updateEntry(faction, section[entry]), mem);\n        }, {})\n      );\n    }\n    function updateEntry(faction, entry) {\n      // console.log(entry);\n      if(R.exists(entry.entries)) {\n        return updateUnit(faction, entry);\n      }\n      else {\n        return updateModel(faction, null, entry);\n      }\n    }\n    function updateUnit(faction, unit) {\n      // console.log(unit);\n      return R.assoc('entries', updateUnitEntries(faction, unit, unit.entries), unit);\n    }\n    function updateUnitEntries(faction, unit, entries) {\n      // console.log(unit, entries);\n      return R.reduce((mem, category) => {\n        // console.log(category);\n        return R.assoc(category, updateUnitCategory(faction, unit, entries[category]), mem);\n      }, {}, R.keys(entries));\n    }\n    function updateUnitCategory(faction, unit, category) {\n      return R.reduce((mem, entry) => {\n        // console.log(entry);\n        return R.assoc(entry, updateModel(faction, unit, category[entry]), mem);\n      }, {}, R.keys(category));\n    }\n    function updateModel(faction, unit, model) {\n      // console.log(model);\n      let default_fk_name = model.name;\n      if(R.exists(unit)) {\n        if(R.exists(unit.fk_name)) {\n          default_fk_name = unit.fk_name;\n        }\n        else {\n          default_fk_name = unit.name + '.*(?<nb_grunts>\\\\d+)\\\\s+grunt';\n        }\n      }\n      unit = R.defaultTo({}, unit);\n      return R.thread(model)(\n        R.assoc('fk_name', R.defaultTo(default_fk_name, model.fk_name)),\n        R.assoc('unit_name', unit.name),\n        R.assoc('img', updateImgs(model.img)),\n        R.assoc('damage', updateDamage(model.damage)),\n        R.assoc('base_color', faction.color),\n        R.assoc('base_radius', BASE_RADIUS[model.base]),\n        (model) => {\n          if(model.type === 'jack' &&\n             R.exists(faction.wreck) &&\n             R.exists(faction.wreck[model.base])) {\n            return R.assoc('img', R.append(faction.wreck[model.base], model.img), model);\n          }\n          return model;\n        }\n      );\n    }\n    function updateImgs(imgs) {\n      // console.log(imgs);\n      return R.thread(imgs)(\n        R.defaultTo([]),\n        (imgs) => {\n          if(R.isEmpty(imgs)) {\n            return R.append({}, imgs);\n          }\n          return imgs;\n        },\n        R.map(updateImage)\n      );\n    }\n    function updateWreck(wreck) {\n      return R.thread(wreck)(\n        R.defaultTo({}),\n        (wreck) => R.thread(wreck)(\n          R.keys,\n          R.reduce((mem, key) => {\n            return R.assoc(key, updateImage(R.assoc('type','wreck',wreck[key])), mem);\n          }, {})\n        )\n      );\n    }\n    function updateImage(img) {\n      return R.thread(img)(\n        R.assoc('type', R.defaultTo('default', img.type)),\n        R.assoc('width', R.defaultTo(60, img.width)),\n        R.assoc('height', R.defaultTo(60, img.height))\n      );\n    }\n    function updateDamage(damage) {\n      // console.log(damage);\n      return R.thread(damage)(\n        R.defaultTo({ type: 'warrior', n: 1 }),\n        (damage) => R.assoc('type', R.defaultTo('warrior', damage.type), damage),\n        (damage) => R.assoc('total', computeDamageTotal(damage), damage),\n        (damage) => R.assoc('depth', computeDamageDepth(damage), damage)\n      );\n    }\n    function computeDamageTotal(damage) {\n      if(damage.type === 'warrior') return damage.n;\n      return R.thread(damage)(\n        R.keys,\n        R.reject(R.equals('type')),\n        R.reject(R.equals('total')),\n        R.reject(R.equals('field')),\n        R.reduce((mem, key) => {\n          return mem + R.thread(damage[key])(\n            R.reject(R.isNil),\n            R.length\n          );\n        }, 0)\n      );\n    }\n    function computeDamageDepth(damage) {\n      if(damage.type === 'warrior') return damage.n;\n      return R.thread(damage)(\n        R.keys,\n        R.reject(R.equals('type')),\n        R.reject(R.equals('total')),\n        R.reject(R.equals('field')),\n        R.map((key) => R.length(damage[key])),\n        R.reduce(R.max, 0)\n      );\n    }\n\n    function buildFactionRefs(factions, mem, faction) {\n      const models = factions[faction].models;\n      return R.reduce(buildTypeRefs$(faction, models),\n                      mem, R.keys(models));\n    }\n    function buildTypeRefs(faction, models, mem, type) {\n      const units = models[type];\n      return R.reduce(buildUnitRefs$(faction, type, units),\n                      mem, R.keys(units));\n    }\n    function buildUnitRefs(faction, type, units, mem, unit) {\n      const entries = units[unit].entries;\n      if(R.isNil(entries)) {\n        return buildSingleRef(faction, type, units, unit, mem);\n      }\n      else {\n        return R.reduce(buildEntryTypeRefs$(faction, type, unit, entries),\n                        mem, R.keys(entries));\n      }\n    }\n    function buildSingleRef(faction, type, units, unit, mem) {\n      unit = R.assoc('path', [\n        faction, 'models', type, unit\n      ], units[unit]);\n      updateReference('default', unit, mem);\n      return mem;\n    }\n    function buildEntryTypeRefs(faction, type, unit,\n                                entries, mem, entry_type) {\n      const category = entries[entry_type];\n      return R.reduce(buildEntryRef$(faction, type, unit, entry_type, category),\n                      mem, R.keys(category));\n    }\n    function buildEntryRef(faction, type, unit, entry_type,\n                           category, mem, entry_key) {\n      const entry = R.assoc('path', [\n        faction, 'models', type, unit, 'entries', entry_type, entry_key\n      ], category[entry_key]);\n      updateReference(entry_key, entry, mem);\n      return mem;\n    }\n    function updateReference(type, entry, mem) {\n      const reference = getReferenceForFkName(entry.fk_name, mem);\n      const entries_type = R.defaultTo([], reference.entries[type]);\n\n      entries_type.push(entry);\n\n      reference.entries[type] = entries_type;\n      mem[entry.fk_name] = reference;\n    }\n    function getReferenceForFkName(name, mem) {\n      let regexp = gameFactionsModel.buildReferenceRegexp(name);\n      return R.defaultTo({\n        regexp: regexp,\n        entries: {}\n      }, mem[name]);\n    }\n  }\n})();\n"]}