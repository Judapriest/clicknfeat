{"version":3,"sources":["factions.es6"],"names":[],"mappings":"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","file":"factions.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('gameFactions', [\n    'localStorage',\n    'http',\n    function gameFactionsServiceFactory(localStorageService,\n                                        httpService) {\n      let BASE_RADIUS = {\n        huge: 24.605,\n        large: 9.842,\n        medium: 7.874,\n        small: 5.905\n      };\n      let STORAGE_KEY = 'clickApp.factions_desc';\n      let gameFactionsService = {\n        init: function gameFactionsInit() {\n          return R.pipeP(\n            gameFactionsService.loadDefault,\n            (base) => {\n              return R.pipeP(\n                gameFactionsService.loadDesc,\n                (desc) => {\n                  return { base: base,\n                           desc: desc\n                         };\n                }\n              )();\n            },\n            gameFactionsService.updateDesc,\n            R.spy('Factions')\n          )();\n        },\n        loadDefault: function gameFactionsLoadDefault() {\n          return R.pipeP(\n            httpService.get,\n            (data) => {\n              return R.pipe(\n                R.keys,\n                R.map((faction) => {\n                  return httpService.get(data[faction])\n                    .then((fdata) => { return [ faction, fdata ]; });\n                })\n              )(data);\n            },\n            R.promiseAll,\n            R.reduce((mem, [name, faction]) => {\n              return R.assoc(name, faction, mem);\n            }, {})\n          )('/data/model/factions.json');\n        },\n        updateDesc: function gameFactionsUpdateDesc(factions) {\n          return R.pipe(\n            gameFactionsService.applyDesc,\n            gameFactionsService.updateInfo,\n            gameFactionsService.buildReferences\n          )(factions);\n        },\n        loadDesc: function gameFactionsLoadDesc() {\n          return R.pipeP(\n            () => {\n              return localStorageService\n                .load(STORAGE_KEY)\n                .catch(R.spyError('Factions: no stored desc'));\n            },\n            R.defaultTo({}),\n            R.spyWarn('Factions Desc load')            \n          )();\n        },\n        applyDesc: function gameFactionsApplyDesc({ base, desc }) {\n          return { base: base,\n                   desc: desc,\n                   current: R.deepExtend(base, desc)\n                 };\n        },\n        updateInfo: function gameFactionsUpdateInfo({ base, desc, current}) {\n          return { base: base,\n                   desc: desc,\n                   current: R.pipe(\n                     R.toPairs,\n                     R.sortBy(R.compose(R.prop('name'), R.nth(1))),\n                     R.reduce((mem, [name, faction]) => {\n                       return R.assoc(name, updateFaction(faction), mem);\n                     }, {})\n                   )(current)\n                 };\n        },\n        storeDesc: function gameFactionsStoreDesc(factions) {\n          return R.pipePromise(\n            R.prop('desc'),\n            R.spyWarn('Factions Desc store'),\n            localStorageService.save$(STORAGE_KEY)\n          )(factions);\n        },\n        buildReferences: function gameFactionsBuildReferences({ base, desc, current }) {\n          return {\n            base: base,\n            desc: desc,\n            current: current,\n            references: R.reduce(buildFactionRefs(current), {}, R.keys(current))\n          };\n        },\n        getModelInfo: function gameFactionsGetModelInfo(path, factions) {\n          return new self.Promise((resolve, reject) => {\n            var info = R.path(['current',...path], factions);\n            if(R.isNil(info)) reject(`Model info ${path.join('.')} not found`);\n            else resolve(info);\n          });\n        },\n        getListInfo: function gameFactionsGetListInfo(list, references) {\n          function parseLine(line) {\n            return R.pipe(\n              R.values,\n              R.find(lineMatchesReference(line)),\n              buildEntry(line)\n            )(references);\n          }\n          var lineMatchesReference = R.curry((line, reference) => {\n            return XRegExp.exec(line, reference.regexp);\n          });\n          var buildEntry = R.curry((line, reference) => {\n            if(R.isNil(reference)) return reference;\n            \n            let match = XRegExp.exec(line, reference.regexp);\n            return [\n              R.prop('entries', reference),\n              parseNbGrunts(match.nb_grunts),\n              parseNbRepeat(match.nb_repeat)\n            ];\n          });\n          var parseNbGrunts = (nb_grunts) => {\n            return R.pipe(\n              R.defaultTo('0'),\n              (s) => { return parseFloat(s)+1; }\n            )(nb_grunts);\n          };\n          var parseNbRepeat = (nb_repeat) => {\n            return R.pipe(\n              R.defaultTo('0'),\n              (s) => { return parseFloat(s); }\n            )(nb_repeat);\n          };\n\n          return R.pipe(\n            s.lines,\n            R.map(parseLine),\n            R.reject(R.isNil)\n          )(list);\n        },\n        buildModelsList: function gameFactionsBuildModelsList(list, user, references) {\n          let info = gameFactionsService.getListInfo(list, references);\n          \n          function buildUnit([entries, nb_grunts, nb_repeat]) {\n            let grunts = buildGrunts(entries, nb_grunts);\n            let others = buildOthers(entries, nb_repeat);\n            let models = [...grunts, ...others];\n            updateUnit(entries, R.length(grunts), models);\n            return models;\n          }\n          function buildGrunts(entries, nb_grunts) {\n            let grunts = [];\n            let [grunt] = R.propOr([], 'grunt', entries);\n            if(R.exists(grunt) &&\n               R.exists(grunt.fk_grunts)) {\n              nb_grunts = grunt.fk_grunts;\n            }\n            if(nb_grunts > 0) {\n              let [leader] = R.propOr([], 'leader', entries);\n              if(R.exists(leader)) {\n                grunts = R.concat(grunts, addModel(1, leader));\n                nb_grunts--;\n              }\n              if(R.exists(grunt)) {\n                R.times(() => { grunts = R.concat(grunts, addModel(1, grunt)); }, nb_grunts);\n              }\n              if(!R.isEmpty(grunts)) {\n                grunts[0].dsp = ['l', 'i'];\n              }\n            }\n            return grunts;\n          }\n          function buildOthers(entries, nb_repeat) {\n            return R.pipe(\n              R.omit(['grunt','leader']),\n              R.values,\n              R.flatten,\n              R.chain((model) => {\n                return addModel(nb_repeat, model);\n              })\n            )(entries);\n          }\n\n          let last_unit = {\n            name: null,\n            number: 0\n          };\n          function updateUnit(entries, nb_grunts, models) {\n            let unit_name = findUnitName(entries);\n            if( R.isNil(unit_name) ||\n                unit_name !== last_unit.name ||\n                nb_grunts > 0 ) {\n              last_unit.number++;\n            }\n            last_unit.name = unit_name;\n            \n            R.forEach((model) => {\n              model.u = last_unit.number;\n            }, models);\n          }\n          function findUnitName(entries) {\n            return R.pipe(\n              R.values,\n              R.find((entry) => {\n                return R.find((model) => {\n                  return R.exists(model.unit_name);\n                }, entry);\n              }),\n              R.defaultTo([{}]),\n              R.head,\n              R.prop('unit_name')\n            )(entries);\n          }\n\n          const MAX_X = 240;\n          let x = 0, y = 0, y_offset = 0;\n          function addModel(nb_repeat, model) {\n            let ret = [];\n            R.pipe(\n              R.propOr(1, 'fk_repeat'),\n              R.max(nb_repeat),\n              R.times(() => {\n                ret.push({\n                  user: user,\n                  info: model.path,\n                  x: x + model.base_radius,\n                  y: y + model.base_radius,\n                  r: 0\n                });\n                x += model.base_radius*2;\n                y_offset = Math.max(y_offset, model.base_radius*2);\n                if(x > MAX_X) {\n                  x = 0;\n                  y += y_offset;\n                  y_offset = 0;\n                }\n              })\n            )(model);\n            return ret;\n          }\n\n          return {\n            base: { x: 240, y: 240, r: 0 },\n            models: R.chain(buildUnit, info)\n          };\n        },\n        buildReferenceRegexp: function gameFactionsBuildReferenceRegexp(name) {\n          let regexp = '^\\\\**\\\\s*'+name;\n          return XRegExp(regexp, 'i');\n        }\n      };\n      function updateFaction(faction) {\n        // console.log(faction);\n        return R.pipe(\n          R.assoc('wreck', updateWreck(faction.wreck)),\n          (faction) => {\n            return R.assoc('models',\n                           updateFactionModels(faction, faction.models),\n                           faction);\n          }\n        )(faction);\n      }\n      function updateFactionModels(faction, models) {\n        // console.log(models);\n        return R.reduce((mem, section) => {\n          // console.log(section);\n          return R.assoc(section, updateSection(faction, models[section]), mem);\n        }, {}, R.keys(models));\n      }\n      function updateSection(faction, section) {\n        // console.log(section);\n        return R.pipe(\n          R.keys,\n          R.sortBy((entry) => { return section[entry].name; }),\n          R.reduce((mem, entry) => {\n            // console.log(entry);\n            return R.assoc(entry, updateEntry(faction, section[entry]), mem);\n          }, {})\n        )(section);\n      }\n      function updateEntry(faction, entry) {\n        // console.log(entry);\n        if(R.exists(entry.entries)) {\n          return updateUnit(faction, entry);\n        }\n        else {\n          return updateModel(faction, null, entry);\n        }\n      }\n      function updateUnit(faction, unit) {\n        // console.log(unit);\n        return R.assoc('entries', updateUnitEntries(faction, unit, unit.entries), unit);\n      }\n      function updateUnitEntries(faction, unit, entries) {\n        // console.log(unit, entries);\n        return R.reduce((mem, category) => {\n          // console.log(category);\n          return R.assoc(category, updateUnitCategory(faction, unit, entries[category]), mem);\n        }, {}, R.keys(entries));    \n      }\n      function updateUnitCategory(faction, unit, category) {\n        return R.reduce((mem, entry) => {\n          // console.log(entry);\n          return R.assoc(entry, updateModel(faction, unit, category[entry]), mem);\n        }, {}, R.keys(category));\n      }\n      function updateModel(faction, unit, model) {\n        // console.log(model);\n        var default_fk_name = model.name;\n        if(R.exists(unit)) {\n          if(R.exists(unit.fk_name)) {\n            default_fk_name = unit.fk_name;\n          }\n          else {\n            default_fk_name = unit.name + '.*(?<nb_grunts>\\\\d+)\\\\s+grunt';\n          }\n        }\n        unit = R.defaultTo({}, unit);\n        return R.pipe(\n          R.assoc('fk_name', R.defaultTo(default_fk_name, model.fk_name)),\n          R.assoc('unit_name', unit.name),\n          R.assoc('img', updateImgs(model.img)),\n          R.assoc('damage', updateDamage(model.damage)),\n          R.assoc('base_color', faction.color),\n          R.assoc('base_radius', BASE_RADIUS[model.base]),\n          (model) => {\n            if(model.type === 'jack' &&\n               R.exists(faction.wreck) &&\n               R.exists(faction.wreck[model.base])) {\n              return R.assoc('img', R.append(faction.wreck[model.base], model.img), model);\n            }\n            return model;\n          }\n        )(model);\n      }\n      function updateImgs(imgs) {\n        // console.log(imgs);\n        return R.pipe(\n          R.defaultTo([]),\n          (imgs) => {\n            if(R.isEmpty(imgs)) {\n              return R.append({}, imgs);\n            }\n            return imgs;\n          },\n          R.map(updateImage)\n        )(imgs);\n      }\n      function updateWreck(wreck) {\n        return R.pipe(\n          R.defaultTo({}),\n          (wreck) => {\n            return R.pipe(\n              R.keys,\n              R.reduce((mem, key) => {\n                return R.assoc(key, updateImage(R.assoc('type','wreck',wreck[key])), mem);\n              }, {})\n            )(wreck);\n          }\n        )(wreck);\n      }\n      function updateImage(img) {\n        return R.pipe(\n          R.assoc('type', R.defaultTo('default', img.type)),\n          R.assoc('width', R.defaultTo(60, img.width)),\n          R.assoc('height', R.defaultTo(60, img.height))\n        )(img);\n      }\n      function updateDamage(damage) {\n        // console.log(damage);\n        return R.pipe(\n          R.defaultTo({ type: 'warrior', n: 1 }),\n          (damage) => {\n            return R.assoc('type', R.defaultTo('warrior', damage.type), damage);\n          },\n          (damage) => {\n            return R.assoc('total', computeDamageTotal(damage), damage);\n          },\n          (damage) => {\n            return R.assoc('depth', computeDamageDepth(damage), damage);\n          }\n        )(damage);\n      }\n      function computeDamageTotal(damage) {\n        if(damage.type === 'warrior') return damage.n;\n        return R.pipe(\n          R.keys,\n          R.reject(R.equals('type')),\n          R.reject(R.equals('total')),\n          R.reject(R.equals('field')),\n          R.reduce((mem, key) => {\n            return mem + R.pipe(\n              R.reject(R.isNil),\n              R.length\n            )(damage[key]);\n          }, 0)\n        )(damage);\n      }\n      function computeDamageDepth(damage) {\n        if(damage.type === 'warrior') return damage.n;\n        return R.pipe(\n          R.keys,\n          R.reject(R.equals('type')),\n          R.reject(R.equals('total')),\n          R.reject(R.equals('field')),\n          R.map((key) => {\n            return R.length(damage[key]);\n          }),\n          R.reduce(R.max, 0)\n        )(damage);\n      }\n\n      var buildFactionRefs = R.curry((factions, mem, faction) => {\n        let models = factions[faction].models;\n        return R.reduce(buildTypeRefs(faction, models),\n                        mem, R.keys(models));\n      });\n      var buildTypeRefs = R.curry((faction, models, mem, type) => {\n        let units = models[type];\n        return R.reduce(buildUnitRefs(faction, type, units),\n                        mem, R.keys(units));\n      });\n      var buildUnitRefs = R.curry((faction, type, units, mem, unit) => {\n        let entries = units[unit].entries;\n        if(R.isNil(entries)) {\n          return buildSingleRef(faction, type, units, unit, mem);\n        }\n        else {\n          return R.reduce(buildEntryTypeRefs(faction, type, unit, entries),\n                          mem, R.keys(entries));\n        }\n      });\n      var buildSingleRef = R.curry((faction, type, units, unit, mem) => {\n        unit = R.assoc('path', [\n          faction, 'models', type, unit\n        ], units[unit]);\n        updateReference('default', unit, mem);\n        return mem;\n      });\n      var buildEntryTypeRefs = R.curry((faction, type, unit,\n                                        entries, mem, entry_type) => {\n        let category = entries[entry_type];\n        return R.reduce(buildEntryRef(faction, type, unit, entry_type, category),\n                        mem, R.keys(category));\n      });\n      var buildEntryRef = R.curry((faction, type, unit, entry_type,\n                                   category, mem, entry_key) => {\n        let entry = R.assoc('path', [\n          faction, 'models', type, unit, 'entries', entry_type, entry_key\n        ], category[entry_key]);\n        updateReference(entry_key, entry, mem);\n        return mem;\n      });\n      function updateReference(type, entry, mem) {\n        let reference = getReferenceForFkName(entry.fk_name, mem);\n        let entries_type = R.defaultTo([], reference.entries[type]);\n        \n        entries_type.push(entry);\n\n        reference.entries[type] = entries_type;\n        mem[entry.fk_name] = reference;\n      }\n      function getReferenceForFkName(name, mem) {\n        let regexp = gameFactionsService.buildReferenceRegexp(name);\n        return R.defaultTo({\n          regexp: regexp,\n          entries: {}\n        }, mem[name]);\n      }\n\n      R.curryService(gameFactionsService);\n      return gameFactionsService;\n    }\n  ]);\n"]}