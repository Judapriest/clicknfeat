{"version":3,"sources":["connection.es6"],"names":[],"mappings":"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","file":"connection.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('gameConnection', [\n    'websocket',\n    function gameConnectionServiceFactory(websocketService) {\n      var gameConnectionService = {\n        create: function gameConnectionInit(game) {\n          var connection = {\n            state: { socket: null }\n          };\n          return R.assoc('connection', connection, game);\n        },\n        open: function gameConnectionOpen(user_name, state, game) {\n          if(R.exists(game.connection.state.socket)) {\n            return self.Promise.resolve(game);\n          }\n          user_name = s.trim(user_name);\n\n          var handlers = {\n            close: closeHandler$(state),\n            chat: chatHandler$(state),\n            replayCmd: replayCmdHandler$(state),\n            undoCmd: undoCmdHandler$(state),\n            cmdBatch: cmdBatchHandler$(state),\n            setCmds: setCmdsHandler$(state),\n            players: playersHandler$(state)\n          };\n\n          game = R.assocPath(['connection','state','socket'], null, game);\n\n          var url = [\n            '/api/games',\n            ( R.prop('private_stamp', game) ?\n              'private' :\n              'public'\n            ),\n            ( R.prop('private_stamp', game) ?\n              R.prop('private_stamp', game) :\n              R.prop('public_stamp', game)\n            )\n          ].join('/');\n          url += '?name='+user_name;\n          \n          return R.pipeP(\n            () => {\n              return websocketService\n                .create(url, 'game', handlers);\n            },\n            (socket) => {\n              return R.assocPath(['connection', 'state', 'socket'],\n                                 socket, game);\n            }\n          )();\n        },\n        close: function gameConnectionClose(game) {\n          return R.pipePromise(\n            R.path(['connection','state','socket']),\n            (socket) => {\n              if(R.isNil(game)) return null;\n\n              return websocketService.close(socket);\n            },\n            R.always(game),\n            gameConnectionService.cleanup\n          )(game);\n        },\n        cleanup: function gameConnectionCleanup(game) {\n          return R.assocPath(['connection','state','socket'], null, game);\n        },\n        active: function gameConnectionActive(game) {\n          return R.pipe(\n            R.path(['connection','state','socket']),\n            R.exists\n          )(game);\n        },\n        sendReplayCommand: function gameConnectionSendReplayCommand(command, game) {\n          return R.pipeP(\n            gameConnectionService.sendEvent$({\n              type: 'replayCmd',\n              cmd: command\n            }),\n            (game) => {\n              return R.over(R.lensProp('commands_log'),\n                            R.compose(R.append(command), R.defaultTo([])),\n                            game);\n            }\n          )(game);\n        },\n        sendUndoCommand: function gameConnectionSendUndoCommand(command, game) {\n          return R.pipeP(\n            gameConnectionService.sendEvent$({\n              type: 'undoCmd',\n              cmd: command\n            }),\n            (game) => {\n              return R.over(R.lensProp('undo_log'),\n                            R.compose(R.append(command), R.defaultTo([])),\n                            game);\n            }\n          )(game);\n        },\n        sendEvent: function gameConnectionSendEvent(event, game) {\n          return R.pipePromise(\n            () => {\n              if(!gameConnectionService.active(game)) {\n                return self.Promise.reject('Not active');\n              }\n              return websocketService\n                .send(event, game.connection.state.socket);\n            },\n            R.always(game)\n          )();\n        }\n      };\n      function closeHandler$(state) {\n        return () => {\n          console.error('Game connection: close');\n          state.event('Game.connection.close');\n        };\n      }\n      var replayCmdHandler$ = R.curry((state, msg) => {\n        console.log('Game connection: replayCmd', msg);\n        state.event('Game.command.replay', msg.cmd);\n      });\n      var undoCmdHandler$ = R.curry((state, msg) => {\n        console.log('Game connection: undoCmd', msg);\n        state.event('Game.command.undo', msg.cmd);\n      });\n      var cmdBatchHandler$ = R.curry((state, msg) => {\n        console.log('Game connection: cmdBatch', msg);\n        state.event('Game.command.replayBatch', msg.cmds);\n      });\n      var chatHandler$ = R.curry((state, msg) => {\n        console.log('Game connection: chat msg', msg);\n        state.event('Game.newChatMsg', msg);\n      });\n      var setCmdsHandler$ = R.curry((state, msg) => {\n        console.log('Game connection: setCmds', msg);\n        state.event('Game.setCmds', msg);\n      });\n      var playersHandler$ = R.curry((state, msg) => {\n        console.log('Game connection: players', msg);\n        state.event('Game.setPlayers', msg.players);\n      });\n      R.curryService(gameConnectionService);\n      return gameConnectionService;\n    }\n  ]);\n"]}