{"version":3,"sources":["models.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,YADX,EACyB,sBADzB,EADU;;AAIV,yBAAuB,OAAvB,GAAiC,CAC/B,cAD+B,EAE/B,OAF+B,CAAjC,CAJU;AAQV,WAAS,sBAAT,CAAgC,iBAAhC,EACgC,UADhC,EAC4C;AAC1C,QAAM,OAAO,kBAAkB,OAAlB,EAA2B,UAA3B,CAAP,CADoC;AAE1C,QAAM,kBAAkB,OAAO,MAAP,CAAc,IAAd,CAAlB,CAFoC;AAG1C,MAAE,UAAF,CAAa,eAAb,EAA8B;AAC5B,+BAAyB,4BAAzB;AACA,oBAAc,kBAAd;KAFF,EAH0C;;AAQ1C,MAAE,YAAF,CAAe,eAAf,EAR0C;AAS1C,WAAO,eAAP,CAT0C;;AAW1C,aAAS,4BAAT,CAAsC,QAAtC,EAAgD,YAAhD,EAA8D,MAA9D,EAAsE;AACpE,aAAO,EAAE,MAAF,CAAS,MAAT,EACL,gBAAgB,GAAhB,EACA,EAAE,MAAF,CAAS,WAAW,gBAAX,CAA4B,QAA5B,EAAsC,YAAtC,CAAT,CAFK,EAGL,EAAE,GAAF,CAAM,EAAE,IAAF,CAAO,CAAC,OAAD,EAAS,OAAT,CAAP,CAAN,CAHK,CAAP,CADoE;KAAtE;AAOA,aAAS,kBAAT,CAA4B,KAA5B,EAAmC,MAAnC,EAA2C;AACzC,aAAO,EAAE,MAAF,CAAS,MAAT,EACL,gBAAgB,UAAhB,CAA2B,KAA3B,CADK,EAEL,EAAE,MAAF,CACE,EAAE,MAAF,EACA,WAAW,OAAX,EACA;eAAM;OAAN,CALG,CAAP,CADyC;KAA3C;GAnBF;CARD,CAAD","file":"models.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('gameModels', gameModelsModelFactory);\n\n  gameModelsModelFactory.$inject = [\n    'gameElements',\n    'model',\n  ];\n  function gameModelsModelFactory(gameElementsModel,\n                                  modelModel) {\n    const base = gameElementsModel('model', modelModel);\n    const gameModelsModel = Object.create(base);\n    R.deepExtend(gameModelsModel, {\n      findStampsBetweenPoints: modelsFindStampBetweenPoints,\n      modeForStamp: modelsModeForStamp\n    });\n\n    R.curryService(gameModelsModel);\n    return gameModelsModel;\n\n    function modelsFindStampBetweenPoints(top_left, bottom_right, models) {\n      return R.thread(models)(\n        gameModelsModel.all,\n        R.filter(modelModel.isBetweenPoints$(top_left, bottom_right)),\n        R.map(R.path(['state','stamp']))\n      );\n    }\n    function modelsModeForStamp(stamp, models) {\n      return R.thread(models)(\n        gameModelsModel.findStamp$(stamp),\n        R.ifElse(\n          R.exists,\n          modelModel.modeFor,\n          () => 'Model'\n        )\n      );\n    }\n  }\n})();\n"]}