{"version":3,"sources":["models.es6"],"names":[],"mappings":"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","file":"models.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('gameModels', [\n    'point',\n    'model',\n    function gameModelsServiceFactory(pointService,\n                                      modelService) {\n      var gameModelsService = {\n        create: function() {\n          return {\n            active: [],\n            locked: []\n          };\n        },\n        all: function modelsAll(models) {\n          return R.concat(models.active, models.locked);\n        },\n        findStamp: function modelsFindStamp(stamp, models) {\n          return new self.Promise(function(resolve, reject) {\n            var model = R.pipe(\n              gameModelsService.all,\n              R.find(R.pathEq(['state','stamp'], stamp))\n            )(models);\n            if(R.isNil(model)) reject(`Model ${stamp} not found`);\n            else resolve(model);\n          });\n        },\n        findAnyStamps: function modelsFindAnyStamps(stamps, models) {\n          return R.pipePromise(\n            R.map((stamp) => {\n              return gameModelsService.findStamp(stamp, models)\n                .catch(R.always(null));\n            }),\n            R.promiseAll,\n            (models) => {\n              if(R.isEmpty(R.reject(R.isNil, models))) {\n                return self.Promise.reject('No model found');\n              }\n              return models;\n            }\n          )(stamps);\n        },\n        findStampsBetweenPoints: function modelsFindStampBetweenPoints(top_left, bottom_right, models) {\n          return new self.Promise(function(resolve, reject) {\n            models = gameModelsService.all(models);\n            var stamps = R.pipe(\n              R.filter(modelService.isBetweenPoints$(top_left, bottom_right)),\n              R.map(R.path(['state','stamp']))\n            )(models);\n            if(R.isEmpty(stamps)) reject('No model found between points');\n            else resolve(stamps);\n          });\n        },\n        fromStamps: function modelsFromStamps(method, args, stamps, models) {\n          return fromStamps$(R.compose(R.always, R.always(null)),\n                             method, args, stamps, models);\n        },\n        onStamps: function modelsOnStamps(method, args, stamps, models) {\n          return R.pipeP(\n            fromStamps$(R.always, method, args, stamps),\n            updateModels$(models)\n          )(models);\n        },\n        setStateStamps: function modelsSetStateStamps(states, stamps, models) {\n          return R.pipeP(\n            gameModelsService.findAnyStamps$(stamps),\n            R.addIndex(R.map)((model, index) => {\n              return ( R.isNil(model) ?\n                       null :\n                       modelService.setState(states[index], model)\n                     );\n            }),\n            R.reject(R.isNil),\n            updateModels$(models)\n          )(models);\n        },\n        lockStamps: function modelsLockStamps(lock, stamps, models) {\n          return R.pipeP(\n            gameModelsService.findAnyStamps$(stamps),\n            R.reject(R.isNil),\n            R.map(modelService.setLock$(lock)),\n            updateModels$(models)\n          )(models);\n        },\n        add: function modelsAdd(mods, models) {\n          return R.pipe(\n            gameModelsService.removeStamps$(R.map(R.path(['state','stamp']), mods)),\n            (models) => {\n              return R.assoc('active', R.concat(models.active, mods), models);\n            }\n          )(models);\n        },\n        removeStamps: function modelsRemoveStamps(stamps, models) {\n          function inStamps(model) {\n            return R.find(R.equals(R.path(['state', 'stamp'], model)), stamps);\n          }\n          return R.pipe(\n            R.assoc('active', R.reject(inStamps, models.active)),\n            R.assoc('locked', R.reject(inStamps, models.locked))\n          )(models);\n        },\n        modeForStamp: function modelsModeForStamp(stamp, models) {\n          return R.pipeP(\n            () => {\n              return gameModelsService.findStamp(stamp, models);\n            },\n            modelService.modeFor$\n          )();\n        },\n        copyStamps: function modelsCopyStamps(stamps, models) {\n          return R.pipeP(\n            gameModelsService.findAnyStamps$(stamps),\n            R.reject(R.isNil),\n            (selection) => {\n              var base = R.pick(['x','y','r'], selection[0].state);\n\n              return {\n                base: base,\n                models: R.map(R.compose(pointService.differenceFrom$(base),\n                                        modelService.saveState),\n                              selection)\n              };\n            }\n          )(models);\n        }\n      };\n      var fromStamps$ = R.curry((onError, method, args, stamps, models) => {\n        if('Function' !== R.type(modelService[method])) {\n          return self.Promise.reject(`Unknown method ${method} on models`);\n        }\n          \n        return R.pipeP(\n          gameModelsService.findAnyStamps$(stamps),\n          R.reject(R.isNil),\n          R.map((model) => {\n            return self.Promise\n              .resolve(modelService[method].apply(null, [...args, model]))\n              .catch(onError(model));\n          }),\n          R.promiseAll\n        )(models);\n      });\n      var updateModels$ = R.curry((models, news) => {\n        return R.pipe(\n          gameModelsService.all,\n          R.concat(news),\n          R.uniqBy(R.path(['state','stamp'])),\n          R.partition(modelService.isLocked),\n          ([locked, active]) => {\n            return {\n              active: active,\n              locked: locked\n            };\n          }\n        )(models);\n      });\n      R.curryService(gameModelsService);\n      return gameModelsService;\n    }\n  ]);\n"]}