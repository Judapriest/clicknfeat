{"version":3,"sources":["scenario.es6"],"names":[],"mappings":"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","file":"scenario.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('gameScenario', [\n    'http',\n    'point',\n    'line',\n    'circle',\n    function gameScenarioServiceFactory(httpService,\n                                        pointService,\n                                        lineService,\n                                        circleService) {\n      var gameScenarioService = {\n        init: function gameScenarioInit() {\n          return httpService.get('/data/scenarios.json')\n            .catch(function(reason) {\n              console.log('error getting scenarios.json', reason);\n              return [];\n            });\n        },\n        name: function gameScenarioName(scenario) {\n          return R.prop('name', scenario);\n        },\n        group: function gameScenarioGroup(group_name, groups) {\n          return R.find(R.compose(R.equals(group_name), R.head), groups);\n        },\n        forName: function gameScenarioForName(name, group) {\n          return R.find(R.propEq('name', name), group[1]);\n        },\n        groupForName: function gameScenarioGroupForName(name, groups) {\n          if(R.isNil(name)) return undefined;\n          return R.find(R.compose(R.find(R.propEq('name', name)), R.last), groups);\n        },\n        createObjectives: function gameScenarioCreateObjectives(scenario) {\n          return new self.Promise((resolve, reject) => {\n            let objectives = R.concat(\n              R.propOr([], 'objectives', scenario),\n              R.propOr([], 'flags', scenario)\n            );\n            if(R.isEmpty(objectives)) reject('No objectives');\n\n            let base = R.assoc('r', 0, R.head(objectives));\n            resolve({\n              base: R.pick(['x','y','r'], base),\n              models: R.map((objective) => {\n                return R.pipe(\n                  R.assoc('r', 0),\n                  R.assoc('info', R.concat(['scenario','models'],\n                                           R.prop('info', objective))),\n                  pointService.differenceFrom$(base)\n                )(objective);\n              }, objectives)\n            });\n          });\n        },\n        isContesting: function gameScenarioIsContesting(circle, scenario) {\n          return R.exists( R.find((c) => { return isInCircle(circle, c);    },\n                                  R.propOr([], 'circle', scenario)) ||\n                           R.find((r) => { return isInRectangle(circle, r); },\n                                  R.propOr([], 'rect', scenario)) ||\n                           R.find((f) => { return isWithinFlag(circle, f);  },\n                                  R.propOr([], 'flags', scenario))\n                         );\n        },\n        isKillboxing: function gameScenarioIsKillboxing(circle, scenario) {\n          return ( R.exists(scenario.killbox) &&\n                   isInKillbox(circle, scenario.killbox)\n                 );\n        }\n      };\n      function isInCircle(circle, c) {\n        let line = {\n          start: circle,\n          end: c\n        };\n        let length = lineService.length(line);\n        return length <= (circle.radius + c.r);\n      }\n      function isWithinFlag(circle, f) {\n        let line = {\n          start: circle,\n          end: f\n        };\n        let length = lineService.length(line);\n        return length <= (circle.radius + 40 + 7.874);\n      }\n      function isInRectangle(circle, r) {\n        let box = {\n          low: { x: r.x - r.width/2,\n                 y: r.y - r.height/2 },\n          high: { x: r.x + r.width/2,\n                  y: r.y + r.height/2 }\n        };\n        return circleService.isInBox(box, circle);\n      }\n      function isInKillbox(circle, kb) {\n        let box = {\n          low: { x: kb,\n                 y: kb },\n          high: { x: 480 - kb,\n                  y: 480 - kb }\n        };\n        return !circleService.isInBox(box, circle);\n      }\n\n      return gameScenarioService;\n    }\n  ]);\n"]}