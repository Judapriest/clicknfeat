{"version":3,"sources":["scenario.es6"],"names":[],"mappings":"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","file":"scenario.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('gameScenario', gameScenarioModelFactory);\n\n  gameScenarioModelFactory.$inject = [\n    'appError',\n    'http',\n    'point',\n    'line',\n    'circle',\n  ];\n  function gameScenarioModelFactory(appErrorService,\n                                    httpModel,\n                                    pointModel,\n                                    lineModel,\n                                    circleModel) {\n    const gameScenarioModel = {\n      initP: gameScenarioInitP,\n      name: gameScenarioName,\n      group: gameScenarioGroup,\n      forName: gameScenarioForName,\n      groupForName: gameScenarioGroupForName,\n      createObjectives: gameScenarioCreateObjectives,\n      isContesting: gameScenarioIsContesting,\n      isKillboxing: gameScenarioIsKillboxing\n    };\n    R.curryService(gameScenarioModel);\n    return gameScenarioModel;\n\n    function gameScenarioInitP() {\n      return httpModel.getP('/data/scenarios.json')\n        .catch((reason) => {\n          appErrorService.emit('Error getting scenarios.json', reason);\n          return [];\n        });\n    }\n    function gameScenarioName(scenario) {\n      return R.prop('name', scenario);\n    }\n    function gameScenarioGroup(group_name, groups) {\n      return R.find(R.compose(R.equals(group_name), R.head), groups);\n    }\n    function gameScenarioForName(name, group) {\n      return R.find(R.propEq('name', name), group[1]);\n    }\n    function gameScenarioGroupForName(name, groups) {\n      if(R.isNil(name)) return undefined;\n      return R.find(R.compose(R.find(R.propEq('name', name)), R.last), groups);\n    }\n    function gameScenarioCreateObjectives(scenario) {\n      const objectives = R.concat(\n        R.propOr([], 'objectives', scenario),\n        R.propOr([], 'flags', scenario)\n      );\n      if(R.isEmpty(objectives)) return null;\n\n      const base = R.assoc('r', 0, R.head(objectives));\n      return {\n        base: R.pick(['x','y','r'], base),\n        models: R.map((objective) => {\n          return R.thread(objective)(\n            R.assoc('r', 0),\n            R.assoc('info', R.concat(['scenario','models'],\n                                     R.prop('info', objective))),\n            pointModel.differenceFrom$(base)\n          );\n        }, objectives)\n      };\n    }\n    function gameScenarioIsContesting(circle, scenario) {\n      return R.exists( R.find((c) => { return isInCircle(circle, c);    },\n                              R.propOr([], 'circle', scenario)) ||\n                       R.find((r) => { return isInRectangle(circle, r); },\n                              R.propOr([], 'rect', scenario)) ||\n                       R.find((f) => { return isWithinFlag(circle, f);  },\n                              R.propOr([], 'flags', scenario))\n                     );\n    }\n    function gameScenarioIsKillboxing(circle, scenario) {\n      return ( R.exists(scenario.killbox) &&\n               isInKillbox(circle, scenario.killbox)\n             );\n    }\n    function isInCircle(circle, c) {\n      const line = {\n        start: circle,\n        end: c\n      };\n      const length = lineModel.length(line);\n      return length <= (circle.radius + c.r);\n    }\n    function isWithinFlag(circle, f) {\n      const line = {\n        start: circle,\n        end: f\n      };\n      const length = lineModel.length(line);\n      return length <= (circle.radius + 40 + 7.874);\n    }\n    function isInRectangle(circle, r) {\n      const box = {\n        low: { x: r.x - r.width/2,\n               y: r.y - r.height/2 },\n        high: { x: r.x + r.width/2,\n                y: r.y + r.height/2 }\n      };\n      return circleModel.isInBox(box, circle);\n    }\n    function isInKillbox(circle, kb) {\n      const box = {\n        low: { x: kb,\n               y: kb },\n        high: { x: 480 - kb,\n                y: 480 - kb }\n      };\n      return !circleModel.isInBox(box, circle);\n    }\n  }\n})();\n"]}