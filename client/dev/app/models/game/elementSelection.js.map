{"version":3,"sources":["elementSelection.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,mBAAf,EACG,OADH,CACW,sBADX,EACmC,gCADnC,EADU;;AAIV,mCAAiC,OAAjC,GAA2C,EAA3C,CAJU;AAKV,WAAS,gCAAT,GAA4C;AAC1C,WAAO,SAAS,0BAAT,CAAoC,IAApC,EAA0C;AAC/C,UAAM,4BAA4B;AAChC,gBAAQ,sBAAR;AACA,cAAM,kBAAN;AACA,aAAK,mBAAL;AACA,mBAAW,yBAAX;AACA,aAAK,mBAAL;AACA,eAAO,qBAAP;AACA,oBAAY,0BAAZ;AACA,eAAO,qBAAP;OARI,CADyC;AAW/C,QAAE,YAAF,CAAe,yBAAf,EAX+C;AAY/C,aAAO,yBAAP,CAZ+C;;AAc/C,eAAS,sBAAT,GAAkC;AAChC,eAAO;AACL,iBAAO,EAAP;AACA,kBAAQ,EAAR;SAFF,CADgC;OAAlC;AAMA,eAAS,kBAAT,CAA4B,KAA5B,EAAmC,KAAnC,EAA0C,SAA1C,EAAqD;AACnD,YAAM,SAAS,EAAE,IAAF,CAAO,KAAP,EAAc,SAAd,CAAT,CAD6C;AAEnD,eAAO,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,KAAT,CAAP,EAAwB,MAAxB,CAAP,CAFmD;OAArD;AAIA,eAAS,mBAAT,CAA6B,KAA7B,EAAoC,SAApC,EAA+C;AAC7C,eAAO,EAAE,MAAF,CAAS,EAAT,EAAa,KAAb,EAAoB,SAApB,CAAP,CAD6C;OAA/C;AAGA,eAAS,yBAAT,CAAmC,SAAnC,EAA8C;AAC5C,eAAO,EAAE,MAAF,CAAS,SAAT,EACL,0BAA0B,IAA1B,CAA+B,OAA/B,CADK,EAEL,EAAE,MAAF,CACE,EAAE,OAAF,EACA;iBAAM;SAAN,EACA;iBAAM,EAAE,UAAF,CAAa,IAAb;SAAN,CALG,CAAP,CAD4C;OAA9C;AAUA,eAAS,mBAAT,CAA6B,KAA7B,EAAoC,MAApC,EAA4C,SAA5C,EAAuD;AACrD,eAAO,EAAE,KAAF,CAAQ,KAAR,EAAe,MAAf,EAAuB,SAAvB,CAAP,CADqD;OAAvD;AAGA,eAAS,qBAAT,CAA+B,KAA/B,EAAsC,MAAtC,EAA8C,SAA9C,EAAyD;AACvD,YAAM,WAAW,0BAA0B,GAA1B,CAA8B,KAA9B,EAAqC,SAArC,CAAX,CADiD;AAEvD,YAAM,gBAAgB,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,QAAT,EAAmB,MAAnB,CAAP,CAAhB,CAFiD;AAGvD,eAAO,EAAE,KAAF,CAAQ,KAAR,EAAe,aAAf,EAA8B,SAA9B,CAAP,CAHuD;OAAzD;AAKA,eAAS,0BAAT,CAAoC,KAApC,EAA2C,MAA3C,EAAmD,SAAnD,EAA8D;AAC5D,YAAM,WAAW,EAAE,IAAF,CAAO,KAAP,EAAc,SAAd,CAAX,CADsD;AAE5D,YAAM,gBAAgB,EAAE,UAAF,CAAa,QAAb,EAAuB,MAAvB,CAAhB,CAFsD;AAG5D,eAAO,EAAE,KAAF,CAAQ,KAAR,EAAe,aAAf,EAA8B,SAA9B,CAAP,CAH4D;OAA9D;AAKA,eAAS,qBAAT,CAA+B,KAA/B,EAAsC,SAAtC,EAAiD;AAC/C,YAAM,WAAW,EAAE,IAAF,CAAO,KAAP,EAAc,SAAd,CAAX,CADyC;AAE/C,eAAO,0BACJ,UADI,CACO,KADP,EACc,QADd,EACwB,SADxB,CAAP,CAF+C;OAAjD;KAlDK,CADmC;GAA5C;CALD,CAAD","file":"elementSelection.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('gameElementSelection', gameElementSelectionModelFactory);\n\n  gameElementSelectionModelFactory.$inject = [];\n  function gameElementSelectionModelFactory() {\n    return function buildElementSelectionModel(type) {\n      const gameElementSelectionModel = {\n        create: elementSelectionCreate,\n        'in': elementSelectionIn,\n        get: elementSelectionGet,\n        checkMode: elementSelectionCheckMode,\n        set: elementSelectionSet,\n        addTo: elementSelectionAddTo,\n        removeFrom: elementSelectionRemoveFrom,\n        clear: elementSelectionClear\n      };\n      R.curryService(gameElementSelectionModel);\n      return gameElementSelectionModel;\n\n      function elementSelectionCreate() {\n        return {\n          local: [],\n          remote: []\n        };\n      }\n      function elementSelectionIn(where, stamp, selection) {\n        const stamps = R.prop(where, selection);\n        return R.find(R.equals(stamp), stamps);\n      }\n      function elementSelectionGet(where, selection) {\n        return R.propOr([], where, selection);\n      }\n      function elementSelectionCheckMode(selection) {\n        return R.thread(selection)(\n          gameElementSelectionModel.get$('local'),\n          R.ifElse(\n            R.isEmpty,\n            () => null,\n            () => s.capitalize(type)\n          )\n        );\n      }\n      function elementSelectionSet(where, stamps, selection) {\n        return R.assoc(where, stamps, selection);\n      }\n      function elementSelectionAddTo(where, stamps, selection) {\n        const previous = gameElementSelectionModel.get(where, selection);\n        const new_selection = R.uniq(R.concat(previous, stamps));\n        return R.assoc(where, new_selection, selection);\n      }\n      function elementSelectionRemoveFrom(where, stamps, selection) {\n        const previous = R.prop(where, selection);\n        const new_selection = R.difference(previous, stamps);\n        return R.assoc(where, new_selection, selection);\n      }\n      function elementSelectionClear(where, selection) {\n        const previous = R.prop(where, selection);\n        return gameElementSelectionModel\n          .removeFrom(where, previous, selection);\n      }\n    };\n  }\n})();\n"]}