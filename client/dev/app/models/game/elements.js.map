{"version":3,"sources":["elements.es6"],"names":[],"mappings":"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","file":"elements.js","sourcesContent":["(function() {\n  angular.module('clickApp.services')\n    .factory('gameElements', gameElementsModelFactory);\n\n  gameElementsModelFactory.$inject = [\n    'point',\n  ];\n  function gameElementsModelFactory(pointModel) {\n    return function buildGameElementsModel(type, model) {\n      const gameElementsModel = {\n        create: elementsCreate,\n        all: elementsAll,\n        findStampP: elementsFindStampP,\n        findAnyStampsP: elementsFindAnyStampsP,\n        fromStampsP: elementsFromStampsP,\n        onStampsP: elementsOnStampsP,\n        setStateStampsP: elementsSetStateStampsP,\n        lockStampsP: elementsLockStampsP,\n        add: elementsAdd,\n        removeStamps: elementsRemoveStamps,\n        copyStampsP: elementsCopyStampsP\n      };\n\n      const fromStampsP$ = R.curry(fromStampsP);\n      const updateElements$ = R.curry(updateElements);\n\n      R.curryService(gameElementsModel);\n      return gameElementsModel;\n\n      function elementsCreate() {\n        return {\n          active: [],\n          locked: []\n        };\n      }\n      function elementsAll(elements) {\n        return R.concat(elements.active, elements.locked);\n      }\n      function elementsFindStampP(stamp, elements) {\n        return new self.Promise(function(resolve, reject) {\n          var element = R.thread(elements)(\n            gameElementsModel.all,\n            R.find(R.pathEq(['state','stamp'], stamp))\n          );\n          if(R.isNil(element)) reject(`${s.capitalize(type)} \"${stamp}\" not found`);\n          else resolve(element);\n        });\n      }\n      function elementsFindAnyStampsP(stamps, elements) {\n        return R.threadP(stamps)(\n          R.map(findStampP),\n          R.promiseAll,\n          R.rejectIf(R.compose(R.isEmpty, R.reject(R.isNil)),\n                     `No ${type} found`)\n        );\n\n        function findStampP(stamp) {\n          return gameElementsModel\n            .findStampP(stamp, elements)\n            .catch(R.always(null));\n        }\n      }\n      function elementsFromStampsP(method, args, stamps, elements) {\n        return fromStampsP(() => R.always(null),\n                           method, args, stamps, elements);\n      }\n      function elementsOnStampsP(method, args, stamps, elements) {\n        return R.threadP(elements)(\n          fromStampsP$(R.always, method, args, stamps),\n          updateElements$(elements)\n        );\n      }\n      function elementsSetStateStampsP(states, stamps, elements) {\n        return R.threadP(elements)(\n          gameElementsModel.findAnyStampsP$(stamps),\n          R.addIndex(R.map)(setStateIndex),\n          R.reject(R.isNil),\n          updateElements$(elements)\n        );\n\n        function setStateIndex(element, index) {\n          return ( R.isNil(element)\n                   ? null\n                   : model.setState(states[index], element)\n                 );\n        }\n      }\n      function elementsLockStampsP(lock, stamps, elements) {\n        return R.threadP(elements)(\n          gameElementsModel.findAnyStampsP$(stamps),\n          R.reject(R.isNil),\n          R.map(model.setLock$(lock)),\n          updateElements$(elements)\n        );\n      }\n      function elementsAdd(news, elements) {\n        const new_stamps = R.map(R.path(['state','stamp']), news);\n        return R.thread(elements)(\n          gameElementsModel.removeStamps$(new_stamps),\n          R.flip(updateElements$)(news)\n        );\n      }\n      function elementsRemoveStamps(stamps, elements) {\n        return R.thread(elements)(\n          R.over(R.lensProp('active'), R.reject(inStamps)),\n          R.over(R.lensProp('locked'), R.reject(inStamps))\n        );\n\n        function inStamps(element) {\n          return R.find(R.equals(R.path(['state', 'stamp'], element)), stamps);\n        }\n      }\n      function elementsCopyStampsP(stamps, elements) {\n        return R.threadP(elements)(\n          gameElementsModel.findAnyStampsP$(stamps),\n          R.reject(R.isNil),\n          makeCreate\n        );\n\n        function makeCreate(selection) {\n          const base = R.pick(['x','y','r'], selection[0].state);\n\n          return {\n            base: base,\n            [`${type}s`]: R.map(R.compose(pointModel.differenceFrom$(base),\n                                          model.saveState),\n                                selection)\n          };\n        }\n      }\n      function fromStampsP(onError, method, args, stamps, elements) {\n        return R.threadP()(\n          checkIfMethodExists,\n          R.always(elements),\n          gameElementsModel.findAnyStampsP$(stamps),\n          R.reject(R.isNil),\n          R.map(callMethodOnElementP),\n          R.promiseAll\n        );\n\n        function checkIfMethodExists() {\n          return R.threadP(model)(\n            R.prop(method),\n            R.type,\n            R.rejectIf(R.complement(R.equals('Function')),\n                       `Unknown method \"${method}\" on ${type}s`)\n          );\n        }\n        function callMethodOnElementP(element) {\n          return self.Promise\n            .resolve(model[method].apply(model, [...args, element]))\n            .catch(onError(element));\n        }\n      }\n      function updateElements(elements, news) {\n        return R.thread(elements)(\n          gameElementsModel.all,\n          R.concat(news),\n          R.uniqBy(R.path(['state','stamp'])),\n          R.partition(model.isLocked),\n          ([locked, active]) => {\n            return {\n              active: active,\n              locked: locked\n            };\n          }\n        );\n      }\n    };\n  }\n})();\n"]}