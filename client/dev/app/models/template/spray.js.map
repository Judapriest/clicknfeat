{"version":3,"sources":["spray.es6"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,UAAQ,MAAR,CAAe,iBAAf,EACG,OADH,CACW,eADX,EAC4B,yBAD5B,EADU;;AAIV,4BAA0B,OAA1B,GAAoC,CAClC,UADkC;;AAGlC,SAHkC,CAApC,CAJU;AASV,WAAS,yBAAT,CAAmC,aAAnC;;AAEmC,YAFnC,EAE+C;AAC7C,QAAM,qBAAqB,OAAO,MAAP,CAAc,aAAd,CAArB,CADuC;AAE7C,MAAE,UAAF,CAAa,kBAAb,EAAiC;AAC/B,eAAS,mBAAT;AACA,gBAAU,qBAAV;AACA,YAAM,iBAAN;KAHF,EAF6C;;;;;;AAY7C,QAAM,gBAAgB,CACpB,YADoB,EAEpB,WAFoB,EAGpB,YAHoB,EAIpB,aAJoB,EAKpB,UALoB,EAMpB,YANoB,EAOpB,cAPoB,CAAhB,CAZuC;AAqB7C,MAAE,OAAF,CAAU,cAAV,EAA0B,aAA1B,EArB6C;;AAuB7C,kBAAc,gBAAd,CAA+B,OAA/B,EAAwC,kBAAxC,EAvB6C;AAwB7C,MAAE,YAAF,CAAe,kBAAf,EAxB6C;AAyB7C,WAAO,kBAAP,CAzB6C;;AA2B7C,aAAS,mBAAT,CAA6B,IAA7B,EAAmC;AACjC,aAAO,EAAE,SAAF,CAAY,CAAC,OAAD,EAAS,GAAT,CAAZ,EAA2B,CAA3B,EAA8B,IAA9B,CAAP,CADiC;KAAnC;AAGA,aAAS,qBAAT,CAA+B,IAA/B,EAAqC,IAArC,EAA2C;AACzC,aAAO,EAAE,OAAF,CAAU,IAAV,EACL,UAAC,IAAD;eAAU,EAAE,IAAF,CAAO,EAAE,MAAF,CAAS,IAAT,CAAP,EAAuB,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,CAAvB;OAAV,EACA,EAAE,QAAF,CAAW,EAAE,KAAF,EAAS,0BAApB,CAFK,EAGL;eAAM,EAAE,SAAF,CAAY,CAAC,OAAD,EAAS,GAAT,CAAZ,EAA2B,IAA3B,EAAiC,IAAjC;OAAN,CAHF,CADyC;KAA3C;AAOA,aAAS,iBAAT,CAA2B,IAA3B,EAAiC;AAC/B,aAAO,EAAE,IAAF,CAAO,CAAC,OAAD,EAAS,GAAT,CAAP,EAAsB,IAAtB,CAAP,CAD+B;KAAjC;;;;;;;;;;;;;;;;;;;;;;;;;;;AArC6C,aAkEpC,cAAT,CAAwB,IAAxB,EAA8B;AAC5B,yBAAmB,IAAnB,IAA2B,wBAA3B,CAD4B;;AAG5B,eAAS,wBAAT,CAAkC,KAAlC,EAAyC,QAAzC,EAAmD;AACjD,eAAO,EAAE,OAAF,CAAU,QAAV,EACL,EAAE,QAAF,CAAW,cAAc,QAAd,EACA,oBADX,CADK,EAGL,EAAE,SAAF,CAAY,CAAC,OAAD,EAAS,GAAT,CAAZ,EAA2B,IAA3B,CAHK,EAIL,UAAC,QAAD;iBAAc,cAAc,IAAd,EAAoB,KAApB,EAA2B,QAA3B;SAAd,CAJF,CADiD;OAAnD;KAHF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlE6C,GAF/C;CATD,CAAD","file":"spray.js","sourcesContent":["(function() {\n  angular.module('clickApp.models')\n    .factory('sprayTemplate', sprayTemplateModelFactory);\n\n  sprayTemplateModelFactory.$inject = [\n    'template',\n    // 'model',\n    'point',\n  ];\n  function sprayTemplateModelFactory(templateModel,\n                                     // modelModel,\n                                     pointModel) {\n    const sprayTemplateModel = Object.create(templateModel);\n    R.deepExtend(sprayTemplateModel, {\n      _create: sprayTemplateCreate,\n      setSizeP: sprayTemplateSetSizeP,\n      size: sprayTemplateSize,\n      // origin: sprayTemplateOrigin,\n      // setOriginP: sprayTemplateSetOriginP,\n      // setTargetP: sprayTemplateSetTargetP,\n      // rotateLeftP: sprayTemplateRotateLeft,\n      // rotateRightP: sprayTemplateRotateRight\n    });\n    const FORWARD_MOVES = [\n      'moveFrontP',\n      'moveBackP',\n      'shiftLeftP',\n      'shiftRightP',\n      'shiftUpP',\n      'shiftDownP',\n      'setPositionP',\n    ];\n    R.forEach(buildSprayMove, FORWARD_MOVES);\n\n    templateModel.registerTemplate('spray', sprayTemplateModel);\n    R.curryService(sprayTemplateModel);\n    return sprayTemplateModel;\n\n    function sprayTemplateCreate(temp) {\n      return R.assocPath(['state','s'], 6, temp);\n    }\n    function sprayTemplateSetSizeP(size, temp) {\n      return R.threadP(size)(\n        (size) => R.find(R.equals(size), [6,8,10]),\n        R.rejectIf(R.isNil, 'Invalid size for a Spray'),\n        () => R.assocPath(['state','s'], size, temp)\n      );\n    }\n    function sprayTemplateSize(temp) {\n      return R.path(['state','s'], temp);\n    }\n    // function sprayTemplateOrigin(temp) {\n    //   return R.path(['state','o'], temp);\n    // }\n    // function sprayTemplateSetOriginP(factions, origin, temp) {\n    //   return R.threadP(temp)(\n    //     R.rejectIf(templateModel.isLocked, 'Template is locked'),\n    //     () => modelModel.baseEdgeInDirection$(factions, temp.state.r, origin),\n    //     (position) => R.thread(temp)(\n    //       R.assocPath(['state','o'], origin.state.stamp),\n    //       templateModel.setPosition$(position)\n    //     )\n    //   );\n    // }\n    // function sprayTemplateSetTargetP(factions, origin, target, temp) {\n    //   return R.threadP(temp)(\n    //     R.rejectIf(templateModel.isLocked, 'Template is locked'),\n    //     () => pointModel.directionTo(target.state, origin.state),\n    //     (direction) => R.threadP(origin)(\n    //       modelModel.baseEdgeInDirection$(factions, direction),\n    //       (position) => R.thread(temp)(\n    //         R.assocPath(['state','r'], direction),\n    //         templateModel.setPosition$(position)\n    //       )\n    //     )\n    //   );\n    // }\n    function buildSprayMove(move) {\n      sprayTemplateModel[move] = sprayTemplateForwardMove;\n\n      function sprayTemplateForwardMove(small, template) {\n        return R.threadP(template)(\n          R.rejectIf(templateModel.isLocked,\n                     'Template is locked'),\n          R.assocPath(['state','o'], null),\n          (template) => templateModel[move](small, template)\n        );\n      }\n    }\n    // function sprayTemplateRotateLeft(factions, origin,\n    //                                  small, template) {\n    //   return R.threadP(template)(\n    //     templateModel.rotateLeftP$(small),\n    //     handleOrigin\n    //   );\n\n    //   function handleOrigin(template) {\n    //     if(R.isNil(origin)) return template;\n\n    //     return R.threadP(origin)(\n    //       modelModel.baseEdgeInDirection$(factions, template.state.r),\n    //       (base_edge) => templateModel.setPositionP(base_edge, template)\n    //     );\n    //   }\n    // }\n    // function sprayTemplateRotateRight(factions, origin,\n    //                                   small, template) {\n    //   return R.threadP(template)(\n    //     templateModel.rotateRightP$(small),\n    //     handleOrigin\n    //   );\n\n    //   function handleOrigin(template) {\n    //     if(R.isNil(origin)) return template;\n\n    //     return R.threadP(origin)(\n    //       modelModel.baseEdgeInDirection$(factions, template.state.r),\n    //       (base_edge) => templateModel.setPositionP(base_edge, template)\n    //     );\n    //   }\n    // }\n  }\n})();\n"]}