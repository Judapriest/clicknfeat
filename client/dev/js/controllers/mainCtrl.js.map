{"version":3,"sources":["../../es6/controllers/mainCtrl.js"],"names":[],"mappings":"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","file":"mainCtrl.js","sourcesContent":["angular.module('clickApp.controllers')\n  .controller('mainCtrl', [\n    '$scope',\n    '$state',\n    '$window',\n    'pubSub',\n    'settings',\n    'user',\n    'gameBoard',\n    'gameFactions',\n    'gameScenario',\n    'allModes',\n    function($scope,\n             $state,\n             $window,\n             pubSubService,\n             settingsService,\n             userService,\n             gameBoardService,\n             gameFactionsService,\n             gameScenarioService) {\n      console.log('init mainCtrl');\n      \n      $scope.boards_ready = gameBoardService.init()\n        .then((boards) => {\n          $scope.boards = boards;\n          console.log('board', boards);\n        });\n      $scope.factions_ready = gameFactionsService.init()\n        .then((factions) => {\n          $scope.factions = factions;\n          console.log('factions', factions);\n        });\n      $scope.scenario_ready = gameScenarioService.init()\n        .then((scenarios) => {\n          $scope.scenarios = scenarios;\n          console.log('scenarios', scenarios);\n        });\n      $scope.settings_ready = settingsService.init()\n        .then((settings) => {\n          $scope.settings = settings;\n          console.log('settings', settings);\n        });\n      $scope.data_ready = self.Promise.all([\n        $scope.boards_ready,\n        $scope.factions_ready,\n        $scope.scenario_ready,\n        $scope.settings_ready,\n      ]).then(() => {\n        console.log('data ready');\n      });\n      $scope.doResetSettings = function doResetSettings(data) {\n        R.pipePromise(\n          settingsService.bind,\n          settingsService.update,\n          (settings) => {\n            $scope.settings = settings;\n            $scope.$digest();\n          }\n        )(data);\n      };\n      $scope.reloadFactions = function reloadFactions() {\n        return gameFactionsService.init()\n          .then((factions) => {\n            $scope.factions = factions;\n            console.log('factions', factions);\n          });\n      };\n\n      $scope.user = {};\n      $scope.user_ready = R.pipeP(\n        userService.init,\n        function onLoadUser(user) {\n          $scope.user = user;\n          console.log('loaded user', $scope.user);\n          $scope.checkUser();\n          $scope.$digest();\n          pubSubService.subscribe('#watch#', (...args) => {\n            console.log('UserConnection event', args);\n            $scope.$digest();\n          }, $scope.user.connection.channel);\n        }\n      )();\n      $scope.userIsValid = function() {\n        return userService.isValid($scope.user);\n      };\n      $scope.checkUser = function() {\n        if(!$scope.userIsValid()) {\n          $state.go('user');\n        }\n      };\n      $scope.setUser = function(new_user) {\n        return R.pipePromise(\n          (new_user) => {\n            console.log('set user', new_user);\n            $scope.user = new_user;\n            $scope.$digest();\n          }\n        )(new_user);\n      };\n\n      $scope.goToState = function(...args) {\n        self.setTimeout(function() {\n          $state.go.apply($state, args);\n        }, 100);\n      };\n      $scope.stateIs = function(name) {\n        return $state.is(name);\n      };\n      $scope.stateMatches = function(match) {\n        return 0 <= $state.current.name.indexOf(match);\n      };\n      $scope.currentState = function() {\n        return $state.current;\n      };\n    }\n  ]);\n"]}