{"version":3,"sources":["../../../es6/controllers/game/setupCtrl.js"],"names":[],"mappings":"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","file":"setupCtrl.js","sourcesContent":["angular.module('clickApp.controllers')\n  .controller('gameSetupCtrl', [\n    '$scope',\n    'gameBoard',\n    'gameScenario',\n    function($scope,\n             gameBoardService,\n             gameScenarioService) {\n      console.log('init gameSetupCtrl');\n\n      $scope.$on('$destroy', () => {\n        $scope.state.changeEvent('Game.scenario.refresh');\n      });\n      $scope.state.changeEvent('Game.scenario.refresh');\n\n      $scope.state.data_ready.then(() => {\n        $scope.boards = $scope.state.boards;\n        $scope.terrains = $scope.state.terrains;\n        $scope.scenarios = $scope.state.scenarios;\n        $scope.ambiance = R.head(R.keys($scope.terrains));\n        $scope.onAmbianceChange();\n        $scope.$digest();\n      });\n\n      function updateBoardName() {\n        $scope.board_name = R.path(['state','game','board','name'], $scope);\n        $scope.$digest();\n      }\n      $scope.onStateChangeEvent('Game.board.change', updateBoardName, $scope);\n      // $scope.onStateChangeEvent('Game.load.success', updateBoardName, $scope);\n      self.requestAnimationFrame(updateBoardName);\n\n      $scope.doSetBoard = () => {\n        $scope.stateEvent('Game.board.set', $scope.board_name);\n      };\n      $scope.doSetRandomBoard = () => {\n        $scope.stateEvent('Game.board.setRandom');\n      };\n\n      function updateScenario() {\n        $scope.scenario_name = R.path(['state','game','scenario','name'], $scope);\n        $scope.scenario_group = gameScenarioService.groupForName($scope.scenario_name,\n                                                                 $scope.scenarios);\n        $scope.$digest();\n      }\n      $scope.onStateChangeEvent('Game.scenario.change', updateScenario, $scope);\n      // $scope.onStateChangeEvent('Game.load.success', updateScenario, $scope);\n      self.requestAnimationFrame(updateScenario);\n\n      $scope.doSetScenario = () => {\n        $scope.stateEvent('Game.scenario.set', $scope.scenario_name, $scope.scenario_group);\n      };\n      $scope.doSetRandomScenario = () => {\n        $scope.stateEvent('Game.scenario.setRandom');\n      };\n      $scope.doGenerateObjectives = () => {\n        $scope.stateEvent('Game.scenario.generateObjectives');\n      };\n\n      function updateLayers() {\n        $scope.layers = R.path(['state','game','layers'], $scope);\n        $scope.$digest();\n      }\n      $scope.onStateChangeEvent('Game.layers.change', updateLayers, $scope);\n      $scope.onStateChangeEvent('Game.load.success', updateLayers, $scope);\n      self.requestAnimationFrame(updateLayers);\n\n      $scope.doToggleLayer = (l) => {\n        $scope.stateEvent('Game.command.execute',\n                          'setLayers', ['toggle', l]);\n      };\n\n      $scope.onAmbianceChange = () => {\n        $scope.category = R.head(R.keys($scope.terrains[$scope.ambiance]));\n        $scope.onCategoryChange();\n      };\n      $scope.onCategoryChange = () => {\n        $scope.entry = R.head(R.keys($scope.terrains[$scope.ambiance][$scope.category]));\n        $scope.onEntryChange();\n      };\n      $scope.onEntryChange = () => {\n      };\n      function getTerrainPath() {\n        return [ $scope.ambiance,\n                 $scope.category,\n                 $scope.entry\n               ];\n      }\n      $scope.getTerrain = () => {\n        return R.path([\n                 $scope.ambiance,\n                 $scope.category,\n                 $scope.entry\n               ], $scope.terrains);\n      };\n      $scope.doCreateTerrain = () => {\n        let terrain_path = getTerrainPath();\n        $scope.stateEvent('Game.terrain.create', terrain_path);\n      };\n      $scope.doResetTerrain = () => {\n        $scope.stateEvent('Game.terrain.reset');\n      };\n\n      $scope.doImportBoardFile = (files) => {\n        $scope.stateEvent('Game.board.importFile', files[0]);\n      };\n    }\n  ]);\n"]}