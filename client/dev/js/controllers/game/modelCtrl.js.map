{"version":3,"sources":["../../../es6/controllers/game/modelCtrl.js"],"names":[],"mappings":"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","file":"modelCtrl.js","sourcesContent":["angular.module('clickApp.controllers')\n  .controller('gameModelCtrl', [\n    '$scope',\n    function($scope) {\n      console.log('init gameModelCtrl');\n\n      function updateFactions() {\n        $scope.factions = R.path(['state','factions','current'], $scope);\n        $scope.faction = R.head(R.keys($scope.factions));\n        $scope.onFactionChange();\n        $scope.$digest();\n      }\n      $scope.state.data_ready.then(updateFactions);\n      \n      $scope.onFactionChange = () => {\n        $scope.section = R.head(R.keys($scope.factions[$scope.faction].models));\n        $scope.onSectionChange();\n      };\n      $scope.onSectionChange = () => {\n        $scope.entry = R.head(R.keys($scope.factions[$scope.faction].models[$scope.section]));\n        $scope.onEntryChange();\n      };\n      $scope.onEntryChange = () => {\n        var entries = $scope.getEntries();\n        if(R.isNil(entries)) {\n          $scope.model = $scope.entry;\n          $scope.onModelChange();\n          return;\n        }\n        $scope.type = R.head(R.keys(entries));\n        $scope.onTypeChange();\n      };\n      $scope.onTypeChange = () => {\n        var entries = $scope.getEntries();\n        $scope.model = R.pipe(\n          R.defaultTo({}),\n          R.prop($scope.type),\n          R.defaultTo({}),\n          R.keys(),\n          R.head()\n        )(entries);\n        $scope.onModelChange();\n      };\n      $scope.onModelChange = () => {\n        $scope.repeat = 1;\n      };\n\n      $scope.getEntries = () => {\n        return R.path([ $scope.faction,\n                        'models',\n                        $scope.section,\n                        $scope.entry,\n                        'entries'\n                      ], $scope.factions);\n      };\n      $scope.getModel = () => {\n        var entries = $scope.getEntries();\n        if(R.isNil(entries)) {\n          return R.path([ $scope.faction,\n                          'models',\n                          $scope.section,\n                          $scope.entry\n                        ], $scope.factions);\n        }\n        else {\n          return R.path([ $scope.type,\n                          $scope.model\n                        ], entries);\n        }\n      };\n\n      function getModelPath() {\n        var entries = $scope.getEntries();\n        if(R.isNil(entries)) {\n          return [ $scope.faction,\n                   'models',\n                   $scope.section,\n                   $scope.entry\n                 ];\n        }\n        else {\n          return [ $scope.faction,\n                   'models',\n                   $scope.section,\n                   $scope.entry,\n                   'entries',\n                   $scope.type,\n                   $scope.model\n                 ];\n        }\n      }\n      $scope.doCreateModel = () => {\n        let model_path = getModelPath();\n        $scope.stateEvent('Game.model.create',\n                          model_path, $scope.repeat);\n      };\n\n      $scope.import = {\n        list: null\n      };\n      $scope.doImportList = () => {\n        // TODO : find min unit number for user\n        $scope.stateEvent('Game.model.importList', $scope.import.list);\n      };\n\n      $scope.doImportModelsFile = (files) => {\n        $scope.stateEvent('Game.model.importFile', files[0]);\n      };\n    }\n  ]);\n"]}