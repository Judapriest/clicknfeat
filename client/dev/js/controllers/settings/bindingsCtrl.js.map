{"version":3,"sources":["../../../es6/controllers/settings/bindingsCtrl.js"],"names":[],"mappings":";;AAAA,OAAO,CAAC,MAAM,CAAC,sBAAsB,CAAC,CACnC,UAAU,CAAC,sBAAsB,EAAE,CAClC,QAAQ,EACR,UAAS,MAAM,EAAE;AACf,SAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;;AAEzC,QAAM,CAAC,eAAe,GAAG,UAAC,IAAI,EAAK;AACjC,WAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;GACvE,CAAC;AACF,WAAS,WAAW,GAAG;AACrB,UAAM,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACxE,UAAM,CAAC,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;GAC9D;AACD,QAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;AAE1C,QAAM,CAAC,eAAe,GAAG,UAAC,MAAM,EAAK;AACnC,QAAG,MAAM,CAAC,SAAS,EAAE,OAAO;AAC5B,UAAM,CAAC,SAAS,GAAG,MAAM,CAAC;;AAE1B,KAAC,CAAC,KAAK,CACL,YAAM;AACJ,aAAO,IAAI,IAAI,CAAC,OAAO,CAAC,UAAC,OAAO,EAAK;AACnC,iBAAS,CAAC,MAAM,CAAC,UAAC,GAAG,EAAK;AACxB,iBAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;AAC3C,iBAAO,CAAC,GAAG,CAAC,CAAC;SACd,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ,EACD,UAAC,GAAG,EAAK;AACP,UAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACjC,eAAO;OACR;AACD,YAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACpE,EACD,YAAM;AACJ,YAAM,CAAC,SAAS,GAAG,IAAI,CAAC;AACxB,YAAM,CAAC,OAAO,EAAE,CAAC;KAClB,CACF,EAAE,CAAC;GACL,CAAC;;AAEF,QAAM,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC;CACjD,CACF,CAAC,CAAC","file":"bindingsCtrl.js","sourcesContent":["angular.module('clickApp.controllers')\n  .controller('settingsBindingsCtrl', [\n    '$scope',\n    function($scope) {\n      console.log('init settingsBindingsCtrl');\n\n      $scope.getBindingsKeys = (mode) => {\n        return R.keys($scope.state.settings.default['Bindings'][mode]).sort();\n      };\n      function updateModes() {\n        $scope.modes = R.keys($scope.state.settings.default['Bindings']).sort();\n        $scope.mode = R.defaultTo(R.head($scope.modes), $scope.mode);\n      }\n      $scope.state.data_ready.then(updateModes);\n\n      $scope.doRecordBinding = (action) => {\n        if($scope.recording) return;\n        $scope.recording = action;\n\n        R.pipeP(\n          () => {\n            return new self.Promise((resolve) => {\n              Mousetrap.record((seq) => {\n                console.log('Mousetrap seq recorded', seq);\n                resolve(seq);\n              });\n            });\n          },\n          (seq) => {\n            if(R.isNil(seq) || R.isEmpty(seq)) {\n              return;\n            }\n            $scope.edit_settings.Bindings[$scope.mode][action] = seq.join(' ');\n          },\n          () => {\n            $scope.recording = null;\n            $scope.$digest();\n          }\n        )();\n      };\n\n      $scope.$on('$destroy', $scope.doUpdateSettings);\n    }\n  ]);\n"]}