{"version":3,"sources":["../../../es6/controllers/settings/modelsCtrl.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,sBAAsB,CAAC,CACnC,UAAU,CAAC,oBAAoB,EAAE,CAChC,QAAQ,EACR,YAAY,EACZ,cAAc,EACd,UAAS,MAAM,EACN,iBAAiB,EACjB,mBAAmB,EAAE;AAC5B,SAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;;AAEvC,qBAAmB,CAAC,QAAQ,EAAE,CAC3B,IAAI,CAAC,UAAS,IAAI,EAAE;AACnB,UAAM,CAAC,IAAI,GAAG,IAAI,CAAC;GACpB,CAAC,CAAC;AACL,QAAM,CAAC,OAAO,GAAG,SAAS,OAAO,CAAC,OAAO,EAAE;AACzC,WAAS,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IACrB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,QAAQ,CACzC;GACV,CAAC;;AAEF,QAAM,CAAC,iBAAiB,GAAG,UAAS,OAAO,EAAE,KAAK,EAAE;AAClD,WAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;;AAE/C,UAAM,CAAC,OAAO,GAAG,EAAE,CAAC;AACpB,UAAM,CAAC,KAAK,GAAG,EAAE,CAAC;AAClB,KAAC,CAAC,KAAK,CACL,YAAW;AACT,aAAO,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAC5C,KAAK,CAAC,UAAS,KAAK,EAAE;AACrB,cAAM,CAAC,KAAK,GAAG,uBAAuB,GAAC,KAAK,CAAC;OAC9C,CAAC,CAAC;KACN,EACD,UAAS,IAAI,EAAE;AACb,UAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,OAAO;;AAEzB,aAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,YAAM,CAAC,OAAO,GAAG,aAAa,CAAC;;AAE/B,YAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;AAC5B,yBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3C,aAAO,MAAM,CAAC,cAAc,EAAE,CAAC;KAChC,EACD,YAAW;AACT,YAAM,CAAC,OAAO,EAAE,CAAC;KAClB,CACF,EAAE,CAAC;GACL,CAAC;AACF,QAAM,CAAC,kBAAkB,GAAG,UAAS,OAAO,EAAE;AAC5C,UAAM,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;AAC7C,uBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3C,UAAM,CAAC,cAAc,EAAE,CAAC;GACzB,CAAC;AACF,QAAM,CAAC,cAAc,GAAG,YAAW;AACjC,UAAM,CAAC,IAAI,GAAG,EAAE,CAAC;AACjB,uBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3C,UAAM,CAAC,cAAc,EAAE,CAAC;GACzB,CAAC;CACH,CACF,CAAC,CAAC","file":"modelsCtrl.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.controllers')\n  .controller('settingsModelsCtrl', [\n    '$scope',\n    'fileImport',\n    'gameFactions',\n    function($scope,\n             fileImportService,\n             gameFactionsService) {\n      console.log('init settingsModelsCtrl');\n\n      gameFactionsService.loadDesc()\n        .then(function(desc) {\n          $scope.desc = desc;\n        });\n      $scope.hasDesc = function hasDesc(faction) {\n        return ( R.exists($scope.desc) &&\n                 R.type($scope.desc[faction]) === 'Object'\n               );\n      };\n      \n      $scope.doOpenFactionFile = function(faction, files) {\n        console.log('openFactionFile', faction, files);\n\n        $scope.success = ''; \n        $scope.error = '';\n        R.pipeP(\n          function() {\n            return fileImportService.read('json', files[0])\n              .catch(function(error) {\n                $scope.error = 'error loading file : '+error;\n              });\n          },\n          function(data) {\n            if(R.isNil(data)) return;\n\n            console.log(data);\n            $scope.success = 'file loaded';\n\n            $scope.desc[faction] = data;\n            gameFactionsService.storeDesc($scope.desc);\n            return $scope.reloadFactions();\n          },\n          function() {\n            $scope.$digest();\n          }\n        )();\n      };\n      $scope.doClearFactionDesc = function(faction) {\n        $scope.desc = R.omit([faction], $scope.desc);\n        gameFactionsService.storeDesc($scope.desc);\n        $scope.reloadFactions();\n      };\n      $scope.doClearAllDesc = function() {\n        $scope.desc = {};\n        gameFactionsService.storeDesc($scope.desc);\n        $scope.reloadFactions();\n      };\n    }\n  ]);\n"]}