{"version":3,"sources":["../../es6/directives/prompt.js"],"names":[],"mappings":"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","file":"prompt.js","sourcesContent":["angular.module('clickApp.directives')\n  .factory('prompt', [\n    function() {\n      var state;\n      var state_resolves = [];\n      function getState() {\n        if(R.exists(state)) return state;\n        return new self.Promise((resolve) => {\n          state_resolves.push(resolve);\n        });\n      }\n      var prompt_resolve;\n      return {\n        register: function promptRegister(st) {\n          state = st;\n          state.doValidate = () => {\n            var value = state.close();\n            prompt_resolve.resolve(value);\n            prompt_resolve = null;\n          };\n          state.doCancel = () => {\n            state.close();\n            prompt_resolve.reject('canceled');\n            prompt_resolve = null;\n          };\n\n          R.forEach((resolve) => {\n            resolve(state);\n          }, state_resolves);\n          state_resolves = [];\n\n          return state;\n        },\n        prompt: function promptPrompt(prompt_type, msg, input_value) {\n          return R.pipePromise(\n            getState,\n            (state) => {\n              state.open({\n                prompt_type: prompt_type,\n                message: R.type(msg) === 'String' ? [msg] : msg,\n                input_type: R.type(input_value) === 'Number' ? 'number' : 'text',\n                input_value: input_value\n              });\n              return new self.Promise((resolve, reject) => {\n                prompt_resolve = {\n                  resolve: resolve,\n                  reject: reject,\n                };\n              });\n            }\n          )();\n        }\n      };\n    }\n  ])\n  .directive('prompt', [\n    '$window',\n    'prompt',\n    function($window,\n             promptService) {\n      return {\n        restrict: 'E',\n        templateUrl: 'partials/directives/prompt.html',\n        scope: true,\n        link: function(scope, element) {\n          var form = element[0].querySelector('form');\n          var msg_container = element[0].querySelector('p');\n          var input = element[0].querySelector('input');\n          var cancel = element[0].querySelector('button.btn-default');\n\n          element[0].style.display = 'none';\n\n          var state = promptService.register({\n            open: function promptOpen(options = {}) {\n              let { message,\n                    input_type,\n                    prompt_type,\n                    input_value\n                  } = options;\n              $window.requestAnimationFrame(() => {\n                msg_container.innerHTML = R.defaultTo([], message).join('<br />');\n                input.setAttribute('type', R.defaultTo('text', input_type));\n                input.style.display = (prompt_type === 'prompt') ? 'initial' : 'none';\n                cancel.style.display = (prompt_type !== 'alert') ? 'initial' : 'none';\n                element[0].style.display = 'initial';\n                input.focus();\n                input.value = R.defaultTo(null, input_value);\n              });\n            },\n            close: function promptClose() {\n              var value = input.value;\n              if(input.getAttribute('type') === 'number') {\n                value = (R.length(value) === 0) ? null : parseFloat(value);\n              }\n              element[0].style.display = 'none';\n              return value;\n            }\n          });\n\n          form.addEventListener('submit', state.doValidate);\n          cancel.addEventListener('click', state.doCancel);\n        }\n      };\n    }\n  ]);\n"]}