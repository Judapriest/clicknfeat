{"version":3,"sources":["../../../es6/services/model/incorporeal.js"],"names":[],"mappings":";;AAAA,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,OAAO,CAAC,kBAAkB,EAAE,CAC3B,SAAS,8BAA8B,GAAG;AACxC,SAAO,UAAS,YAAY,EAAE;AAC5B,QAAI,uBAAuB,GAAG;AAC5B,4BAAsB,EAAE,SAAS,2BAA2B,CAAC,KAAK,EAAE;AAClE,eAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;OAClD;AACD,2BAAqB,EAAE,SAAS,0BAA0B,CAAC,GAAG,EAAE,KAAK,EAAE;AACrE,YAAG,GAAG,EAAE;AACN,iBAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC,EAC3B,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EACjC,KAAK,CAAC,CAAC;SACtB,MACI;AACH,iBAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC,EAC3B,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EACxB,KAAK,CAAC,CAAC;SACtB;OACF;AACD,8BAAwB,EAAE,SAAS,6BAA6B,CAAC,KAAK,EAAE;AACtE,YAAG,YAAY,CAAC,sBAAsB,CAAC,KAAK,CAAC,EAAE;AAC7C,iBAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC,EAC3B,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EACxB,KAAK,CAAC,CAAC;SACtB,MACI;AACH,iBAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC,EAC3B,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EACd,KAAK,CAAC,CAAC;SACtB;OACF;KACF,CAAC;AACF,WAAO,uBAAuB,CAAC;GAChC,CAAC;CACH,CACF,CAAC,CAAC","file":"incorporeal.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelIncorporeal', [\n    function modelIncorporealServiceFactory() {\n      return function(modelService) {\n        var modelIncorporealService = {\n          isIncorporealDisplayed: function modelIsIncorporealDisplayed(model) {\n            return !!R.find(R.equals('in'), model.state.dsp);\n          },\n          setIncorporealDisplay: function modelSetIncorporealDisplay(set, model) {\n            if(set) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.compose(R.uniq, R.append('in')),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals('in')),\n                            model);\n            }\n          },\n          toggleIncorporealDisplay: function modelToggleIncorporealDisplay(model) {\n            if(modelService.isIncorporealDisplayed(model)) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals('in')),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.append('in'),\n                            model);\n            }\n          }\n        };\n        return modelIncorporealService;\n      };\n    }\n  ]);\n"]}