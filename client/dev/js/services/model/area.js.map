{"version":3,"sources":["../../../es6/services/model/area.js"],"names":[],"mappings":"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","file":"area.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelArea', [\n    'gameFactions',\n    function modelAreaServiceFactory(gameFactionsService) {\n      return () => {\n        var modelAreaService = {\n          isCtrlAreaDisplayed: function modelIsCtrlAreaDisplayed(factions, model) {\n            return R.pipeP(\n              gameFactionsService.getModelInfo$(model.state.info),\n              (info) => {\n                return ( info.type === 'wardude' &&\n                         ( 'Number' === R.type(info.focus) ||\n                           'Number' === R.type(info.fury)\n                         ) &&\n                         !!R.find(R.equals('a'), model.state.dsp)\n                       );\n              }\n            )(factions);\n          },\n          setCtrlAreaDisplay: function modelSetCtrlAreaDisplay(set, model) {\n            if(set) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.compose(R.uniq, R.append('a')),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals('a')),\n                            model);\n            }\n          },\n          toggleCtrlAreaDisplay: function modelToggleCtrlAreaDisplay(model) {\n            if(R.find(R.equals('a'), model.state.dsp)) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals('a')),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.append('a'),\n                            model);\n            }\n          },\n          isAreaDisplayed: function modelIsAreaDisplayed(model) {\n            return R.exists(model.state.are);\n          },\n          areaDisplay: function modelAreaDisplay(model) {\n            return model.state.are;\n          },\n          setAreaDisplay: function modelSetAreaDisplay(area, model) {\n            return R.assocPath(['state','are'], area, model);\n          },\n          toggleAreaDisplay: function modelToggleAreaDisplay(area, model) {\n            return R.over(R.lensPath(['state','are']),\n                          (are) => { return (area === are) ? null : area; },\n                          model);\n          }\n        };\n        return modelAreaService;\n      };\n    }\n  ]);\n"]}