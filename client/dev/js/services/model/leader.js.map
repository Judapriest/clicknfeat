{"version":3,"sources":["../../../es6/services/model/leader.js"],"names":[],"mappings":";;AAAA,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,OAAO,CAAC,aAAa,EAAE,CACtB,SAAS,yBAAyB,GAAG;AACnC,SAAO,UAAS,YAAY,EAAE;AAC5B,QAAI,kBAAkB,GAAG;AACvB,uBAAiB,EAAE,SAAS,sBAAsB,CAAC,KAAK,EAAE;AACxD,eAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;OACjD;AACD,sBAAgB,EAAE,SAAS,qBAAqB,CAAC,GAAG,EAAE,KAAK,EAAE;AAC3D,YAAG,GAAG,EAAE;AACN,iBAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC,EAC3B,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAChC,KAAK,CAAC,CAAC;SACtB,MACI;AACH,iBAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC,EAC3B,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EACvB,KAAK,CAAC,CAAC;SACtB;OACF;AACD,yBAAmB,EAAE,SAAS,wBAAwB,CAAC,KAAK,EAAE;AAC5D,YAAG,YAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;AACxC,iBAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC,EAC3B,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EACvB,KAAK,CAAC,CAAC;SACtB,MACI;AACH,iBAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC,EAC3B,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EACb,KAAK,CAAC,CAAC;SACtB;OACF;KACF,CAAC;AACF,WAAO,kBAAkB,CAAC;GAC3B,CAAC;CACH,CACF,CAAC,CAAC","file":"leader.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelLeader', [\n    function modelLeaderServiceFactory() {\n      return function(modelService) {\n        var modelLeaderService = {\n          isLeaderDisplayed: function modelIsLeaderDisplayed(model) {\n            return !!R.find(R.equals('l'), model.state.dsp);\n          },\n          setLeaderDisplay: function modelSetLeaderDisplay(set, model) {\n            if(set) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.compose(R.uniq, R.append('l')),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals('l')),\n                            model);\n            }\n          },\n          toggleLeaderDisplay: function modelToggleLeaderDisplay(model) {\n            if(modelService.isLeaderDisplayed(model)) {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.reject(R.equals('l')),\n                            model);\n            }\n            else {\n              return R.over(R.lensPath(['state','dsp']),\n                            R.append('l'),\n                            model);\n            }\n          }\n        };\n        return modelLeaderService;\n      };\n    }\n  ]);\n"]}