{"version":3,"sources":["../../../es6/services/model/damage.js"],"names":[],"mappings":"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","file":"damage.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelDamage', [\n    'gameFactions',\n    function modelDamageServiceFactory(gameFactionsService) {\n      return function(/*modelService*/) {\n        var modelDamageService = {\n          resetDamage: function modelResetDamage(model) {\n            return R.over(R.lensPath(['state','dmg']), R.pipe(\n              R.keys,\n              R.reduce((mem, key) => {\n                var value = model.state.dmg[key];\n                if('Array' === R.type(value)) {\n                  value = R.map(R.always(0), value);\n                }\n                else {\n                  value = 0;\n                }\n                return R.assoc(key, value, mem);\n              }, {})\n            ), model);\n          },\n          setWarriorDamage: function modelSetWarriorDamage(factions, i, model) {\n            return R.pipeP(\n              gameFactionsService.getModelInfo$(model.state.info),\n              (info) => {\n                var value = R.defaultTo(0, model.state.dmg.n);\n                value = (value === i) ? 0 : i;\n                value = Math.min(value, info.damage.n);\n                return R.over(R.lensPath(['state','dmg']), R.pipe(\n                  R.assoc('n', value),\n                  R.assoc('t', value)\n                ), model);\n              }\n            )(factions);\n          },\n          setFieldDamage: function modelSetFieldDamage(factions, i, model) {\n            return R.pipeP(\n              gameFactionsService.getModelInfo$(model.state.info),\n              (info) => {\n                var value = R.defaultTo(0, model.state.dmg.f);\n                value = (value === i) ? 0 : i;\n                value = Math.min(value, info.damage.field);\n                return R.assocPath(['state','dmg','f'], value, model);\n              }\n            )(factions);\n          },\n          setGridDamage: function modelSetGridDamage(factions, line, col, model) {\n            return R.pipeP(\n              gameFactionsService.getModelInfo$(model.state.info),\n              (info) => {\n                var value = model.state.dmg[col][line];\n                value = (value === 0) ? 1 : 0;\n                value = R.exists(info.damage[col][line]) ? value : 0;\n                return R.over(R.lensPath(['state','dmg']), R.pipe(\n                  R.over(R.lensProp(col), R.update(line, value)),\n                  (dmg) => {\n                    return R.assoc('t', computeTotalGridDamage(dmg), dmg);\n                  }\n                ), model);\n              }\n            )(factions);\n          },\n          setGridColDamage: function modelSetGridColDamage(factions, col, model) {\n            return R.pipeP(\n              gameFactionsService.getModelInfo$(model.state.info),\n              (info) => {\n                var full = R.pipe(\n                  R.addIndex(R.filter)((val, line) => {\n                    return R.exists(info.damage[col][line]);\n                  }),\n                  R.reject(R.equals(1)),\n                  R.isEmpty\n                )(model.state.dmg[col]);\n                var value = full ? 0 : 1;\n                return R.over(R.lensPath(['state','dmg']), R.pipe(\n                  R.over(R.lensProp(col), R.addIndex(R.map)((val, line) => {\n                    return R.exists(info.damage[col][line]) ? value : 0;\n                  })),\n                  (dmg) => {\n                    return R.assoc('t', computeTotalGridDamage(dmg), dmg);\n                  }\n                ), model);\n              }\n            )(factions);\n          }\n        };\n        function computeTotalGridDamage(damage) {\n          return R.pipe(\n            R.keys,\n            R.reject(R.equals('t')),\n            R.reject(R.equals('f')),\n            R.reject(R.equals('n')),\n            R.reduce(function(mem, col) {\n              return mem + R.reduce(R.add, 0, damage[col]);\n            }, 0)\n          )(damage);\n        }\n        return modelDamageService;\n      };\n    }\n  ]);\n"]}