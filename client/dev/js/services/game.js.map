{"version":3,"sources":["../../es6/services/game.js"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('game', [\n    'jsonStringifier',\n    'commands',\n    'gameConnection',\n    'gameLayers',\n    'gameLos',\n    'gameModels',\n    'gameModelSelection',\n    'gameRuler',\n    'gameTemplates',\n    'gameTemplateSelection',\n    'gameTerrains',\n    'gameTerrainSelection',\n    function gameServiceFactory(jsonStringifierService,\n                                commandsService,\n                                gameConnectionService,\n                                gameLayersService,\n                                gameLosService,\n                                gameModelsService,\n                                gameModelSelectionService,\n                                gameRulerService,\n                                gameTemplatesService,\n                                gameTemplateSelectionService,\n                                gameTerrainsService,\n                                gameTerrainSelectionService) {\n      var gameService = {\n        create: function gameCreate(player1) {\n          var new_game = {\n            players: {\n              p1: { name: R.defaultTo('player1', player1.name) },\n              p2: { name: null }\n            },\n          };\n          return new_game;\n        },\n        load: function gameLoad(scope, data) {\n          var game = Object.create({\n            toJSON: function() { return gameService.pickForJson(this); }\n          });\n          game = R.deepExtend(game, {\n            players: {\n              p1: { name: null },\n              p2: { name: null }\n            },\n            board: {},\n            scenario: {},\n            chat: [],\n            commands: [],\n            commands_log: [],\n            undo: [],\n            undo_log: [],\n            dice: [],\n            ruler: gameRulerService.create(),\n            los: gameLosService.create(),\n            models: gameModelsService.create(),\n            model_selection: gameModelSelectionService.create(),\n            templates: gameTemplatesService.create(),\n            template_selection: gameTemplateSelectionService.create(),\n            terrains: gameTerrainsService.create(),\n            terrain_selection: gameTerrainSelectionService.create(),\n            layers: gameLayersService.create()\n          }, data);\n          game = gameConnectionService.create(game);\n          return gameReplayAll(scope, game)\n            .then(R.always(game));\n        },\n        pickForJson: function gamePickForJson(game) {\n          return R.pick([\n            'players', 'commands', 'undo', 'chat'\n          ], game);\n        },\n        toJson: function gameToJson(game) {\n          var json_game = gameService.pickForJson(game);\n          return jsonStringifierService.stringify(json_game);\n        },\n        playerName: function gamePlayerName(p, game) {\n          return R.defaultTo('John Doe', R.path(['players',p,'name'], game));\n        },\n        description: function gameDescription(game) {\n          if(R.exists(game.description)) return game.description;\n          return ( s.capitalize(gameService.playerName('p1', game)) +\n                   ' vs '+\n                   s.capitalize(gameService.playerName('p2', game))\n                 );\n        },\n        executeCommand: function gameExecuteCommand(...args /*, scope, game */) {\n          var game = R.last(args);\n          var scope = R.nth(-2, args);\n          return R.pipeP(\n            () => {\n              return commandsService.execute.apply(null, args);\n            },\n            (command) => {\n              command.user = R.pathOr('Unknown', ['user','state','name'], scope);\n              command.stamp = R.guid();\n\n              return command;\n            },\n            (command) => {\n              return R.pipeP(\n                () => {\n                  if(gameConnectionService.active(game)) {\n                    game.commands_log = R.append(command, game.commands_log);\n                    return gameConnectionService.sendEvent({\n                      type: 'replayCmd',\n                      cmd: command,\n                    }, game);\n                  }\n                  \n                  if(!command.do_not_log) {\n                    game.commands = R.append(command, game.commands);\n                  }\n                  scope.gameEvent('command', 'execute');\n                  return scope.saveGame(game);\n                },\n                () => {\n                  return R.clone(command);\n                }\n              )();\n            }\n          )();\n        },\n        undoLastCommand: function gameUndoLastCommand(scope, game) {\n          if(R.isEmpty(game.commands)) {\n            return self.Promise.reject('Command history empty');\n          }\n          \n          var command = R.last(game.commands);\n          return R.pipeP(\n            () => {\n              return commandsService.undo(command, scope, game);\n            },\n            () => {\n              game.commands = R.init(game.commands);\n\n              if(gameConnectionService.active(game)) {\n                game.undo_log = R.append(command, game.undo_log);\n                return gameConnectionService.sendEvent({\n                  type: 'undoCmd',\n                  cmd: command,\n                }, game);\n              }\n          \n              game.undo = R.append(command, game.undo);\n              scope.gameEvent('command', 'undo');\n              return null;\n            },\n            () => {\n              return scope.saveGame(game);\n            }\n          )();\n        },\n        replayNextCommand: function gameReplayNextCommand(scope, game) {\n          if(R.isEmpty(game.undo)) {\n            return self.Promise.reject('Undo history empty');\n          }\n          \n          var command = R.last(game.undo);\n          return R.pipeP(\n            () => {\n              return commandsService.replay(command, scope, game);\n            },\n            () => {\n              game.undo = R.init(game.undo);\n\n              if(gameConnectionService.active(game)) {\n                game.commands_log = R.append(command, game.commands_log);\n                return gameConnectionService.sendEvent({\n                  type: 'replayCmd',\n                  cmd: command,\n                }, game);\n              }\n          \n              game.commands = R.append(command, game.commands);\n              scope.gameEvent('command', 'replay');\n              return null;\n            },\n            () => {\n              return scope.saveGame(game);\n            }\n          )();\n        },\n        sendChat: function gameSendChat(from, msg, game) {\n          return gameConnectionService\n            .sendEvent({\n              type: 'chat',\n              chat: {\n                from: from,\n                msg: msg\n              }\n            }, game);\n        },\n      };\n      function gameReplayBatchs(batchs, scope, game) {\n        if(R.isEmpty(batchs)) return null;\n        \n        console.log('Game: ReplayBatchs:', batchs);\n        return commandsService.replayBatch(batchs[0], scope, game)\n          .then(() => {\n            return new self.Promise((resolve/*, reject*/) => {\n              self.requestAnimationFrame(function _gameReplayBatch() {\n                resolve(gameReplayBatchs(R.tail(batchs), scope, game));\n              });\n            });\n          });\n      }\n      function gameReplayAll(scope, game) {\n        return new self.Promise((resolve/*, reject*/) => {\n          if(R.isEmpty(game.commands)) {\n            resolve();\n          }\n\n          var batchs = R.splitEvery(game.commands.length, game.commands);\n          self.requestAnimationFrame(function _gameReplayAll() {\n            scope.gameEvent('gameLoading');\n            resolve(gameReplayBatchs(batchs, scope, game));\n          });\n        }).then(() => {\n          console.error('Game: ReplayAll: end');\n          scope.gameEvent('gameLoaded');\n          return scope.saveGame(game);\n        });\n      }\n      R.curryService(gameService);\n      return gameService;\n    }\n  ]);\n"]}