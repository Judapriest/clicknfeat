{"version":3,"sources":["../../../es6/services/state/modes.js"],"names":[],"mappings":"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","file":"modes.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('stateModes', [\n    'modes',\n    'allModes',\n    function stateModesServiceFactory(modesService) {\n      var stateModesService = {\n        init: function stateModesInit(state) {\n          state.modes = {};\n\n          state.onEvent('Modes.switchTo',\n                        stateModesService.onModesSwitchTo$(state));\n          state.onEvent('Modes.current.action',\n                        stateModesService.onModesCurrentAction$(state));\n          state.onEvent('Modes.reset',\n                        stateModesService.onModesReset$(state));\n          state.onEvent('Modes.exit',\n                        stateModesService.onModesExit$(state));\n          return state;\n        },\n        save: function stateModesSave(state) {\n          return state;\n        },\n        onModesSwitchTo: function stateModesOnSwitchTo(state, event, to) {\n          return R.pipePromise(\n            modesService.switchToMode$(to, state),\n            setModes$(state)\n          )(state.modes).catch(gameActionError$(state));\n        },\n        onModesCurrentAction: function stateModesOnCurrentAction(state, e, action, args) {\n          let res = modesService\n                .currentModeAction(action, [state, ...args], state.modes);\n          let event = R.last(args);\n          if(R.exists(R.prop('preventDefault', event))) event.preventDefault();\n\n          return self.Promise.resolve(res)\n            .catch(gameActionError$(state));\n        },\n        onModesReset: function stateModesOnReset(state, event) {\n          event = event;\n          return R.pipePromise(\n            modesService.init,\n            setModes$(state)\n          )(state);\n        },\n        onModesExit: function stateModesOnExit(state, event) {\n          event = event;\n          return R.pipePromise(\n            modesService.exit$(state),\n            setModes$(state)\n          )(state.modes);\n        }\n      };\n      var setModes$ = R.curry((state, modes) => {\n        state.modes = modes;\n        state.changeEvent('Modes.change');\n      });\n      var gameActionError$ = R.curry((state, error) => {\n        state.changeEvent('Game.action.error', error);\n        return null;\n        // return self.Promise.reject(error);\n      });\n      R.curryService(stateModesService);\n      return stateModesService;\n    }\n  ]);\n"]}