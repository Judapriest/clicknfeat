{"version":3,"sources":["../../../es6/services/state/data.js"],"names":[],"mappings":"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","file":"data.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('stateData', [\n    'pubSub',\n    'stateExports',\n    'fileImport',\n    'settings',\n    'gameBoard',\n    'gameTerrainInfo',\n    'gameFactions',\n    'gameScenario',\n    function stateDataServiceFactory(pubSubService,\n                                     stateExportsService,\n                                     fileImportService,\n                                     settingsService,\n                                     gameBoardService,\n                                     gameTerrainInfoService,\n                                     gameFactionsService,\n                                     gameScenarioService) {\n      var stateDataService = {\n        init: function stateDataInit(state) {\n          let boards_ready = gameBoardService.init()\n                .then((boards) => {\n                  state.boards = boards;\n                  console.log('board', boards);\n                });\n          let terrains_ready = gameTerrainInfoService.init()\n                .then((terrains) => {\n                  state.terrains = terrains;\n                  console.log('terrains', terrains);\n                });\n          let factions_ready = gameFactionsService.init()\n                .then((factions) => {\n                  state.factions = factions;\n                });\n          let scenario_ready = gameScenarioService.init()\n                .then((scenarios) => {\n                  state.scenarios = scenarios;\n                  console.log('scenarios', scenarios);\n                });\n          let settings_ready = settingsService.init()\n                .then((settings) => {\n                  state.settings = settings;\n                  exportCurrentSettings(state);\n                });\n          state.data_ready = self.Promise.all([\n            boards_ready,\n            terrains_ready,\n            factions_ready,\n            scenario_ready,\n            settings_ready,\n          ]).then(() => {\n            console.log('data ready');\n          });\n\n          state.onEvent('Settings.loadFile',\n                        stateDataService.onSettingsLoadFile$(state));\n          state.onEvent('Settings.reset',\n                        stateDataService.onSettingsReset$(state));\n          state.onEvent('Factions.loadDescFile',\n                        stateDataService.onFactionsLoadDescFile$(state));\n          state.onEvent('Factions.clearDesc',\n                        stateDataService.onFactionsClearDesc$(state));\n          state.onEvent('Factions.clearAllDesc',\n                        stateDataService.onFactionsClearAllDesc$(state));\n          // state.onEvent('Factions.reload',\n          //               stateDataService.onReloadFactions$(state));\n\n          return state;\n        },\n        save: function stateDataSave(state) {\n          return R.pipeP(\n            () => { return exportCurrentSettings(state); },\n            () => { return settingsService.store(state.settings); },\n            () => { return gameFactionsService.storeDesc(state.factions); }\n          )();\n        },\n        onSettingsLoadFile: function stateOnSettingsLoadFile(state, event, file) {\n          return R.pipeP(\n            fileImportService.read$('json'),\n            settingsService.bind,\n            settingsService.update,\n            setSettings$(state),\n            () => {\n              state.changeEvent('Settings.loadFile', 'Settings loaded');\n            }\n          )(file).catch((error) => {\n            state.changeEvent('Settings.loadFile', error);\n          });\n        },\n        onSettingsReset: function stateOnSettingsReset(state, event, data) {\n          return R.pipePromise(\n            settingsService.bind,\n            settingsService.update,\n            setSettings$(state)\n          )(data);\n        },\n        onFactionsLoadDescFile: function stateOnFactionsLoadDescFile(state, event, faction, file) {\n          return R.pipeP(\n            fileImportService.read$('json'),\n            (faction_desc) => {\n              return R.assocPath(['desc', faction], faction_desc, state.factions);\n            },\n            gameFactionsService.updateDesc,\n            setFactions$(state),\n            () => {\n              state.changeEvent('Factions.loadDescFile', 'File loaded');\n            }\n          )(file).catch((error) => {\n            state.changeEvent('Factions.loadDescFile', error);\n          });\n        },\n        onFactionsClearDesc: function stateOnFactionsClearDesc(state, event, faction) {\n          return R.pipePromise(\n            R.dissocPath(['desc', faction]),\n            gameFactionsService.updateDesc,\n            setFactions$(state)\n          )(state.factions);\n        },\n        onFactionsClearAllDesc: function stateOnFactionsClearAllDesc(state, event) {\n          event = event;\n          return R.pipePromise(\n            R.assoc('desc', {}),\n            gameFactionsService.updateDesc,\n            setFactions$(state)\n          )(state.factions);\n        }\n      };\n      var setSettings$ = R.curry((state, settings) => {\n        state.settings = settings;\n        state.changeEvent('Settings.change');\n      });\n      var setFactions$ = R.curry((state, factions) => {\n        state.factions = factions;\n        state.changeEvent('Factions.change');\n      });\n      var exportCurrentSettings = stateExportsService\n            .export$('settings', R.path(['settings','current']));\n      R.curryService(stateDataService);\n      return stateDataService;\n    }\n  ]);\n"]}