{"version":3,"sources":["../../../es6/services/command/createTerrain.js"],"names":[],"mappings":"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","file":"createTerrain.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('createTerrainCommand', [\n    'commands',\n    'point',\n    'terrain',\n    'gameTerrains',\n    'gameTerrainSelection',\n    function createTerrainCommandServiceFactory(commandsService,\n                                                pointService,\n                                                terrainService,\n                                                gameTerrainsService,\n                                                gameTerrainSelectionService) {\n      var createTerrainCommandService = {\n        execute: function createTerrainExecute(create, is_flipped, scope, game) {\n          var add$ = pointService.addToWithFlip$(is_flipped);\n          return R.pipePromise(\n            R.prop('terrains'),\n            R.map((terrain) => {\n              return R.pipe(\n                add$(create.base),\n                R.omit(['stamp']),\n                (terrain) => {\n                  return self.Promise\n                    .resolve(terrainService.create(terrain))\n                    .catch(R.always(null));\n                }\n              )(terrain);\n            }),\n            R.promiseAll,\n            R.reject(R.isNil),\n            (terrains) => {\n              if(R.isEmpty(terrains)) {\n                return self.Promise.reject('No valid terrain definition');\n              }\n            \n              var ctxt = {\n                terrains: R.map(terrainService.saveState, terrains),\n                desc: terrains[0].state.info.join('.')\n              };\n              return R.pipe(\n                gameTerrainsService.add$(terrains),\n                (game_terrains) => {\n                  game.terrains = game_terrains;\n              \n                  return gameTerrainSelectionService\n                    .set('local', R.map(R.path(['state','stamp']), terrains),\n                         scope, game.terrain_selection);\n                },\n                (selection) => {\n                  game.terrain_selection = selection;\n\n                  scope.gameEvent('createTerrain');\n                  return ctxt;\n                }\n              )(game.terrains);\n            }\n          )(create);\n        },\n        replay: function createTerrainReplay(ctxt, scope, game) {\n          return R.pipePromise(\n            R.prop('terrains'),\n            R.map((terrain) => {\n              return self.Promise\n                .resolve(terrainService.create(terrain))\n                .catch(R.always(null));\n            }),\n            R.promiseAll,\n            R.reject(R.isNil),\n            (terrains) => {\n              if(R.isEmpty(terrains)) {\n                return self.Promise.reject('No valid terrain definition');\n              }\n              \n              return R.pipe(\n                gameTerrainsService.add$(terrains),\n                (game_terrains) => {\n                  game.terrains = game_terrains;\n                  \n                  return gameTerrainSelectionService\n                    .set('remote', R.map(R.path(['state','stamp']), terrains),\n                         scope, game.terrain_selection);\n                },\n                (selection) => {\n                  game.terrain_selection = selection;\n                  \n                  scope.gameEvent('createTerrain');\n                }\n              )(game.terrains);\n            }\n          )(ctxt);\n        },\n        undo: function createTerrainUndo(ctxt, scope, game) {\n          var stamps = R.map(R.prop('stamp'), ctxt.terrains);\n          game.terrains = gameTerrainsService.removeStamps(stamps, game.terrains);\n          game.terrain_selection = gameTerrainSelectionService\n            .removeFrom('local', stamps,\n                        scope, game.terrain_selection);\n          game.terrain_selection = gameTerrainSelectionService\n            .removeFrom('remote', stamps,\n                        scope, game.terrain_selection);\n          scope.gameEvent('createTerrain');\n        }\n      };\n      commandsService.registerCommand('createTerrain', createTerrainCommandService);\n      return createTerrainCommandService;\n    }\n  ]);\n"]}