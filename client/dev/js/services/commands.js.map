{"version":3,"sources":["../../es6/services/commands.js"],"names":[],"mappings":"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","file":"commands.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('commands', [\n    function commandsServiceFactory() {\n      let CMD_REGS = {};\n      let commandsService = {\n        registerCommand: function commandsRegister(name, command) {\n          console.log('register command', name, command);\n          CMD_REGS[name] = command;\n        },\n        execute: function commandsExecute(name, args, state, game) {\n          return R.pipePromise(\n            R.prop(name),\n            R.rejectIf(R.isNil, `execute unknown command \"${name}\"`),\n            (cmd) => {\n              return cmd.execute.apply(null, [...args, state, game]);\n            },\n            ([ctxt, game]) => {\n              return [ R.assoc('type', name, ctxt),\n                       game\n                     ];\n            }\n          )(CMD_REGS);\n        },\n        undo: function commandsUndo(ctxt, state, game) {\n          return R.pipePromise(\n            R.prop(ctxt.type),\n            R.rejectIf(R.isNil, `undo unknown command \"${ctxt.type}\"`),\n            (cmd) => {\n              return cmd.undo(ctxt, state, game);\n            }\n          )(CMD_REGS);\n        },\n        replay: function commandsReplay(ctxt, state, game) {\n          return R.pipePromise(\n            R.prop(ctxt.type),\n            R.rejectIf(R.isNil, `replay unknown command ${ctxt.type}`),\n            (cmd) => {\n              return cmd.replay(ctxt, state, game);\n            }\n          )(CMD_REGS);\n        },\n        replayBatch: function commandsReplayBatch(commands, state, game) {\n          return R.pipePromise(\n            () => {\n              if(R.isEmpty(commands)) return game;\n\n              return R.pipeP(\n                (game) => {\n                  return commandsService.replay(commands[0], state, game)\n                    .catch(R.always(game));\n                },\n                commandsService.replayBatch$(R.tail(commands), state)\n              )(game);\n            }\n          )();\n        }\n      };\n      R.curryService(commandsService);\n      return commandsService;\n    }\n  ])\n  .factory('allCommands', [\n    'createModelCommand',\n    'deleteModelCommand',\n    'setModelSelectionCommand',\n    'lockModelsCommand',\n    'onModelsCommand',\n    'createTemplateCommand',\n    'deleteTemplatesCommand',\n    'lockTemplatesCommand',\n    'onTemplatesCommand',\n    'createTerrainCommand',\n    'deleteTerrainCommand',\n    'lockTerrainsCommand',\n    'onTerrainsCommand',\n    'rollDiceCommand',\n    'rollDeviationCommand',\n    'setBoardCommand',\n    'setLayersCommand',\n    'setLosCommand',\n    'setRulerCommand',\n    'setScenarioCommand',\n    () => ({ })\n  ]);\n"]}