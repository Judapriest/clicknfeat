{"version":3,"sources":["../../es6/services/commands.js"],"names":[],"mappings":"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","file":"commands.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('commands', [\n    function commandsServiceFactory() {\n      var CMD_REGS = {};\n      var commandsService = {\n        registerCommand: function commandsRegister(name, command) {\n          console.log('register command', name, command);\n          CMD_REGS[name] = command;\n        },\n        execute: function commandsExecute(name, ...args) {\n          return R.pipePromise(\n            () => {\n              if(R.isNil(CMD_REGS[name])) {\n                console.log('execute unknown command '+name);\n                return self.Promise.reject('execute unknown command '+name);\n              }\n              return CMD_REGS[name].execute.apply(null, args);\n            },\n            (ctxt) => {\n              ctxt.type = name;\n              return ctxt;\n            }\n          )();\n        },\n        undo: function commandsUndo(ctxt, scope, game) {\n          return R.pipePromise(\n            () => {\n              if(R.isNil(CMD_REGS[ctxt.type])) {\n                console.log('undo unknown command '+ctxt.type);\n                return self.Promise.reject('undo unknown command '+ctxt.type);\n              }\n              return CMD_REGS[ctxt.type].undo(ctxt, scope, game);\n            }\n          )();\n        },\n        replay: function commandsReplay(ctxt, scope, game) {\n          return R.pipePromise(\n            () => {\n              if(R.isNil(CMD_REGS[ctxt.type])) {\n                console.log('replay unknown command '+ctxt.type);\n                return self.Promise.reject('replay unknown command '+ctxt.type);\n              }\n              return CMD_REGS[ctxt.type].replay(ctxt, scope, game);\n            }\n          )();\n        },\n        replayBatch: function commandsReplayBatch(commands, scope, game) {\n          if(R.isEmpty(commands)) return self.Promise.resolve();\n          \n          // console.log('Commands: ReplayBatch:');\n          // console.log('Commands: ReplayBatch:', commands);\n          return commandsService.replay(commands[0], scope, game)\n            .catch(R.always(null))\n            .then(() => {\n              return commandsService\n                .replayBatch(R.tail(commands), scope, game);\n            });\n        },\n      };\n      R.curryService(commandsService);\n      return commandsService;\n    }\n  ])\n  .factory('allCommands', [\n    'createModelCommand',\n    'deleteModelCommand',\n    'setModelSelectionCommand',\n    'lockModelsCommand',\n    'onModelsCommand',\n    'createTemplateCommand',\n    'deleteTemplatesCommand',\n    'lockTemplatesCommand',\n    'onTemplatesCommand',\n    'rollDiceCommand',\n    'rollDeviationCommand',\n    'setBoardCommand',\n    'setLayersCommand',\n    'setLosCommand',\n    'setRulerCommand',\n    'setScenarioCommand',\n    () => ({ })\n  ]);\n"]}