{"version":3,"sources":["../../../es6/services/game/modelSelection.js"],"names":[],"mappings":"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","file":"modelSelection.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('gameModelSelection', [\n    'modes',\n    'gameModels',\n    function gameModelSelectionServiceFactory(modesService,\n                                              gameModelsService) {\n      function checkSelection(where, state) {\n        if('local' === where) {\n          state.event('Modes.switchTo', 'Default');\n          state.changeEvent('Game.model.selection.local.change');\n        }\n      }\n      var gameModelSelectionService = {\n        create: function modelSelectionCreate() {\n          return {\n            local: [],\n            remote: []\n          };\n        },\n        'in': function modelSelectionIn(where, stamp, selection) {\n          var stamps = R.prop(where, selection);\n          return R.find(R.equals(stamp), stamps);\n        },\n        inSingle: function modelSelectionInSingle(where, stamp, selection) {\n          var stamps = R.prop(where, selection);\n          return ( R.length(stamps) === 1 &&\n                   stamps[0] === stamp );\n        },\n        get: function modelSelectionGet(where, selection) {\n          return R.pipe(\n            R.defaultTo({}),\n            R.propOr([], where)\n          )(selection);\n        },\n        modeFor: function(models, selection) {\n          var local = gameModelSelectionService.get('local', selection);\n          if(R.isEmpty(local)) {\n            return self.Promise.reject('No model selection');\n          }\n          if(R.length(local) === 1) {\n            return gameModelsService.modeForStamp(local[0], models);\n          }\n          return 'Models';\n        },\n        checkMode: function modelSelectionCheckMode(state, selection) {\n          return R.pipePromise(\n            gameModelSelectionService.modeFor$(state.game.models),\n            (mode) => {\n              state.event('Modes.switchTo', mode);\n            }\n          )(selection);\n        },\n        set: function modelSelectionSet(where, stamps, state, selection) {\n          var previous = gameModelSelectionService.get(where, selection);\n          var ret = R.assoc(where, stamps, selection);\n\n          checkSelection(where, state);\n          \n          R.forEach((stamp) => {\n            state.changeEvent(`Game.model.change.${stamp}`);\n          }, stamps);\n          R.forEach((stamp) => {\n            state.changeEvent(`Game.model.change.${stamp}`);\n          }, previous);\n\n          return ret;\n        },\n        addTo: function modelSelectionSet(where, stamps, state, selection) {\n          var previous = gameModelSelectionService.get(where, selection);\n          var new_selection = R.uniq(R.concat(previous, stamps));\n          var ret = R.assoc(where, new_selection, selection);\n\n          checkSelection(where, state);\n          \n          R.forEach((stamp) => {\n            state.changeEvent(`Game.model.change.${stamp}`);\n          }, new_selection);\n\n          return ret;\n        },\n        removeFrom: function modelSelectionRemoveFrom(where, stamps, state, selection) {\n          var previous = R.prop(where, selection);\n          var new_selection = R.difference(previous, stamps);\n          var ret = R.assoc(where, new_selection, selection);\n          \n          checkSelection(where, state);\n\n          R.forEach((stamp) => {\n            state.changeEvent(`Game.model.change.${stamp}`);\n          }, R.uniq(R.concat(previous, stamps)));\n\n          return ret;\n        },\n        clear: function modelSelectionClear(where, stamps, state, selection) {\n          var previous = R.prop(where, selection);\n          return gameModelSelectionService\n            .removeFrom(where, previous, state, selection);\n        }\n      };\n      R.curryService(gameModelSelectionService);\n      return gameModelSelectionService;\n    }\n  ]);\n"]}