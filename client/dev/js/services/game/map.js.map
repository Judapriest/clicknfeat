{"version":3,"sources":["../../../es6/services/game/map.js"],"names":[],"mappings":"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","file":"map.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('gameMap', [\n    'gameModels',\n    'gameTemplates',\n    'gameTerrains',\n    function gameMapServiceFactory(gameModelsService,\n                                   gameTemplatesService,\n                                   gameTerrainsService) {\n      var gameMapService = {\n        isFlipped: function mapIsFlipped(map) {\n          return map.classList.contains('flipped');\n        },\n        zoomFactor: function mapZoomFactor(map) {\n          var map_rect = map.getBoundingClientRect();\n          return map_rect.width / 480;\n        },\n        eventToMapCoordinates: function gameMapEventToMapCoordinates(map, event) {\n          var map_flipped = gameMapService.isFlipped(map);\n          var rect = map.getBoundingClientRect();\n          var map_x = (event.clientX - rect.left) * 480 / rect.width;\n          var map_y = (event.clientY - rect.top) * 480 / rect.height;\n          map_x = ( map_flipped ? 480 - map_x : map_x );\n          map_y = ( map_flipped ? 480 - map_y : map_y );\n          return { x: map_x, y: map_y };\n        },\n        mapToScreenCoordinates: function gameMapMapToScreenCoordinates(map, coord) {\n          var map_flipped = gameMapService.isFlipped(map);\n          var rect = map.getBoundingClientRect();\n          var x = (coord.x * rect.width / 480);\n          var y = (coord.y * rect.height / 480);\n          if(map_flipped) {\n            x = rect.width - x;\n            y = rect.height - y;\n          }\n          x = x + rect.left;\n          y = y + rect.top;\n          return { x: x, y: y };\n        },\n        findEventTarget: function gameMapFindEventTarget(game, event) {\n          var stamp;\n          var not_found = {\n            type: 'Map',\n            target: null\n          };\n          if(event.target.classList.contains('template') &&\n             event.target.hasAttribute('data-stamp')) {\n            stamp = event.target.getAttribute('data-stamp');\n            return R.pipeP(\n              gameTemplatesService.findStamp$(stamp),\n              (template) => {\n                return { type: 'Template',\n                         target: template\n                       };\n              }\n            )(game.templates).catch(R.always(not_found));\n          }\n          if(event.target.classList.contains('model-base') &&\n             event.target.hasAttribute('data-stamp')) {\n            stamp = event.target.getAttribute('data-stamp');\n            return R.pipeP(\n              gameModelsService.findStamp$(stamp),\n              (model) => {\n                return { type: 'Model',\n                         target: model\n                       };\n              }\n            )(game.models).catch(R.always(not_found));\n          }\n          if(event.target.classList.contains('terrain-image') &&\n             event.target.hasAttribute('data-stamp')) {\n            stamp = event.target.getAttribute('data-stamp');\n            return R.pipeP(\n              gameTerrainsService.findStamp$(stamp),\n              (terrain) => {\n                return { type: 'Terrain',\n                         target: terrain\n                       };\n              }\n            )(game.terrains).catch(R.always(not_found));\n          }\n          return self.Promise.resolve(not_found);\n        }\n      };\n      R.curryService(gameMapService);\n      return gameMapService;\n    }\n  ]);\n"]}