{"version":3,"sources":["../../../es6/services/game/factions.js"],"names":[],"mappings":"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","file":"factions.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('gameFactions', [\n    'localStorage',\n    'http',\n    function gameFactionsServiceFactory(localStorageService,\n                                        httpService) {\n      var BASE_RADIUS = {\n        huge: 24.605,\n        large: 9.842,\n        medium: 7.874,\n        small: 5.905\n      };\n      var STORAGE_KEY = 'clickApp.factions_desc';\n      var gameFactionsService = {\n        init: function gameFactionsInit() {\n          return R.pipeP(\n            httpService.get,\n            (data) => {\n              return R.map((faction) => {\n                return httpService.get(data[faction])\n                  .then((fdata) => {\n                    if(R.isNil(fdata)) {\n                      console.log('factions: Error getting '+faction+' info', data[faction]);\n                    }\n                    return [ faction, fdata ];\n                  });\n              }, R.keys(data));\n            },\n            R.promiseAll,\n            R.sortBy(R.compose(R.prop('name'), R.nth(1))),\n            R.reduce(function(mem, [name, faction]) {\n              return R.assoc(name, updateFaction(faction), mem);\n            }, {}),\n            (factions) => {\n              return gameFactionsService.loadDesc()\n                .then(gameFactionsService.applyDesc$(factions));\n            }\n          )('/data/model/factions.json')\n            .catch(R.spyError('factions: error getting description'));\n        },\n        loadDesc: function gameFactionsLoadDesc() {\n          return localStorageService.load(STORAGE_KEY)\n            .catch(() => {\n              console.log('factions: no stored desc');\n            })\n            .then(R.defaultTo({}));\n        },\n        applyDesc: function gameFactionsApplyDesc(factions, desc) {\n          return R.deepExtend(factions, desc);\n        },\n        storeDesc: function gameFactionsStoreDesc(desc) {\n          return localStorageService.save(STORAGE_KEY, desc);\n        },\n        buildReferences: function gameFactionsBuildReferences(factions) {\n          return R.reduce(buildFactionRefs(factions), {}, R.keys(factions));\n        },\n        getModelInfo: function gameFactionsGetModelInfo(path, factions) {\n          return new self.Promise((resolve, reject) => {\n            var info = R.path(path, factions);\n            if(R.isNil(info)) reject('Model info '+path.join('.')+' not found');\n            else resolve(info);\n          });\n        },\n        getListInfo: function gameFactionsGetListInfo(list, references) {\n          function parseLine(line) {\n            return R.pipe(\n              R.values,\n              R.find(lineMatchesReference(line)),\n              buildEntry(line)\n            )(references);\n          }\n          let lineMatchesReference = R.curry((line, reference) => {\n            return XRegExp.exec(line, reference.regexp);\n          });\n          let buildEntry = R.curry((line, reference) => {\n            if(R.isNil(reference)) return reference;\n            \n            let match = XRegExp.exec(line, reference.regexp);\n            return [\n              R.prop('entries', reference),\n              parseNbGrunts(match.nb_grunts),\n              parseNbRepeat(match.nb_repeat)\n            ];\n          });\n          let parseNbGrunts = (nb_grunts) => {\n            return R.pipe(\n              R.defaultTo('0'),\n              (s) => { return parseFloat(s)+1; }\n            )(nb_grunts);\n          };\n          let parseNbRepeat = (nb_repeat) => {\n            return R.pipe(\n              R.defaultTo('0'),\n              (s) => { return parseFloat(s); }\n            )(nb_repeat);\n          };\n\n          return R.pipe(\n            s.lines,\n            R.map(parseLine),\n            R.reject(R.isNil)\n          )(list);\n        },\n        buildModelsList: function gameFactionsBuildModelsList(list, user, references) {\n          console.log('buildModelsList', list, user, references);\n          let info = gameFactionsService.getListInfo(list, references);\n          console.log('buildModelsList: info', info);\n          \n          function buildUnit([entries, nb_grunts, nb_repeat]) {\n            let grunts = buildGrunts(entries, nb_grunts);\n            let others = buildOthers(entries, nb_repeat);\n            let models = [...grunts, ...others];\n            updateUnit(entries, models);\n            return models;\n          }\n          function buildGrunts(entries, nb_grunts) {\n            let grunts = [];\n            let [grunt] = R.propOr([], 'grunt', entries);\n            if(R.exists(grunt) &&\n               R.exists(grunt.fk_grunts)) {\n              nb_grunts = grunt.fk_grunts;\n            }\n            if(nb_grunts > 0) {\n              let [leader] = R.propOr([], 'leader', entries);\n              if(R.exists(leader)) {\n                grunts = R.concat(grunts, addModel(1, leader));\n                nb_grunts--;\n              }\n              if(R.exists(grunt)) {\n                R.times(() => { grunts = R.concat(grunts, addModel(1, grunt)); }, nb_grunts);\n              }\n              if(!R.isEmpty(grunts)) {\n                grunts[0].dsp = ['l', 'i'];\n              }\n            }\n            return grunts;\n          }\n          function buildOthers(entries, nb_repeat) {\n            return R.pipe(\n              R.omit(['grunt','leader']),\n              R.values,\n              R.flatten,\n              R.chain((model) => {\n                return addModel(nb_repeat, model);\n              })\n            )(entries);\n          }\n\n          let last_unit = {\n            name: null,\n            number: 0\n          };\n          function updateUnit(entries, models) {\n            let unit_name = findUnitName(entries);\n            if( R.isNil(unit_name) ||\n                unit_name !== last_unit.name ) {\n              last_unit.number++;\n            }\n            last_unit.name = unit_name;\n            \n            R.forEach((model) => {\n              model.u = last_unit.number;\n            }, models);\n          }\n          function findUnitName(entries) {\n            return R.pipe(\n              R.values,\n              R.find((entry) => {\n                return R.find((model) => {\n                  return R.exists(model.unit_name);\n                }, entry);\n              }),\n              R.defaultTo([{}]),\n              R.head,\n              R.prop('unit_name')\n            )(entries);\n          }\n\n          const MAX_X = 240;\n          let x = 0, y = 0, y_offset = 0;\n          function addModel(nb_repeat, model) {\n            let ret = [];\n            R.pipe(\n              R.propOr(1, 'fk_repeat'),\n              R.max(nb_repeat),\n              R.times(() => {\n                ret.push({\n                  user: user,\n                  info: model.path,\n                  x: x + model.base_radius,\n                  y: y + model.base_radius,\n                  r: 0\n                });\n                x += model.base_radius*2;\n                y_offset = Math.max(y_offset, model.base_radius*2);\n                if(x > MAX_X) {\n                  x = 0;\n                  y += y_offset;\n                  y_offset = 0;\n                }\n              })\n            )(model);\n            return ret;\n          }\n\n          return {\n            base: { x: 240, y: 240, r: 0 },\n            models: R.chain(buildUnit, info)\n          };\n        },\n        buildReferenceRegexp: function gameFactionsBuildReferenceRegexp(name) {\n          let regexp = '^\\\\**\\\\s*'+name;\n          return XRegExp(regexp, 'i');\n        },\n      };\n      function updateFaction(faction) {\n        // console.log(faction);\n        return R.pipe(\n          R.assoc('wreck', updateWreck(faction.wreck)),\n          (faction) => {\n            return R.assoc('models',\n                           updateFactionModels(faction, faction.models),\n                           faction);\n          }\n        )(faction);\n      }\n      function updateFactionModels(faction, models) {\n        // console.log(models);\n        return R.reduce((mem, section) => {\n          // console.log(section);\n          return R.assoc(section, updateSection(faction, models[section]), mem);\n        }, {}, R.keys(models));\n      }\n      function updateSection(faction, section) {\n        // console.log(section);\n        return R.pipe(\n          R.keys,\n          R.sortBy((entry) => { return section[entry].name; }),\n          R.reduce((mem, entry) => {\n            // console.log(entry);\n            return R.assoc(entry, updateEntry(faction, section[entry]), mem);\n          }, {})\n        )(section);\n      }\n      function updateEntry(faction, entry) {\n        // console.log(entry);\n        if(R.exists(entry.entries)) {\n          return updateUnit(faction, entry);\n        }\n        else {\n          return updateModel(faction, null, entry);\n        }\n      }\n      function updateUnit(faction, unit) {\n        // console.log(unit);\n        return R.assoc('entries', updateUnitEntries(faction, unit, unit.entries), unit);\n      }\n      function updateUnitEntries(faction, unit, entries) {\n        // console.log(unit, entries);\n        return R.reduce((mem, category) => {\n          // console.log(category);\n          return R.assoc(category, updateUnitCategory(faction, unit, entries[category]), mem);\n        }, {}, R.keys(entries));    \n      }\n      function updateUnitCategory(faction, unit, category) {\n        return R.reduce((mem, entry) => {\n          // console.log(entry);\n          return R.assoc(entry, updateModel(faction, unit, category[entry]), mem);\n        }, {}, R.keys(category));\n      }\n      function updateModel(faction, unit, model) {\n        // console.log(model);\n        var default_fk_name = model.name;\n        if(R.exists(unit)) {\n          if(R.exists(unit.fk_name)) {\n            default_fk_name = unit.fk_name;\n          }\n          else {\n            default_fk_name = unit.name + '.*(?<nb_grunts>\\\\d+)\\\\s+grunt';\n          }\n        }\n        unit = R.defaultTo({}, unit);\n        return R.pipe(\n          R.assoc('fk_name', R.defaultTo(default_fk_name, model.fk_name)),\n          R.assoc('unit_name', unit.name),\n          R.assoc('img', updateImgs(model.img)),\n          R.assoc('damage', updateDamage(model.damage)),\n          R.assoc('base_color', faction.color),\n          R.assoc('base_radius', BASE_RADIUS[model.base]),\n          (model) => {\n            if(model.type === 'jack' &&\n               R.exists(faction.wreck) &&\n               R.exists(faction.wreck[model.base])) {\n              return R.assoc('img', R.append(faction.wreck[model.base], model.img), model);\n            }\n            return model;\n          }\n        )(model);\n      }\n      function updateImgs(imgs) {\n        // console.log(imgs);\n        return R.pipe(\n          R.defaultTo([]),\n          (imgs) => {\n            if(R.isEmpty(imgs)) {\n              return R.append({}, imgs);\n            }\n            return imgs;\n          },\n          R.map(updateImage)\n        )(imgs);\n      }\n      function updateWreck(wreck) {\n        return R.pipe(\n          R.defaultTo({}),\n          (wreck) => {\n            return R.pipe(\n              R.keys,\n              R.reduce((mem, key) => {\n                return R.assoc(key, updateImage(R.assoc('type','wreck',wreck[key])), mem);\n              }, {})\n            )(wreck);\n          }\n        )(wreck);\n      }\n      function updateImage(img) {\n        return R.pipe(\n          R.assoc('type', R.defaultTo('default', img.type)),\n          R.assoc('width', R.defaultTo(60, img.width)),\n          R.assoc('height', R.defaultTo(60, img.height))\n        )(img);\n      }\n      function updateDamage(damage) {\n        // console.log(damage);\n        return R.pipe(\n          R.defaultTo({ type: 'warrior', n: 1 }),\n          (damage) => {\n            return R.assoc('type', R.defaultTo('warrior', damage.type), damage);\n          },\n          (damage) => {\n            return R.assoc('total', computeDamageTotal(damage), damage);\n          },\n          (damage) => {\n            return R.assoc('depth', computeDamageDepth(damage), damage);\n          }\n        )(damage);\n      }\n      function computeDamageTotal(damage) {\n        if(damage.type === 'warrior') return damage.n;\n        return R.pipe(\n          R.keys,\n          R.reject(R.equals('type')),\n          R.reject(R.equals('total')),\n          R.reject(R.equals('field')),\n          R.reduce((mem, key) => {\n            return mem + R.pipe(\n              R.reject(R.isNil),\n              R.length\n            )(damage[key]);\n          }, 0)\n        )(damage);\n      }\n      function computeDamageDepth(damage) {\n        if(damage.type === 'warrior') return damage.n;\n        return R.pipe(\n          R.keys,\n          R.reject(R.equals('type')),\n          R.reject(R.equals('total')),\n          R.reject(R.equals('field')),\n          R.map((key) => {\n            return R.length(damage[key]);\n          }),\n          R.reduce(R.max, 0)\n        )(damage);\n      }\n\n      var buildFactionRefs = R.curry((factions, mem, faction) => {\n        let models = factions[faction].models;\n        return R.reduce(buildTypeRefs(faction, models),\n                        mem, R.keys(models));\n      });\n      var buildTypeRefs = R.curry((faction, models, mem, type) => {\n        let units = models[type];\n        return R.reduce(buildUnitRefs(faction, type, units),\n                        mem, R.keys(units));\n      });\n      var buildUnitRefs = R.curry((faction, type, units, mem, unit) => {\n        let entries = units[unit].entries;\n        if(R.isNil(entries)) {\n          return buildSingleRef(faction, type, units, unit, mem);\n        }\n        else {\n          return R.reduce(buildEntryTypeRefs(faction, type, unit, entries),\n                          mem, R.keys(entries));\n        }\n      });\n      var buildSingleRef = R.curry((faction, type, units, unit, mem) => {\n        unit = R.assoc('path', [\n          faction, 'models', type, unit\n        ], units[unit]);\n        updateReference('default', unit, mem);\n        return mem;\n      });\n      var buildEntryTypeRefs = R.curry((faction, type, unit,\n                                        entries, mem, entry_type) => {\n        let category = entries[entry_type];\n        return R.reduce(buildEntryRef(faction, type, unit, entry_type, category),\n                        mem, R.keys(category));\n      });\n      var buildEntryRef = R.curry((faction, type, unit, entry_type,\n                                   category, mem, entry_key) => {\n        let entry = R.assoc('path', [\n          faction, 'models', type, unit, 'entries', entry_type, entry_key\n        ], category[entry_key]);\n        updateReference(entry_key, entry, mem);\n        return mem;\n      });\n      function updateReference(type, entry, mem) {\n        let reference = getReferenceForFkName(entry.fk_name, mem);\n        let entries_type = R.defaultTo([], reference.entries[type]);\n        \n        entries_type.push(entry);\n\n        reference.entries[type] = entries_type;\n        mem[entry.fk_name] = reference;\n      }\n      function getReferenceForFkName(name, mem) {\n        let regexp = gameFactionsService.buildReferenceRegexp(name);\n        return R.defaultTo({\n          regexp: regexp,\n          entries: {}\n        }, mem[name]);\n      }\n\n      R.curryService(gameFactionsService);\n      return gameFactionsService;\n    }\n  ]);\n"]}