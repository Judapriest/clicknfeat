{"version":3,"sources":["../../../es6/services/game/terrains.js"],"names":[],"mappings":"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","file":"terrains.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('gameTerrains', [\n    'point',\n    'terrain',\n    function gameTerrainsServiceFactory(pointService,\n                                        terrainService) {\n      var gameTerrainsService = {\n        create: function() {\n          return {\n            active: [],\n            locked: [],\n          };\n        },\n        all: function terrainsAll(terrains) {\n          return R.concat(terrains.active, terrains.locked);\n        },\n        findStamp: function terrainsFindStamp(stamp, terrains) {\n          return new self.Promise(function(resolve, reject) {\n            var terrain = R.pipe(\n              gameTerrainsService.all,\n              R.find(R.pathEq(['state','stamp'], stamp))\n            )(terrains);\n            if(R.isNil(terrain)) reject('Terrain '+stamp+' not found');\n            else resolve(terrain);\n          });\n        },\n        findAnyStamps: function terrainsFindAnyStamps(stamps, terrains) {\n          return R.pipePromise(\n            R.map((stamp) => {\n              return gameTerrainsService.findStamp(stamp, terrains)\n                .catch(R.always(null));\n            }),\n            R.promiseAll,\n            (terrains) => {\n              if(R.isEmpty(R.reject(R.isNil, terrains))) {\n                return self.Promise.reject('No terrain found');\n              }\n              return terrains;\n            }\n          )(stamps);\n        },\n        onStamps: function terrainsOnStamps(method, ...args /*, stamps, terrains*/) {\n          if('Function' !== R.type(terrainService[method])) {\n            return self.Promise.reject('Unknown method '+method+' on terrains');\n          }\n          \n          var terrains = R.last(args);\n          var stamps = R.nth(-2, args);\n\n          args = R.slice(0, -2, args);\n          var reason;\n          return R.pipeP(\n            gameTerrainsService.findAnyStamps$(stamps),\n            R.reject(R.isNil),\n            R.map((terrain) => {\n              return self.Promise\n                .resolve(terrainService[method].apply(null, R.append(terrain, args)))\n                .catch((_reason) => {\n                  console.error(_reason);\n                  reason = _reason;\n                  return '##failed##';\n                });\n            }),\n            R.promiseAll,\n            (results) => {\n              if(R.isEmpty(R.reject(R.equals('##failed##'), results))) {\n                console.error('Terrains: onStamps all failed', args);\n                return self.Promise.reject(reason);\n              }\n              return R.map((res) => {\n                return ( res === '##failed##' ?\n                         null : res\n                       );\n              }, results);\n            }\n          )(terrains);\n        },\n        lockStamps: function terrainsLockStamps(lock, stamps, terrains) {\n          return R.pipeP(\n            () => {\n              return gameTerrainsService.findAnyStamps(stamps, terrains);\n            },\n            R.reject(R.isNil),\n            R.forEach(terrainService.setLock$(lock)),\n            () => {\n              return updateActiveLocked(terrains);\n            }\n          )();\n        },\n        add: function terrainsAdd(news, terrains) {\n          return R.pipe(\n            gameTerrainsService.removeStamps$(R.map(R.path(['state','stamp']), news)),\n            (terrains) => {\n              return R.assoc('active', R.concat(terrains.active, news), terrains);\n            },\n            (terrains) => {\n              return updateActiveLocked(terrains);\n            }\n          )(terrains);\n        },\n        removeStamps: function terrainsRemoveStamps(stamps, terrains) {\n          function inStamps(terrain) {\n            return R.find(R.equals(R.path(['state', 'stamp'], terrain)), stamps);\n          }\n          return R.pipe(\n            R.assoc('active', R.reject(inStamps, terrains.active)),\n            R.assoc('locked', R.reject(inStamps, terrains.locked))\n          )(terrains);\n        },\n        copyStamps: function terrainsCopyStamps(stamps, terrains) {\n          return R.pipeP(\n            gameTerrainsService.findAnyStamps$(stamps),\n            R.reject(R.isNil),\n            (selection) => {\n              var base = R.pick(['x','y','r'], selection[0].state);\n\n              return {\n                base: base,\n                terrains: R.map(R.compose(pointService.differenceFrom$(base),\n                                        terrainService.saveState),\n                              selection)\n              };\n            }\n          )(terrains);\n        },\n      };\n      function updateActiveLocked(terrains) {\n        var partition = R.pipe(\n          gameTerrainsService.all,\n          R.partition(terrainService.isLocked)\n        )(terrains);\n        return {\n          active: partition[1],\n          locked: partition[0]\n        };\n      }\n      R.curryService(gameTerrainsService);\n      return gameTerrainsService;\n    }\n  ]);\n"]}