{"version":3,"sources":["../../../es6/services/game/terrains.js"],"names":[],"mappings":";;;;;;AAAA,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,OAAO,CAAC,cAAc,EAAE,CACvB,OAAO,EACP,SAAS,EACT,SAAS,0BAA0B,CAAC,YAAY,EACZ,cAAc,EAAE;AAClD,MAAI,mBAAmB,GAAG;AACxB,UAAM,EAAE,kBAAW;AACjB,aAAO;AACL,cAAM,EAAE,EAAE;AACV,cAAM,EAAE,EAAE;OACX,CAAC;KACH;AACD,OAAG,EAAE,SAAS,WAAW,CAAC,QAAQ,EAAE;AAClC,aAAO,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;KACnD;AACD,aAAS,EAAE,SAAS,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE;AACrD,aAAO,IAAI,IAAI,CAAC,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AAChD,YAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAClB,mBAAmB,CAAC,GAAG,EACvB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,EAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,CAC3C,CAAC,QAAQ,CAAC,CAAC;AACZ,YAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,MAAM,cAAY,KAAK,gBAAa,CAAC,KACrD,OAAO,CAAC,OAAO,CAAC,CAAC;OACvB,CAAC,CAAC;KACJ;AACD,iBAAa,EAAE,SAAS,qBAAqB,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC9D,aAAO,CAAC,CAAC,WAAW,CAClB,CAAC,CAAC,GAAG,CAAC,UAAC,KAAK,EAAK;AACf,eAAO,mBAAmB,CACvB,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAC1B,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;OAC1B,CAAC,EACF,CAAC,CAAC,UAAU,EACZ,UAAC,QAAQ,EAAK;AACZ,YAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,EAAE;AACzC,iBAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;SAChD;AACD,eAAO,QAAQ,CAAC;OACjB,CACF,CAAC,MAAM,CAAC,CAAC;KACX;AACD,cAAU,EAAE,SAAS,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE;AACtE,aAAO,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EACnC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;KACpD;AACD,YAAQ,EAAE,SAAS,gBAAgB,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE;AAClE,aAAO,CAAC,CAAC,KAAK,CACZ,WAAW,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,EAC3C,eAAe,CAAC,QAAQ,CAAC,CAC1B,CAAC,QAAQ,CAAC,CAAC;KACb;AACD,kBAAc,EAAE,SAAS,sBAAsB,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;AACxE,aAAO,CAAC,CAAC,KAAK,CACZ,mBAAmB,CAAC,cAAc,CAAC,MAAM,CAAC,EAC1C,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,UAAC,OAAO,EAAE,KAAK,EAAK;AACpC,eAAS,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAChB,IAAI,GACJ,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAC/C;OACV,CAAC,EACF,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EACjB,eAAe,CAAC,QAAQ,CAAC,CAC1B,CAAC,QAAQ,CAAC,CAAC;KACb;AACD,cAAU,EAAE,SAAS,kBAAkB,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE;AAC9D,aAAO,CAAC,CAAC,KAAK,CACZ,mBAAmB,CAAC,cAAc,CAAC,MAAM,CAAC,EAC1C,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EACjB,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EACpC,eAAe,CAAC,QAAQ,CAAC,CAC1B,CAAC,QAAQ,CAAC,CAAC;KACb;AACD,OAAG,EAAE,SAAS,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE;AACxC,aAAO,CAAC,CAAC,IAAI,CACX,mBAAmB,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EACzE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAC9B,CAAC,QAAQ,CAAC,CAAC;KACb;AACD,gBAAY,EAAE,SAAS,oBAAoB,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC5D,eAAS,QAAQ,CAAC,OAAO,EAAE;AACzB,eAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;OACtE;AACD,aAAO,CAAC,CAAC,IAAI,CACX,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EACtD,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CACvD,CAAC,QAAQ,CAAC,CAAC;KACb;AACD,cAAU,EAAE,SAAS,kBAAkB,CAAC,MAAM,EAAE,QAAQ,EAAE;AACxD,aAAO,CAAC,CAAC,KAAK,CACZ,mBAAmB,CAAC,cAAc,CAAC,MAAM,CAAC,EAC1C,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EACjB,UAAC,SAAS,EAAK;AACb,YAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;;AAErD,eAAO;AACL,cAAI,EAAE,IAAI;AACV,kBAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,EACpC,cAAc,CAAC,SAAS,CAAC,EACnC,SAAS,CAAC;SACzB,CAAC;OACH,CACF,CAAC,QAAQ,CAAC,CAAC;KACb;GACF,CAAC;AACF,MAAI,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,UAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAK;AACrE,QAAG,UAAU,KAAK,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE;AAChD,aAAO,IAAI,CAAC,OAAO,CAAC,MAAM,qBAAmB,MAAM,kBAAe,CAAC;KACpE;;AAED,WAAO,CAAC,CAAC,KAAK,CACZ,mBAAmB,CAAC,cAAc,CAAC,MAAM,CAAC,EAC1C,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EACjB,CAAC,CAAC,GAAG,CAAC,UAAC,OAAO,EAAK;AACjB,aAAO,IAAI,CAAC,OAAO,CAChB,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,+BAAM,IAAI,IAAE,OAAO,GAAE,CAAC,CAC/D,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;KAC5B,CAAC,EACF,CAAC,CAAC,UAAU,CACb,CAAC,QAAQ,CAAC,CAAC;GACb,CAAC,CAAC;AACH,MAAI,eAAe,GAAG,CAAC,CAAC,KAAK,CAAC,UAAC,QAAQ,EAAE,IAAI,EAAK;AAChD,WAAO,CAAC,CAAC,IAAI,CACX,mBAAmB,CAAC,GAAG,EACvB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EACd,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC,CAAC,EACnC,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,EACpC,gBAAsB;;;UAApB,MAAM;UAAE,MAAM;;AACd,aAAO;AACL,cAAM,EAAE,MAAM;AACd,cAAM,EAAE,MAAM;OACf,CAAC;KACH,CACF,CAAC,QAAQ,CAAC,CAAC;GACb,CAAC,CAAC;AACH,GAAC,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;AACpC,SAAO,mBAAmB,CAAC;CAC5B,CACF,CAAC,CAAC","file":"terrains.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('gameTerrains', [\n    'point',\n    'terrain',\n    function gameTerrainsServiceFactory(pointService,\n                                        terrainService) {\n      var gameTerrainsService = {\n        create: function() {\n          return {\n            active: [],\n            locked: []\n          };\n        },\n        all: function terrainsAll(terrains) {\n          return R.concat(terrains.active, terrains.locked);\n        },\n        findStamp: function terrainsFindStamp(stamp, terrains) {\n          return new self.Promise(function(resolve, reject) {\n            var terrain = R.pipe(\n              gameTerrainsService.all,\n              R.find(R.pathEq(['state','stamp'], stamp))\n            )(terrains);\n            if(R.isNil(terrain)) reject(`Terrain ${stamp} not found`);\n            else resolve(terrain);\n          });\n        },\n        findAnyStamps: function terrainsFindAnyStamps(stamps, terrains) {\n          return R.pipePromise(\n            R.map((stamp) => {\n              return gameTerrainsService\n                .findStamp(stamp, terrains)\n                .catch(R.always(null));\n            }),\n            R.promiseAll,\n            (terrains) => {\n              if(R.isEmpty(R.reject(R.isNil, terrains))) {\n                return self.Promise.reject('No terrain found');\n              }\n              return terrains;\n            }\n          )(stamps);\n        },\n        fromStamps: function terrainsFromStamps(method, args, stamps, terrains) {\n          return fromStamps$(R.compose(R.always, R.always(null)),\n                             method, args, stamps, terrains);\n        },\n        onStamps: function terrainsOnStamps(method, args, stamps, terrains) {\n          return R.pipeP(\n            fromStamps$(R.always, method, args, stamps),\n            updateTerrains$(terrains)\n          )(terrains);\n        },\n        setStateStamps: function terrainsSetStateStamps(states, stamps, terrains) {\n          return R.pipeP(\n            gameTerrainsService.findAnyStamps$(stamps),\n            R.addIndex(R.map)((terrain, index) => {\n              return ( R.isNil(terrain) ?\n                       null :\n                       terrainService.setState(states[index], terrain)\n                     );\n            }),\n            R.reject(R.isNil),\n            updateTerrains$(terrains)\n          )(terrains);\n        },\n        lockStamps: function terrainsLockStamps(lock, stamps, terrains) {\n          return R.pipeP(\n            gameTerrainsService.findAnyStamps$(stamps),\n            R.reject(R.isNil),\n            R.map(terrainService.setLock$(lock)),\n            updateTerrains$(terrains)\n          )(terrains);\n        },\n        add: function terrainsAdd(news, terrains) {\n          return R.pipe(\n            gameTerrainsService.removeStamps$(R.map(R.path(['state','stamp']), news)),\n            R.flip(updateTerrains$)(news)\n          )(terrains);\n        },\n        removeStamps: function terrainsRemoveStamps(stamps, terrains) {\n          function inStamps(terrain) {\n            return R.find(R.equals(R.path(['state', 'stamp'], terrain)), stamps);\n          }\n          return R.pipe(\n            R.assoc('active', R.reject(inStamps, terrains.active)),\n            R.assoc('locked', R.reject(inStamps, terrains.locked))\n          )(terrains);\n        },\n        copyStamps: function terrainsCopyStamps(stamps, terrains) {\n          return R.pipeP(\n            gameTerrainsService.findAnyStamps$(stamps),\n            R.reject(R.isNil),\n            (selection) => {\n              var base = R.pick(['x','y','r'], selection[0].state);\n\n              return {\n                base: base,\n                terrains: R.map(R.compose(pointService.differenceFrom$(base),\n                                        terrainService.saveState),\n                              selection)\n              };\n            }\n          )(terrains);\n        }\n      };\n      var fromStamps$ = R.curry((onError, method, args, stamps, terrains) => {\n        if('Function' !== R.type(terrainService[method])) {\n          return self.Promise.reject(`Unknown method ${method} on terrains`);\n        }\n          \n        return R.pipeP(\n          gameTerrainsService.findAnyStamps$(stamps),\n          R.reject(R.isNil),\n          R.map((terrain) => {\n            return self.Promise\n              .resolve(terrainService[method].apply(null, [...args, terrain]))\n              .catch(onError(terrain));\n          }),\n          R.promiseAll\n        )(terrains);\n      });\n      var updateTerrains$ = R.curry((terrains, news) => {\n        return R.pipe(\n          gameTerrainsService.all,\n          R.concat(news),\n          R.uniqBy(R.path(['state','stamp'])),\n          R.partition(terrainService.isLocked),\n          ([locked, active]) => {\n            return {\n              active: active,\n              locked: locked\n            };\n          }\n        )(terrains);\n      });\n      R.curryService(gameTerrainsService);\n      return gameTerrainsService;\n    }\n  ]);\n"]}