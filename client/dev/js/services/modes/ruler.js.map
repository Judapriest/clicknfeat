{"version":3,"sources":["../../../es6/services/modes/ruler.js"],"names":[],"mappings":"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","file":"ruler.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('rulerMode', [\n    'modes',\n    'settings',\n    'commonMode',\n    'game',\n    'gameRuler',\n    'model',\n    'gameModels',\n    'gameModelSelection',\n    'prompt',\n    function rulerModeServiceFactory(modesService,\n                                     settingsService,\n                                     commonModeService,\n                                     gameService,\n                                     gameRulerService,\n                                     modelService,\n                                     gameModelsService,\n                                     gameModelSelectionService,\n                                     promptService) {\n      let ruler_actions = Object.create(commonModeService.actions);\n      ruler_actions.exitRulerMode = commonModeService.actions.modeBackToDefault;\n      ruler_actions.dragStartMap = (state, drag) => {\n        return state.event('Game.update', R.lensProp('ruler'),\n                           gameRulerService.setLocal$(drag.start, drag.now, state));\n      };\n      ruler_actions.dragMap = (state, drag) => {\n        return state.event('Game.update', R.lensProp('ruler'),\n                           gameRulerService.setLocal$(drag.start, drag.now, state));\n      };\n      ruler_actions.dragEndMap = (state, drag) => {\n        return state.event('Game.command.execute',\n                           'setRuler', [ 'setRemote', [drag.start, drag.now]]);\n      };\n      ruler_actions.dragStartTemplate = ruler_actions.dragStartMap;\n      ruler_actions.dragTemplate = ruler_actions.dragMap;\n      ruler_actions.dragEndTemplate = ruler_actions.dragEndMap;\n      ruler_actions.dragStartModel = ruler_actions.dragStartMap;\n      ruler_actions.dragModel = ruler_actions.dragMap;\n      ruler_actions.dragEndModel = ruler_actions.dragEndMap;\n      ruler_actions.setOriginModel = (state, event) => {\n        return R.pipePromise(\n          () => {\n            return state.event('Game.command.execute',\n                               'setRuler', ['setOrigin', [event['click#'].target]]);\n          },\n          (result) => {\n            updateMaxLengthButton(state);\n            return result;\n          }\n        )();\n      };\n      ruler_actions.setTargetModel = (state, event) => {\n        return state.event('Game.command.execute',\n                           'setRuler', ['setTarget', [event['click#'].target]]);\n      };\n      ruler_actions.setMaxLength = (state) => {\n        return R.pipeP(\n          () => {\n            return promptService\n              .prompt('prompt', 'Set ruler max length :',\n                      gameRulerService.maxLength(state.game.ruler))\n              .catch(R.always(null));\n          },\n          (value) => {\n            value = (value === 0) ? null : value;\n            return R.pipePromise(\n              () => {\n                return state.event('Game.command.execute',\n                                   'setRuler', ['setMaxLength', [value]]);\n              },\n              (result) => {\n                let origin = gameRulerService.origin(state.game.ruler);\n                if(R.isNil(origin)) return result;\n\n                return state.event('Game.command.execute',\n                                   'onModels', ['setRulerMaxLength', [value], [origin]]);\n              }\n            )();\n          },\n          (result) => {\n            updateMaxLengthButton(state);\n            return result;\n          }\n        )();\n      };\n      ruler_actions.createAoEOnTarget = (state) => {\n        return R.pipeP(\n          () => {\n            return gameRulerService\n              .targetAoEPosition(state.game.models, state.game.ruler);\n          },\n          (position) => {\n            position.type = 'aoe';\n            let create = {\n              base: { x: 0, y: 0, r: 0 },\n              templates: [ position ]\n            };\n            return state.event('Game.command.execute',\n                               'createTemplate', [create, false]);\n          }\n        )();\n      };\n      let ruler_default_bindings = {\n        exitRulerMode: 'ctrl+r',\n        setMaxLength: 'shift+r',\n        setOriginModel: 'ctrl+clickModel',\n        setTargetModel: 'shift+clickModel',\n        createAoEOnTarget: 'ctrl+a'\n      };\n      let ruler_bindings = R.extend(Object.create(commonModeService.bindings),\n                                    ruler_default_bindings);\n      let ruler_buttons = [\n        [ 'Set Max Len.', 'setMaxLength' ],\n        [ 'AoE on Target', 'createAoEOnTarget' ],\n      ];\n      let ruler_mode = {\n        onEnter: (state) => {\n          return R.pipePromise(\n            () => {\n              return gameModelSelectionService\n                .get('local', state.game.model_selection);\n            },\n            (stamps) => {\n              if(R.length(stamps) !== 1) return null;\n\n              return gameModelsService\n                .findStamp(stamps[0], state.game.models)\n                .catch(R.always(null));\n            },\n            (model) => {\n              if(R.isNil(model)) return null;\n              \n              return state\n                .event('Game.command.execute',\n                       'setRuler', ['setOriginResetTarget', [model]]);\n            },\n            () => {\n              updateMaxLengthButton(state);\n            }\n          )();\n        },\n        onLeave: (state) => {\n          state.changeEvent('Game.ruler.remote.change');\n        },\n        name: 'Ruler',\n        actions: ruler_actions,\n        buttons: ruler_buttons,\n        bindings: ruler_bindings\n      };\n      modesService.registerMode(ruler_mode);\n      settingsService.register('Bindings',\n                               ruler_mode.name,\n                               ruler_default_bindings,\n                               (bs) => {\n                                 R.extend(ruler_mode.bindings, bs);\n                               });\n\n      function updateMaxLengthButton(state) {\n        let max = gameRulerService.maxLength(state.game.ruler);\n        ruler_mode.buttons[0][0] = 'Set Max Len. ('+max+')';\n        state.changeEvent('Modes.buttons.update');\n      }\n\n      return ruler_mode;\n    }\n  ]);\n"]}