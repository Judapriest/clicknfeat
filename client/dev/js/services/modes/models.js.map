{"version":3,"sources":["../../../es6/services/modes/models.js"],"names":[],"mappings":"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","file":"models.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelsMode', [\n    'modes',\n    'settings',\n    'defaultMode',\n    'model',\n    'game',\n    'gameModels',\n    'gameModelSelection',\n    'point',\n    'prompt',\n    function modelsModeServiceFactory(modesService,\n                                      settingsService,\n                                      defaultModeService,\n                                      modelService,\n                                      gameService,\n                                      gameModelsService,\n                                      gameModelSelectionService,\n                                      pointService,\n                                      promptService) {\n      let models_actions = Object.create(defaultModeService.actions);\n      function modelsClearSelection(state) {\n        return state.event('Game.command.execute',\n                           'setModelSelection', [ 'clear', null ]);\n      }\n      models_actions.clickMap = modelsClearSelection;\n      models_actions.rightClickMap = modelsClearSelection;\n      models_actions.modeBackToDefault = modelsClearSelection;\n      models_actions.deleteSelection = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'deleteModel', [stamps]);\n      };\n      models_actions.toggleLock = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isLocked,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'lockModels', [ !present, stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleImageDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isImageDisplayed,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setImageDisplay', [!present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.setNextImage = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'setNextImage', [state.factions], stamps]);\n      };\n      models_actions.toggleWreckDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isWreckDisplayed,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setWreckDisplay', [!present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleUnitDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isUnitDisplayed,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setUnitDisplay', [!present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.setUnit = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          (model) => {\n            let value = R.defaultTo(0, modelService.unit(model));\n\n            return promptService\n              .prompt('prompt', 'Set unit number :', value)\n              .catch(R.always(null));\n          },\n          (value) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setUnit', [value], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleMeleeDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isMeleeDisplayed$('mm'),\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setMeleeDisplay', ['mm', !present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleReachDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isMeleeDisplayed$('mr'),\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setMeleeDisplay', ['mr', !present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleStrikeDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isMeleeDisplayed$('ms'),\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setMeleeDisplay', ['ms', !present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleCounterDisplay = (state) => {\n        let stamps = gameModelSelectionService.get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isCounterDisplayed$('c'),\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setCounterDisplay', ['c', !present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.incrementCounter = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'incrementCounter', ['c'], stamps]);\n      };\n      models_actions.decrementCounter = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'decrementCounter', ['c'], stamps]);\n      };\n      models_actions.toggleSoulsDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isCounterDisplayed$('s'),\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setCounterDisplay', ['s', !present], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.incrementSouls = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'incrementCounter', ['s'], stamps]);\n      };\n      models_actions.decrementSouls = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'decrementCounter', ['s'], stamps]);\n      };\n      models_actions.setRulerMaxLength = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.rulerMaxLength,\n          R.defaultTo(0),\n          (value) => {\n            return promptService\n              .prompt('prompt', 'Set ruler max length :', value)\n              .catch(R.always(null));\n          },\n          (value) => {\n            value = (value === 0) ? null : value;\n\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setRulerMaxLength', [value], stamps]);\n          }\n        )(state.game.models);\n      };\n      models_actions.setChargeMaxLength = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.chargeMaxLength,\n          (value) => {\n            return promptService\n              .prompt('prompt', 'Set charge max length :', value)\n              .catch(R.always(null));\n          },\n          (value) => {\n            value = (value === 0) ? null : value;\n\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setChargeMaxLength',\n                                             [state.factions, value],\n                                             stamps\n                                           ]);\n          }\n        )(state.game.models);\n      };\n      models_actions.setPlaceMaxLength = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.placeMaxLength,\n          R.defaultTo(0),\n          (value) => {\n            return promptService\n              .prompt('prompt','Set place max length :', value)\n              .catch(R.always(null));\n          },\n          (value) => {\n            value = (value === 0) ? null : value;\n\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setPlaceMaxLength',\n                                             [state.factions, value],\n                                             stamps\n                                           ]);\n          }\n        )(state.game.models);\n      };\n      models_actions.togglePlaceWithin = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.placeWithin,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setPlaceWithin',\n                                             [state.factions, !present],\n                                             stamps\n                                           ]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleLeaderDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isLeaderDisplayed,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setLeaderDisplay', [!present], stamps ]);\n          }\n        )(state.game.models);\n      };\n      models_actions.toggleIncorporealDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isIncorporealDisplayed,\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setIncorporealDisplay', [!present], stamps ]);\n          }\n        )(state.game.models);\n      };\n      let effects = [\n        [ 'Blind', 'b' ],\n        [ 'Corrosion', 'c' ],\n        [ 'Disrupt', 'd' ],\n        [ 'Fire', 'f' ],\n        [ 'Fleeing', 'e' ],\n        [ 'KD', 'k' ],\n        [ 'Stationary', 't' ],\n      ];\n      R.forEach(([effect, flag]) => {\n        models_actions['toggle'+effect+'EffectDisplay'] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          return R.pipeP(\n            gameModelsService.findStamp$(stamps[0]),\n            modelService.isEffectDisplayed$(flag),\n            (present) => {\n              return state.event('Game.command.execute',\n                                 'onModels', [ 'setEffectDisplay', [flag, !present], stamps]);\n            }\n          )(state.game.models);\n        };\n      }, effects);\n      let auras = [\n        [ 'Red', '#F00' ],\n        [ 'Green', '#0F0' ],\n        [ 'Blue', '#00F' ],\n        [ 'Yellow', '#FF0' ],\n        [ 'Purple', '#F0F' ],\n        [ 'Cyan', '#0FF' ],\n      ];\n      R.forEach(([aura, hex]) => {\n        models_actions['toggle'+aura+'AuraDisplay'] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          return R.pipeP(\n            gameModelsService.findStamp$(stamps[0]),\n            modelService.auraDisplay,\n            (present) => {\n              return state.event('Game.command.execute',\n                                 'onModels', [ 'setAuraDisplay',\n                                               [(present === hex) ? null : hex],\n                                               stamps\n                                             ]);\n            }\n          )(state.game.models);\n        };\n      }, auras);\n      models_actions.toggleCtrlAreaDisplay = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          modelService.isCtrlAreaDisplayed$(state.factions),\n          (present) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ 'setCtrlAreaDisplay', [!present], stamps]);\n          }\n        )(state.game.models);\n      };\n      let areas = R.range(0, 10);\n      R.forEach((area) => {\n        let size = area === 0 ? 10 : area;\n        models_actions['toggle'+size+'InchesAreaDisplay'] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          return R.pipeP(\n            gameModelsService.findStamp$(stamps[0]),\n            (model) => {\n              let present = modelService.areaDisplay(model);\n\n              return state.event('Game.command.execute',\n                                 'onModels', [ 'setAreaDisplay',\n                                               [(present === size) ? null : size],\n                                               stamps\n                                             ]);\n            }\n          )(state.game.models);\n        };\n        let big_size = size + 10;\n        models_actions['toggle'+big_size+'InchesAreaDisplay'] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          return R.pipeP(\n            gameModelsService.findStamp$(stamps[0]),\n            (model) => {\n              let present = modelService.areaDisplay(model);\n\n              return state.event('Game.command.execute',\n                                 'onModels', [ 'setAreaDisplay',\n                                               [(present === big_size) ? null : big_size],\n                                               stamps\n                                             ]);\n              }\n            )(state.game.models);\n          };\n      }, areas);\n      let moves = [\n        ['moveFront', 'up'],\n        ['moveBack', 'down'],\n        ['rotateLeft', 'left'],\n        ['rotateRight', 'right'],\n      ];\n      R.forEach(([move, key]) => {\n        key = key;\n        models_actions[move] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          return state.event('Game.command.execute',\n                             'onModels', [ move, [state.factions, false], stamps ]);\n        };\n        models_actions[move+'Small'] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          return state.event('Game.command.execute',\n                             'onModels', [ move, [state.factions, true], stamps ]);\n        };\n      }, moves);\n      let shifts = [\n        ['shiftUp', 'ctrl+up', 'shiftDown'],\n        ['shiftDown', 'ctrl+down', 'shiftUp'],\n        ['shiftLeft', 'ctrl+left', 'shiftRight'],\n        ['shiftRight', 'ctrl+right', 'shiftLeft'],\n      ];\n      R.forEach(([shift, key, flip_shift]) => {\n        key = key;\n        models_actions[shift] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          let model_shift = ( R.path(['ui_state', 'flip_map'], state) ?\n                              flip_shift :\n                              shift\n                            );\n          return state.event('Game.command.execute',\n                             'onModels', [ model_shift, [state.factions, false], stamps ]);\n        };\n        models_actions[shift+'Small'] = (state) => {\n          let stamps = gameModelSelectionService\n                .get('local', state.game.model_selection);\n          let model_shift = ( R.path(['ui_state', 'flip_map'], state) ?\n                              flip_shift :\n                              shift\n                            );\n          return state.event('Game.command.execute',\n                             'onModels', [ model_shift, [state.factions, true], stamps ]);\n        };\n      }, shifts);\n      models_actions.setOrientationUp = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        let orientation = state.ui_state.flip_map ? 180 : 0;\n        state.event('Game.command.execute',\n                    'onModels', [ 'setOrientation',\n                                  [state.factions, orientation],\n                                  stamps\n                                ]);\n      };\n      models_actions.setOrientationDown = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        let orientation = state.ui_state.flip_map ? 0 : 180;\n        state.event('Game.command.execute',\n                    'onModels', [ 'setOrientation',\n                                  [state.factions, orientation],\n                                  stamps\n                                ]);\n      };\n      models_actions.setTargetModel = (state, event) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'orientTo',\n                                         [state.factions, event['click#'].target],\n                                         stamps\n                                       ]);\n      };\n\n      (() => {\n        let drag_charge_target;\n        let drag_models_start_states;\n        let drag_models_start_selection;\n        models_actions.dragStartModel = (state, event) => {\n          let stamp = event.target.state.stamp;\n          return R.pipePromise(\n            () => {\n              let in_selection = gameModelSelectionService\n                    .in('local', stamp, state.game.model_selection);\n              if(in_selection) return null;\n\n              return state.event('Game.command.execute',\n                                 'setModelSelection', ['set', [stamp]]);\n            },\n            () => {\n              return gameModelSelectionService\n                .get('local', state.game.model_selection);\n            },\n            (stamps) => {\n              return gameModelsService\n                .findAnyStamps(stamps, state.game.models);\n            },\n            R.reject(R.isNil),\n            (models) => {\n              drag_charge_target = null;\n              if(R.length(models) === 1) {\n                R.pipeP(\n                  modelService.chargeTarget,\n                  (target_stamp) => {\n                    return gameModelsService\n                      .findStamp(target_stamp, state.game.models);\n                  },\n                  (target_model) => {\n                    drag_charge_target = target_model;\n                  }\n                )(models[0]);\n              }\n              return models;\n            },\n            (models) => {\n              drag_models_start_selection = models;\n\n              return R.map(modelService.saveState, models);\n            },\n            (states) => {\n              drag_models_start_states = states;\n\n              return models_actions.dragModel(state, event);\n            }\n          )();\n        };\n        defaultModeService.actions.dragStartModel = models_actions.dragStartModel;\n        models_actions.dragModel = (state, event) => {\n          return R.pipePromise(\n            R.addIndex(R.map)((model, index) => {\n              let pos = {\n                x: drag_models_start_states[index].x + event.now.x - event.start.x,\n                y: drag_models_start_states[index].y + event.now.y - event.start.y\n              };\n              return modelService\n                .setPosition_(state.factions, drag_charge_target, pos, model);\n            }),\n            R.promiseAll,\n            R.forEach((model) => {\n              state.changeEvent(`Game.model.change.${model.state.stamp}`);\n            })\n          )(drag_models_start_selection);\n        };\n        models_actions.dragEndModel = (state, event) => {\n          return R.pipePromise(\n            R.addIndex(R.map)((model, index) => {\n              return modelService\n                .setPosition_(state.factions, drag_charge_target,\n                             drag_models_start_states[index], model);\n            }),\n            R.promiseAll,\n            R.map(R.path(['state','stamp'])),\n            (stamps) => {\n              let shift = {\n                x: event.now.x - event.start.x,\n                y: event.now.y - event.start.y\n              };\n              return state.event('Game.command.execute',\n                                 'onModels', [ 'shiftPosition',\n                                               [state.factions, drag_charge_target, shift],\n                                               stamps\n                                             ]);\n            }\n          )(drag_models_start_selection);\n        };\n      })();\n\n      models_actions.copySelection = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.copyStamps$(stamps),\n          (copy) => {\n            return state.event('Game.model.copy', copy);\n          }\n        )(state.game.models);\n      };\n      models_actions.clearLabel = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return state.event('Game.command.execute',\n                           'onModels', [ 'clearLabel', [], stamps]);\n      };\n      \n      let models_default_bindings = {\n        'clickMap': 'clickMap',\n        'rightClickMap': 'rightClickMap',\n        'deleteSelection': 'del',\n        'copySelection': 'ctrl+c',\n        'toggleLock': 'l',\n        'toggleImageDisplay': 'alt+i',\n        'setNextImage': 'shift+i',\n        'toggleWreckDisplay': 'alt+w',\n        'setOrientationUp': 'pageup',\n        'setOrientationDown': 'pagedown',\n        'setTargetModel': 'shift+clickModel',\n        'toggleCounterDisplay': 'alt+n',\n        'incrementCounter': '+',\n        'decrementCounter': '-',\n        'toggleSoulsDisplay': 'alt+o',\n        'incrementSouls': 'ctrl++',\n        'decrementSouls': 'ctrl+-',\n        'toggleCtrlAreaDisplay': 'alt+a',\n        'setRulerMaxLength': 'shift+r',\n        'setChargeMaxLength': 'shift+c',\n        'setPlaceMaxLength': 'shift+p',\n        'togglePlaceWithin': 'alt+p',\n        'toggleMeleeDisplay': 'alt+m',\n        'toggleReachDisplay': 'alt+r',\n        'toggleStrikeDisplay': 'alt+s',\n        'toggleUnitDisplay': 'alt+u',\n        'setUnit': 'shift+u',\n        'toggleLeaderDisplay': 'alt+l',\n        'toggleIncorporealDisplay': 'alt+g',\n        'clearLabel': 'ctrl+shift+l'\n      };\n      R.forEach(([move, keys]) => {\n        models_default_bindings[move] = keys;\n        models_default_bindings[move+'Small'] = 'shift+'+keys;\n      }, moves);\n      R.forEach(([shift, keys]) => {\n        models_default_bindings[shift] = keys;\n        models_default_bindings[shift+'Small'] = 'shift+'+keys;\n      }, shifts);\n      R.forEach((area) => {\n        let size = area === 0 ? 10 : area;\n        models_default_bindings['toggle'+size+'InchesAreaDisplay'] = 'alt+'+area;\n        size += 10;\n        models_default_bindings['toggle'+size+'InchesAreaDisplay'] = 'alt+shift+'+area;\n      }, areas);\n      R.addIndex(R.forEach)(([aura], index) => {\n        models_default_bindings['toggle'+aura+'AuraDisplay'] = 'ctrl+'+(index+1);\n      }, auras);\n      R.forEach(([effect, keys]) => {\n        models_default_bindings['toggle'+effect+'EffectDisplay'] = 'alt+'+keys;\n      }, effects);\n      let models_bindings = R.extend(Object.create(defaultModeService.bindings),\n                                     models_default_bindings);\n\n      let models_buttons = buildModelsModesButtons();\n      let models_mode = {\n        onEnter: () => { },\n        onLeave: () => { },\n        name: 'Models',\n        actions: models_actions,\n        buttons: models_buttons,\n        buildButtons: buildModelsModesButtons,\n        bindings: models_bindings,\n        areas: areas,\n        auras: auras,\n        effects: effects\n      };\n      modesService.registerMode(models_mode);\n      settingsService.register('Bindings',\n                               models_mode.name,\n                               models_default_bindings,\n                               (bs) => {\n                                 R.extend(models_mode.bindings, bs);\n                               });\n\n      function buildModelsModesButtons({ single,\n                                         start_charge, end_charge,\n                                         start_place, end_place\n                                       } = {}) {\n        let ret = [\n          [ 'Delete', 'deleteSelection' ],\n          [ 'Copy', 'copySelection' ],\n          [ 'Lock', 'toggleLock' ],\n          [ 'Ruler Max Len.', 'setRulerMaxLength' ],\n          [ 'Clear Label', 'clearLabel' ],\n          [ 'Image', 'toggle', 'image' ],\n          [ 'Show/Hide', 'toggleImageDisplay', 'image' ],\n          [ 'Next', 'setNextImage', 'image' ],\n          [ 'Wreck', 'toggleWreckDisplay', 'image' ],\n          [ 'Orient.', 'toggle', 'orientation' ],\n          [ 'Face Up', 'setOrientationUp', 'orientation' ],\n          [ 'Face Down', 'setOrientationDown', 'orientation' ],\n          [ 'Counter', 'toggle', 'counter' ],\n          [ 'Show/Hide', 'toggleCounterDisplay', 'counter' ],\n          [ 'Inc.', 'incrementCounter', 'counter' ],\n          [ 'Dec.', 'decrementCounter', 'counter' ],\n          [ 'Souls', 'toggle', 'souls' ],\n          [ 'Show/Hide', 'toggleSoulsDisplay', 'souls' ],\n          [ 'Inc.', 'incrementSouls', 'souls' ],\n          [ 'Dec.', 'decrementSouls', 'souls' ],\n          [ 'Melee', 'toggle', 'melee' ],\n          [ '0.5\"', 'toggleMeleeDisplay', 'melee' ],\n          [ 'Reach', 'toggleReachDisplay', 'melee' ],\n          [ 'Strike', 'toggleStrikeDisplay', 'melee' ],\n        ];\n        if(single) {\n          ret = R.concat(ret, [ [ 'Templates', 'toggle', 'templates' ],\n                                [ 'AoE', 'createAoEOnModel', 'templates' ],\n                                [ 'Spray', 'createSprayOnModel', 'templates' ],\n                              ]);\n        }\n        ret = R.append([ 'Areas', 'toggle', 'areas' ], ret);\n        ret = R.append([ 'CtrlArea', 'toggleCtrlAreaDisplay', 'areas' ], ret);\n        ret = R.concat(ret, R.map((area) => {\n          let size = area + 1;\n          return [ size+'\"', 'toggle'+size+'InchesAreaDisplay', 'areas' ];\n        }, areas));\n        ret = R.concat(ret, R.map((area) => {\n          let size = area + 11;\n          return [ size+'\"', 'toggle'+size+'InchesAreaDisplay', 'areas' ];\n        }, areas));\n        ret = R.append([ 'Auras', 'toggle', 'auras' ], ret);\n        ret = R.concat(ret, R.map(([aura]) => {\n          return [ aura, 'toggle'+aura+'AuraDisplay', 'auras' ];\n        }, auras));\n        ret = R.append([ 'Effects', 'toggle', 'effects' ], ret);\n        ret = R.concat(ret, R.map(([effect]) => {\n          return [ effect, 'toggle'+effect+'EffectDisplay', 'effects' ];\n        }, effects));\n        ret = R.append([ 'Incorp.', 'toggleIncorporealDisplay', 'effects' ], ret);\n        ret = R.append([ 'Charge', 'toggle', 'charge' ], ret);\n        if(start_charge) {\n          ret = R.append([ 'Start', 'startCharge', 'charge' ], ret);\n        }\n        if(end_charge) {\n          ret = R.append([ 'End', 'endCharge', 'charge' ], ret);\n        }\n        ret = R.append([ 'Max Len.', 'setChargeMaxLength', 'charge' ], ret);\n        ret = R.append([ 'Place', 'toggle', 'place' ], ret);\n        if(start_place) {\n          ret = R.append([ 'Start', 'startPlace', 'place' ], ret);\n        }\n        if(end_place) {\n          ret = R.append([ 'End', 'endPlace', 'place' ], ret);\n        }\n        ret = R.append([ 'Max Len.', 'setPlaceMaxLength', 'place' ], ret);\n        ret = R.append([ 'Within', 'togglePlaceWithin', 'place' ], ret);\n        ret = R.concat(ret, [ [ 'Unit', 'toggle', 'unit' ],\n                              [ 'Show/Hide', 'toggleUnitDisplay', 'unit' ],\n                              [ 'Set #', 'setUnit', 'unit' ],\n                              [ 'Leader', 'toggleLeaderDisplay', 'unit' ],\n                            ]);\n        if(single) {\n          ret = R.append([ 'Select All', 'selectAllUnit', 'unit' ], ret);\n          ret = R.append([ 'Select Friends', 'selectAllFriendly' ], ret);\n        }\n\n        return ret;\n      }\n      \n      return models_mode;\n    }\n  ]);\n"]}