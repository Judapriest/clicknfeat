{"version":3,"sources":["../../../es6/services/modes/createModel.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,OAAO,CAAC,iBAAiB,EAAE,CAC1B,OAAO,EACP,UAAU,EACV,YAAY,EACZ,MAAM,EACN,SAAS,6BAA6B,CAAC,YAAY,EACZ,eAAe,EACf,iBAAiB,EAAE;AACxD,MAAI,mBAAmB,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AACnE,WAAS,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE;AACtC,SAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CACnB,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,MAAM,CAAC,CAAC,EAC5B,CAAC,CAAC,IAAI,CACJ,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,EACrB,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CACtB,EACD,KAAK,CAAC,MAAM,CACb,CAAC;GACH;AACD,qBAAmB,CAAC,OAAO,GAAG,UAAC,KAAK,EAAE,KAAK,EAAK;AAC9C,oBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC/B,WAAO,KAAK,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;GAChD,CAAC;AACF,qBAAmB,CAAC,MAAM,GAAG,UAAC,KAAK,EAAE,KAAK,EAAK;AAC7C,QAAI,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,EAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;AACxD,oBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;AACzC,WAAO,KAAK,CAAC,KAAK,CAAC,sBAAsB,EACtB,aAAa,EAAE,CAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAE,CAAC,CAAC;GAEvE,CAAC;AACF,MAAI,4BAA4B,GAAG;AACjC,YAAQ,EAAE,UAAU;GACrB,CAAC;AACF,MAAI,oBAAoB,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EACzC,4BAA4B,CAAC,CAAC;AAClE,MAAI,mBAAmB,GAAG,EAAE,CAAC;AAC7B,MAAI,gBAAgB,GAAG;AACrB,WAAO,EAAE,iBAAC,KAAK,EAAK;AAClB,WAAK,CAAC,WAAW,CAAC,0BAA0B,CAAC,CAAC;AAC9C,WAAK,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;KAC1C;AACD,WAAO,EAAE,iBAAC,KAAK,EAAK;AAClB,WAAK,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;AAC1B,WAAK,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;AAC1C,WAAK,CAAC,WAAW,CAAC,2BAA2B,CAAC,CAAC;KAChD;AACD,QAAI,EAAE,aAAa;AACnB,WAAO,EAAE,mBAAmB;AAC5B,WAAO,EAAE,mBAAmB;AAC5B,YAAQ,EAAE,oBAAoB;GAC/B,CAAC;AACF,cAAY,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;AAC5C,iBAAe,CAAC,QAAQ,CAAC,UAAU,EACV,gBAAgB,CAAC,IAAI,EACrB,4BAA4B,EAC5B,UAAC,EAAE,EAAK;AACN,KAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;GACzC,CAAC,CAAC;AAC5B,SAAO,gBAAgB,CAAC;CACzB,CACF,CAAC,CAAC","file":"createModel.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('createModelMode', [\n    'modes',\n    'settings',\n    'commonMode',\n    'game',\n    function createModelModeServiceFactory(modesService,\n                                           settingsService,\n                                           commonModeService) {\n      var createModel_actions = Object.create(commonModeService.actions);\n      function updateCreateBase(coord, state) {\n        state.create = R.over(\n          R.lensPath(['model','base']),\n          R.pipe(\n            R.assoc('x', coord.x),\n            R.assoc('y', coord.y)\n          ),\n          state.create\n        );\n      }\n      createModel_actions.moveMap = (state, coord) => {\n        updateCreateBase(coord, state);\n        return state.changeEvent('Game.create.update');\n      };\n      createModel_actions.create = (state, event) => {\n        let is_flipped = R.path(['ui_state','flip_map'], state);\n        updateCreateBase(event['click#'], state);\n        return state.event('Game.command.execute',\n                           'createModel', [ state.create.model, is_flipped ]);\n                           \n      };\n      var createModel_default_bindings = {\n        'create': 'clickMap'\n      };\n      var createModel_bindings = R.extend(Object.create(commonModeService.bindings),\n                                          createModel_default_bindings);\n      var createModel_buttons = [];\n      var createModel_mode = {\n        onEnter: (state) => {\n          state.changeEvent('Game.model.create.enable');\n          state.changeEvent('Game.moveMap.enable');\n        },\n        onLeave: (state) => {\n          state.create.model = null;\n          state.changeEvent('Game.moveMap.disable');\n          state.changeEvent('Game.model.create.disable');\n        },\n        name: 'CreateModel',\n        actions: createModel_actions,\n        buttons: createModel_buttons,\n        bindings: createModel_bindings\n      };\n      modesService.registerMode(createModel_mode);\n      settingsService.register('Bindings',\n                               createModel_mode.name,\n                               createModel_default_bindings,\n                               (bs) => {\n                                 R.extend(createModel_mode.bindings, bs);\n                               });\n      return createModel_mode;\n    }\n  ]);\n"]}