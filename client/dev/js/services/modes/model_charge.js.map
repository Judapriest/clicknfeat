{"version":3,"sources":["../../../es6/services/modes/model_charge.js"],"names":[],"mappings":"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","file":"model_charge.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelChargeMode', [\n    'modes',\n    'settings',\n    'modelsMode',\n    'modelBaseMode',\n    'model',\n    'game',\n    'gameModels',\n    'gameModelSelection',\n    function modelChargeModeServiceFactory(modesService,\n                                           settingsService,\n                                           modelsModeService,\n                                           modelBaseModeService,\n                                           modelService,\n                                           gameService,\n                                           gameModelsService,\n                                           gameModelSelectionService) {\n      let charge_actions = Object.create(modelBaseModeService.actions);\n      charge_actions.endCharge = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipePromise(\n          () => {\n            return state.event('Game.command.execute',\n                               'onModels', ['endCharge', [], stamps]);\n          },\n          () => {\n            return state.event('Modes.switchTo', 'Model');\n          }\n        )();\n      };\n      charge_actions.setTargetModel = (state, event) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          (model) => {\n            return R.pipeP(\n              () => {\n                return modelService\n                  .chargeTarget(model)\n                  .catch(R.always(null));\n              },\n              (target_stamp) => {\n                return ( target_stamp === event['click#'].target.state.stamp ?\n                         null :\n                         event['click#'].target\n                       );\n              },\n              (set_target) => {\n                if(R.exists(set_target) &&\n                   model.state.stamp === set_target.state.stamp) return null;\n\n                return state.event('Game.command.execute',\n                                   'onModels', [ 'setChargeTarget',\n                                                  [state.factions, set_target],\n                                                 stamps\n                                               ]);\n              }\n            )();\n          }\n        )(state.game.models);\n      };\n      let moves = [\n        ['moveFront', 'up', 'moveFront'],\n        ['moveBack', 'down', 'moveBack'],\n        ['rotateLeft', 'left', 'rotateLeft'],\n        ['rotateRight', 'right', 'rotateRight'],\n        ['shiftUp', 'ctrl+up', 'shiftDown'],\n        ['shiftDown', 'ctrl+down', 'shiftUp'],\n        ['shiftLeft', 'ctrl+left', 'shiftRight'],\n        ['shiftRight', 'ctrl+right', 'shiftLeft'],\n      ];\n      var buildChargeMove$ = R.curry((move, flip_move, small, state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        let _move = ( R.path(['ui_state','flip_map'], state) ?\n                      flip_move :\n                      move\n                    );\n        return R.pipeP(\n          gameModelsService.findStamp$(stamps[0]),\n          (model) => {\n            return modelService\n              .chargeTarget(model)\n              .catch(R.always(null));\n          },\n          (target_stamp) => {\n            return ( R.exists(target_stamp) ?\n                     gameModelsService.findStamp(target_stamp, state.game.models) :\n                     null\n                   );\n          },\n          (target_model) => {\n            return state.event('Game.command.execute',\n                               'onModels', [ _move+'Charge',\n                                             [state.factions, target_model, small],\n                                             stamps\n                                           ]);\n          }\n        )(state.game.models);\n      });\n      R.forEach(([move, keys, flip_move]) => {\n        keys = keys;\n        charge_actions[move] = buildChargeMove$(move, flip_move, false);\n        charge_actions[move+'Small'] = buildChargeMove$(move, flip_move, true);\n      }, moves);\n\n      let charge_default_bindings = {\n        'endCharge': 'c',\n        'setTargetModel': 'shift+clickModel'\n      };\n      let charge_bindings = R.extend(Object.create(modelBaseModeService.bindings),\n                                     charge_default_bindings);\n      let charge_buttons = modelsModeService.buildButtons({ single: true,\n                                                            end_charge: true\n                                                          });\n      let charge_mode = {\n        onEnter: () => { },\n        onLeave: () => { },\n        name: 'ModelCharge',\n        actions: charge_actions,\n        buttons: charge_buttons,\n        bindings: charge_bindings\n      };\n      modesService.registerMode(charge_mode);\n      settingsService.register('Bindings',\n                               charge_mode.name,\n                               charge_default_bindings,\n                               (bs) => {\n                                 R.extend(charge_mode.bindings, bs);\n                               });\n      return charge_mode;\n    }\n  ]);\n"]}