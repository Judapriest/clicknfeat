{"version":3,"sources":["../../../es6/services/modes/createTemplate.js"],"names":[],"mappings":";;AAAA,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,OAAO,CAAC,oBAAoB,EAAE,CAC7B,OAAO,EACP,UAAU,EACV,YAAY,EACZ,MAAM,EACN,SAAS,gCAAgC,CAAC,YAAY,EACZ,eAAe,EACf,iBAAiB,EAAE;AAC3D,MAAI,sBAAsB,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AACtE,WAAS,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE;AACtC,SAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CACnB,CAAC,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAC,MAAM,CAAC,CAAC,EAC/B,CAAC,CAAC,IAAI,CACJ,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,EACrB,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CACtB,EACD,KAAK,CAAC,MAAM,CACb,CAAC;GACH;AACD,wBAAsB,CAAC,OAAO,GAAG,UAAC,KAAK,EAAE,KAAK,EAAK;AACjD,oBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC/B,WAAO,KAAK,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;GAChD,CAAC;AACF,wBAAsB,CAAC,MAAM,GAAG,UAAC,KAAK,EAAE,KAAK,EAAK;AAChD,QAAI,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,EAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;AACxD,oBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;AACzC,WAAO,KAAK,CAAC,KAAK,CAAC,sBAAsB,EACtB,gBAAgB,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;GAC3E,CAAC;AACF,MAAI,+BAA+B,GAAG;AACpC,UAAM,EAAE,UAAU;GACnB,CAAC;AACF,MAAI,uBAAuB,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EACzC,+BAA+B,CAAC,CAAC;AACxE,MAAI,sBAAsB,GAAG,EAAE,CAAC;AAChC,MAAI,mBAAmB,GAAG;AACxB,WAAO,EAAE,iBAAC,KAAK,EAAK;AAClB,WAAK,CAAC,WAAW,CAAC,6BAA6B,CAAC,CAAC;AACjD,WAAK,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;KAC1C;AACD,WAAO,EAAE,SAAS,qBAAqB,CAAC,KAAK,EAAE;AAC7C,WAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;AACvD,WAAK,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;AAC1C,WAAK,CAAC,WAAW,CAAC,8BAA8B,CAAC,CAAC;KACnD;AACD,QAAI,EAAE,gBAAgB;AACtB,WAAO,EAAE,sBAAsB;AAC/B,WAAO,EAAE,sBAAsB;AAC/B,YAAQ,EAAE,uBAAuB;GAClC,CAAC;AACF,cAAY,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;AAC/C,iBAAe,CAAC,QAAQ,CAAC,UAAU,EACV,mBAAmB,CAAC,IAAI,EACxB,+BAA+B,EAC/B,UAAC,EAAE,EAAK;AACN,KAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;GAC5C,CAAC,CAAC;AAC5B,SAAO,mBAAmB,CAAC;CAC5B,CACF,CAAC,CAAC","file":"createTemplate.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('createTemplateMode', [\n    'modes',\n    'settings',\n    'commonMode',\n    'game',\n    function createTemplateModeServiceFactory(modesService,\n                                              settingsService,\n                                              commonModeService) {\n      var createTemplate_actions = Object.create(commonModeService.actions);\n      function updateCreateBase(coord, state) {\n        state.create = R.over(\n          R.lensPath(['template','base']),\n          R.pipe(\n            R.assoc('x', coord.x),\n            R.assoc('y', coord.y)\n          ),\n          state.create\n        );\n      }\n      createTemplate_actions.moveMap = (state, coord) => {\n        updateCreateBase(coord, state);\n        return state.changeEvent('Game.create.update');\n      };\n      createTemplate_actions.create = (state, event) => {\n        let is_flipped = R.path(['ui_state','flip_map'], state);\n        updateCreateBase(event['click#'], state);\n        return state.event('Game.command.execute',\n                           'createTemplate', [state.create.template, is_flipped]);\n      };\n      var createTemplate_default_bindings = {\n        create: 'clickMap'\n      };\n      var createTemplate_bindings = R.extend(Object.create(commonModeService.bindings),\n                                             createTemplate_default_bindings);\n      var createTemplate_buttons = [];\n      var createTemplate_mode = {\n        onEnter: (state) => {\n          state.changeEvent('Game.template.create.enable');\n          state.changeEvent('Game.moveMap.enable');\n        },\n        onLeave: function createTemplateOnLeave(state) {\n          state.create = R.assoc('template', null, state.create);\n          state.changeEvent('Game.moveMap.disable');\n          state.changeEvent('Game.template.create.disable');\n        },\n        name: 'CreateTemplate',\n        actions: createTemplate_actions,\n        buttons: createTemplate_buttons,\n        bindings: createTemplate_bindings\n      };\n      modesService.registerMode(createTemplate_mode);\n      settingsService.register('Bindings',\n                               createTemplate_mode.name,\n                               createTemplate_default_bindings,\n                               (bs) => {\n                                 R.extend(createTemplate_mode.bindings, bs);\n                               });\n      return createTemplate_mode;\n    }\n  ]);\n"]}