{"version":3,"sources":["../../../es6/services/modes/los.js"],"names":[],"mappings":"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","file":"los.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('losMode', [\n    'modes',\n    'settings',\n    'commonMode',\n    'game',\n    'gameLos',\n    'gameModels',\n    'gameModelSelection',\n    function losModeServiceFactory(modesService,\n                                   settingsService,\n                                   commonModeService,\n                                   gameService,\n                                   gameLosService,\n                                   gameModelsService,\n                                   gameModelSelectionService) {\n      let los_actions = Object.create(commonModeService.actions);\n      los_actions.exitLosMode = commonModeService.actions.modeBackToDefault;\n      los_actions.dragStartMap = (state, drag) => {\n        return state.event('Game.update', R.lensProp('los'),\n                           gameLosService.setLocal$(drag.start, drag.now, state));\n      };\n      los_actions.dragMap = (state, drag) => {\n        return state.event('Game.update', R.lensProp('los'),\n                           gameLosService.setLocal$(drag.start, drag.now, state));\n      };\n      los_actions.dragEndMap = (state, drag) => {\n        return state.event('Game.command.execute',\n                           'setLos', ['setRemote', [drag.start, drag.now]]);\n      };\n      los_actions.dragStartTemplate = los_actions.dragStartMap;\n      los_actions.dragTemplate = los_actions.dragMap;\n      los_actions.dragEndTemplate = los_actions.dragEndMap;\n      los_actions.dragStartModel = los_actions.dragStartMap;\n      los_actions.dragModel = los_actions.dragMap;\n      los_actions.dragEndModel = los_actions.dragEndMap;\n      los_actions.setOriginModel = (state, event) => {\n        return state.event('Game.command.execute',\n                           'setLos', ['setOrigin', [event['click#'].target]]);\n      };\n      los_actions.setTargetModel = (state, event) => {\n        return state.event('Game.command.execute',\n                           'setLos', ['setTarget', [event['click#'].target]]);\n      };\n      los_actions.toggleIgnoreModel = (state, event) => {\n        return state.event('Game.command.execute',\n                           'setLos', ['toggleIgnoreModel', [event['click#'].target]]);\n      };\n      let los_default_bindings = {\n        exitLosMode: 'ctrl+l',\n        toggleIgnoreModel: 'clickModel',\n        setOriginModel: 'ctrl+clickModel',\n        setTargetModel: 'shift+clickModel'\n      };\n      let los_bindings = R.extend(Object.create(commonModeService.bindings),\n                                  los_default_bindings);\n      let los_buttons = [];\n      let los_mode = {\n        onEnter: (state) => {\n          return R.pipePromise(\n            R.path(['game','model_selection']),\n            gameModelSelectionService.get$('local'),\n            (stamps) => {\n              if(R.length(stamps) !== 1) return null;\n\n              return gameModelsService\n                .findStamp(stamps[0], state.game.models)\n                .catch(R.always(null));\n            },\n            (model) => {\n              if(R.isNil(model)) return null;\n\n              return state\n                .event('Game.command.execute',\n                       'setLos', ['setOriginResetTarget', [model]]);\n            }\n          )(state);\n        },\n        onLeave: (state) => {\n          state.changeEvent('Game.los.remote.change');\n        },\n        name: 'LoS',\n        actions: los_actions,\n        buttons: los_buttons,\n        bindings: los_bindings\n      };\n      modesService.registerMode(los_mode);\n      settingsService.register('Bindings',\n                               los_mode.name,\n                               los_default_bindings,\n                               (bs) => {\n                                 R.extend(los_mode.bindings, bs);\n                               });\n      return los_mode;\n    }\n  ]);\n"]}