{"version":3,"sources":["../../../es6/services/modes/model_base.js"],"names":[],"mappings":"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","file":"model_base.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('modelBaseMode', [\n    'modes',\n    'settings',\n    'modelsMode',\n    'sprayTemplateMode',\n    'model',\n    'game',\n    'gameModels',\n    'gameModelSelection',\n    function modelBaseModeServiceFactory(modesService,\n                                         settingsService,\n                                         modelsModeService,\n                                         sprayTemplateModeService,\n                                         modelService,\n                                         gameService,\n                                         gameModelsService,\n                                         gameModelSelectionService) {\n      let model_actions = Object.create(modelsModeService.actions);\n      model_actions.createAoEOnModel = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          () => {\n            return gameModelsService.findStamp(stamps[0], state.game.models);\n          },\n          (model) => {\n            let position = R.pick(['x','y'], model.state);\n            position.type = 'aoe';\n            let create = {\n              base: { x: 0, y: 0 },\n              templates: [position]\n            };\n            let is_flipped = R.path(['ui_state','flip_map'], state);\n            return state.event('Game.command.execute',\n                               'createTemplate', [create, is_flipped]);\n          }\n        )();\n      };\n      model_actions.createSprayOnModel = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          () => {\n            return gameModelsService.findStamp(stamps[0], state.game.models);\n          },\n          (model) =>{\n            let position = R.pick(['x','y'], model.state);\n            position.type = 'spray';\n            let create = {\n              base: { x: 0, y: 0 },\n              templates: [position]\n            };\n            let is_flipped = R.path(['ui_state','flip_map'], state);\n            return R.pipePromise(\n              () => {\n                return state.event('Game.command.execute',\n                                   'createTemplate', [create, is_flipped]);\n              },\n              () => {\n                // simulate set-origin-model in sprayTemplateMode\n                return sprayTemplateModeService.actions\n                  .setOriginModel(state, { 'click#': { target: model } });\n              }\n            )();\n          }\n        )();\n      };\n      model_actions.selectAllFriendly = (state) => {\n        let selection = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(selection[0]),\n          (model) => {\n            let stamps = R.pipe(\n              gameModelsService.all,\n              R.filter(modelService.userIs$(modelService.user(model))),\n              R.map(modelService.stamp)\n            )(state.game.models);\n\n            return state.event('Game.command.execute',\n                               'setModelSelection', ['set', stamps]);\n          }\n        )(state.game.models);\n      };\n      model_actions.selectAllUnit = (state) => {\n        let selection = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          gameModelsService.findStamp$(selection[0]),\n          (model) => {\n            let unit = modelService.unit(model);\n            if(R.isNil(unit)) {\n              return self.Promise.reject('Model not in unit');\n            }\n            \n            let stamps = R.pipe(\n              gameModelsService.all,\n              R.filter(modelService.userIs$(modelService.user(model))),\n              R.filter(modelService.unitIs$(unit)),\n              R.map(modelService.stamp)\n            )(state.game.models);\n            \n            return state.event('Game.command.execute',\n                               'setModelSelection', ['set', stamps]);\n          }\n        )(state.game.models);\n      };\n      model_actions.setB2B = (state, event) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          () => {\n            return gameModelsService.findStamp(stamps[0], state.game.models);\n          },\n          (model) => {\n            if(model.state.stamp === event['click#'].target.state.stamp) return null;\n            \n            return state.event('Game.command.execute',\n                               'onModels', [ 'setB2B',\n                                             [state.factions, event['click#'].target],\n                                             stamps\n                                           ]);\n          }\n        )();\n      };\n      model_actions.openEditLabel = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          () => {\n            return gameModelsService.findStamp(stamps[0], state.game.models);\n          },\n          (model) => {\n            state.changeEvent('Game.editLabel.open', model);\n          }\n        )();\n      };\n      model_actions.openEditDamage = (state) => {\n        let stamps = gameModelSelectionService\n              .get('local', state.game.model_selection);\n        return R.pipeP(\n          () => {\n            return gameModelsService.findStamp(stamps[0], state.game.models);\n          },\n          (model) => {\n            state.changeEvent('Game.editDamage.toggle', model);\n          }\n        )();\n      };\n\n      let model_default_bindings = {\n        'createAoEOnModel': 'ctrl+a',\n        'createSprayOnModel': 'ctrl+s',\n        'selectAllUnit': 'ctrl+u',\n        'selectAllFriendly': 'ctrl+f',\n        'setB2B': 'ctrl+shift+clickModel',\n        'openEditLabel': 'shift+l',\n        'openEditDamage': 'shift+d'\n      };\n      let model_bindings = R.extend(Object.create(modelsModeService.bindings),\n                                    model_default_bindings);\n\n      let model_mode = {\n        onEnter: () => { },\n        onLeave: () => { },\n        name: 'ModelBase',\n        actions: model_actions,\n        buttons: [],\n        bindings: model_bindings\n      };\n      settingsService.register('Bindings',\n                               model_mode.name,\n                               model_default_bindings,\n                               (bs) => {\n                                 R.extend(model_mode.bindings, bs);\n                               });\n      return model_mode;\n    }\n  ]);\n"]}