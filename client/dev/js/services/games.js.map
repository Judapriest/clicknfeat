{"version":3,"sources":["../../es6/services/games.js"],"names":[],"mappings":"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","file":"games.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('games', [\n    'localStorage',\n    'http',\n    'game',\n    function gamesServiceFactory(localStorageService,\n                                 httpService,\n                                 gameService) {\n      var LOCAL_GAMES_STORAGE_KEY = 'clickApp.games';\n      var gamesService = {\n        loadLocalGames: function gamesLoadLocalGames() {\n          return R.pipeP(\n            () => {\n              return localStorageService\n                .load(LOCAL_GAMES_STORAGE_KEY)\n                .catch(R.spy('games: Failed to load local games'));\n            },\n            R.defaultTo([]),\n            R.spyWarn('Games local load')\n          )();\n        },\n        storeLocalGames: function gamesStoreLocalGames(games) {\n          return R.pipePromise(\n            R.map(gameService.pickForJson),\n            R.spyWarn('Games local store'),\n            localStorageService.save$(LOCAL_GAMES_STORAGE_KEY)\n          )(games);\n        },\n        newLocalGame: function gamesNewLocalGame(game, games) {\n          return R.append(game, games);\n        },\n        loadLocalGame: function gamesLoadLocalGame(id, games) {\n          return new self.Promise((resolve, reject) => {\n            if(id >= R.length(games)) {\n              reject(`Unknown local game id ${id}`);\n              return;\n            }\n\n            R.pipe(\n              R.nth(id),\n              R.spyError('Games: load local game'),\n              resolve\n            )(games);\n          });\n        },\n        removeLocalGame: function gamesRemoveLocalGame(index, games) {\n          return R.remove(index, 1, games);\n        },\n        updateLocalGame: function gamesUpdateLocalGame(index, game, games) {\n          return R.update(parseInt(index), game, games);\n        },\n        newOnlineGame: function gamesNewOnlineGame(game) {\n          return R.pipePromise(\n            gameService.pickForJson,\n            R.spyWarn('upload game'),\n            httpService.post$('/api/games'),\n            R.spyWarn('upload game response')\n          )(game);\n        },\n        loadOnlineGame: function gamesLoadOnlineGame(is_private, id) {\n          var url = [\n            '/api/games',\n            (is_private ? 'private' : 'public'),\n            id\n          ].join('/');\n          return R.pipeP(\n            httpService.get,\n            R.spyError('Games: load online game')\n          )(url);\n        }\n      };\n      R.curryService(gamesService);\n      return gamesService;\n    }\n  ]);\n"]}