{"version":3,"sources":["../../es6/services/http.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,OAAO,CAAC,MAAM,EAAE,CACf,SAAS,kBAAkB,GAAG;AAC5B,WAAS,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;AACtC,WAAO,IAAI,IAAI,CAAC,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AAChD,UAAI,MAAM,GAAG,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;AACvC,YAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACzB,YAAM,CAAC,YAAY,GAAG,MAAM,CAAC;AAC7B,UAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACjB,cAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;OACnC,MACI;AACH,cAAM,CAAC,IAAI,EAAE,CAAC;OACf;AACD,YAAM,CAAC,MAAM,GAAG,SAAS,UAAU,GAAG;AACpC,YAAG,MAAM,CAAC,MAAM,IAAI,GAAG,IACpB,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;AACtB,iBAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC1B,MACI;AACH,gBAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SAC3B;OACF,CAAC;AACF,YAAM,CAAC,OAAO,GAAG,SAAS,WAAW,GAAG;AACtC,cAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;OAC3B,CAAC;KACH,CAAC,CAAC;GACJ;AACD,MAAI,WAAW,GAAG;AAChB,OAAG,EAAE,SAAS,OAAO,CAAC,GAAG,EAAE;AACzB,aAAO,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KAChC;AACD,QAAI,EAAE,SAAS,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE;AAChC,aAAO,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KACvC;AACD,OAAG,EAAE,SAAS,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE;AAC/B,aAAO,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KACtC;AACD,UAAM,EAAE,SAAS,OAAO,CAAC,GAAG,EAAE;AAC5B,aAAO,WAAW,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;KACnC;GACF,CAAC;AACF,GAAC,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;AAC5B,SAAO,WAAW,CAAC;CACpB,CACF,CAAC,CAAC","file":"http.js","sourcesContent":["'use strict';\n\nangular.module('clickApp.services')\n  .factory('http', [\n    function httpServiceFactory() {\n      function ajaxRequest(method, url, data) {\n        return new self.Promise(function(resolve, reject) {\n          var client = new self.XMLHttpRequest();\n          client.open(method, url);\n          client.responseType = 'json';\n          if(R.exists(data)) {\n            client.send(JSON.stringify(data));\n          }\n          else {\n            client.send();\n          }\n          client.onload = function ajaxOnLoad() {\n            if(client.status >= 200 &&\n               client.status < 300) {\n              resolve(client.response);\n            }\n            else {\n              reject(client.statusText);\n            }\n          };\n          client.onerror = function ajaxOnError() {\n            reject(client.statusText);\n          };\n        });\n      }\n      var httpService = {\n        get: function httpGet(url) {\n          return ajaxRequest('GET', url);\n        },\n        post: function httpGet(url, data) {\n          return ajaxRequest('POST', url, data);\n        },\n        put: function httpGet(url, data) {\n          return ajaxRequest('PUT', url, data);\n        },\n        delete: function httpGet(url) {\n          return ajaxRequest('DELETE', url);\n        },\n      };\n      R.curryService(httpService);\n      return httpService;\n    }\n  ]);\n"]}