{"version":3,"sources":["../../es6/services/geom.js"],"names":[],"mappings":";;;;AAAA,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,OAAO,CAAC,OAAO,EAAE,CAChB,SAAS,mBAAmB,GAAG;AAC7B,MAAI,YAAY,GAAG;AACjB,aAAS,EAAE,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;AAC9C,UAAI,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;AAClC,aAAO,CAAC,CAAC,IAAI,CACX,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC5C,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAC7C,CAAC,KAAK,CAAC,CAAC;KACV;AACD,YAAQ,EAAE,SAAS,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE;AAC5C,UAAI,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;AAClC,aAAO,CAAC,CAAC,IAAI,CACX,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC5C,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAC7C,CAAC,KAAK,CAAC,CAAC;KACV;AACD,cAAU,EAAE,SAAS,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE;AACjD,aAAO,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,KAAK,EAAE,KAAK,CAAC,CAAC;KAC7C;AACD,oBAAgB,EAAE,SAAS,qBAAqB,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;AACrE,UAAI,SAAS,GAAG,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACxD,UAAI,QAAQ,GAAG,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACtD,UAAI,aAAa,GAAG,SAAS,GAAG,KAAK,CAAC;AACtC,aAAO,CAAC,CAAC,IAAI,CACX,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAC3E,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAC5E,CAAC,KAAK,CAAC,CAAC;KACV;AACD,eAAW,EAAE,SAAS,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE;AACnD,aAAO,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,KAAK,EAAE,KAAK,CAAC,CAAC;KAC7C;AACD,qBAAiB,EAAE,SAAS,qBAAqB,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;AACtE,UAAI,SAAS,GAAG,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACxD,UAAI,QAAQ,GAAG,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACtD,UAAI,aAAa,GAAG,SAAS,GAAG,KAAK,CAAC;AACtC,aAAO,CAAC,CAAC,IAAI,CACX,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAC3E,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAC5E,CAAC,KAAK,CAAC,CAAC;KACV;AACD,kBAAc,EAAE,SAAS,mBAAmB,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE;AACrE,UAAI,QAAQ,GAAG,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACtD,aAAO,CAAC,CAAC,IAAI,CACX,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EACvE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CACxE,CAAC,KAAK,CAAC,CAAC;KACV;AACD,aAAS,EAAE,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;AAC9C,aAAO,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC;KAC5C;AACD,cAAU,EAAE,SAAS,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE;AAChD,aAAO,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC;KAC5C;AACD,WAAO,EAAE,SAAS,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE;AAC1C,aAAO,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC;KAC5C;AACD,aAAS,EAAE,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;AAC9C,aAAO,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC;KAC5C;AACD,cAAU,EAAE,SAAS,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE;AACjD,aAAO,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAC9B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAC/B,CAAC;KACnB;AACD,eAAW,EAAE,SAAS,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE;AACnD,aAAO,GAAG,GAAG,IAAI,CAAC,KAAK,CACrB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EACjB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAClB,GAAG,IAAI,CAAC,EAAE,CAAC;KACb;AACD,wBAAoB,EAAE,SAAS,yBAAyB,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE;AACnF,eAAS,GAAG,SAAS,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;AACtC,aAAO,CAAC,CAAC,IAAI,CACX,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EACtD,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CACvD,CAAC,KAAK,CAAC,CAAC;KACV;AACD,qBAAiB,EAAE,SAAS,sBAAsB,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE;AAC1E,aAAO,CAAC,CAAC,IAAI,CACX,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,EAC3C,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAC5C,CAAC,KAAK,CAAC,CAAC;KACV;AACD,iBAAa,EAAE,SAAS,kBAAkB,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;AAC7D,UAAI,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1B,UAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAC3B,aAAO,CAAC,CAAC,IAAI,CACX,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,EACvC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,EACvC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CACxC,CAAC,KAAK,CAAC,CAAC;KACV;AACD,kBAAc,EAAE,SAAS,mBAAmB,CAAC,KAAK,EAAE,KAAK,EAAE;AACzD,aAAO,CAAC,CAAC,IAAI,CACX,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAC/B,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAC/B,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAChC,CAAC,KAAK,CAAC,CAAC;KACV;AACD,iBAAa,EAAE,SAAS,kBAAkB,CAAC,KAAK,EAAE,KAAK,EAAE;AACvD,aAAO,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;KAC9C;AACD,iBAAa,EAAE,SAAS,kBAAkB,CAAC,KAAK,EAAE,KAAK,EAAE;AACvD,aAAO,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;KAC9C;GACF,CAAC;AACF,GAAC,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;AAC7B,SAAO,YAAY,CAAC;CACrB,CACF,CAAC,CACD,OAAO,CAAC,MAAM,EAAE,CACf,OAAO,EACP,SAAS,kBAAkB,CAAC,YAAY,EAAE;AACxC,MAAI,WAAW,GAAG;AAChB,UAAM,EAAE,SAAS,UAAU,CAAC,IAAI,EAAE;AAChC,aAAO,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KACtD;AACD,UAAM,EAAE,SAAS,UAAU,CAAC,IAAI,EAAE;AAChC,UAAI,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACtC,aAAO;AACL,SAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA,GAAI,MAAM;AACvC,SAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA,GAAI,MAAM;OACxC,CAAC;KACH;GACF,CAAC;AACF,GAAC,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;AAC5B,SAAO,WAAW,CAAC;CACpB,CACF,CAAC,CACD,OAAO,CAAC,QAAQ,EAAE,CACjB,OAAO,EACP,MAAM,EACN,SAAS,oBAAoB,CAAC,YAAY,EACZ,WAAW,EAAE;AACzC,MAAI,aAAa,GAAG;AAClB,kBAAc,EAAE,SAAS,oBAAoB,CAAE,IAAI,EAAE,MAAM,EAAE;AAC3D,UAAI,KAAK,GAAG,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC5D,UAAI,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3C,UAAI,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3C,UAAI,SAAS,GAAG,YAAY,CAAC,aAAa,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAC/D,UAAI,SAAS,GAAG,YAAY,CAAC,aAAa,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;;AAE/D,aAAO,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;KAC5C;AACD,gBAAY,EAAE,SAAS,kBAAkB,CAAC,IAAI,EAAE,MAAM,EAAE;kCAEhD,aAAa,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC;;;;UAD1C,SAAS;UAAE,SAAS;UAAE,WAAW;;AAGvC,aAAS,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,IAC9B,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,IAC9B,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,WAAW,CACxC;KACV;AACD,iBAAa,EAAE,SAAS,mBAAmB,CAAC,IAAI,EAAE,MAAM,EAAE;mCAElD,aAAa,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC;;;;UAD1C,SAAS;UAAE,SAAS;UAAE,WAAW;;AAGvC,aAAS,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,IAC9B,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,IAC9B,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,WAAW,CACxC;KACV;AACD,gBAAY,EAAE,SAAS,kBAAkB,CAAC,QAAQ,EAAE,MAAM,EAAE;AAC1D,aAAS,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,IAClD,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAClD;KACV;AACD,WAAO,EAAE,SAAS,aAAa,CAAC,GAAG,EAAE,MAAM,EAAE;AAC3C,UAAI,EAAE,EAAE,EAAE,CAAC;AACX,UAAG,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IACrB,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,IACtB,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IACrB,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC;AACvC,UAAG,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,IACrC,MAAM,CAAC,CAAC,GAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AACxB,UAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AAC1B,UAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACxD,eAAS,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAC1B,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAC3B;OACV;AACD,UAAG,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,IACtC,MAAM,CAAC,CAAC,GAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;AACzB,UAAE,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AAC3B,UAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACxD,eAAS,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAC1B,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAC3B;OACV;AACD,UAAG,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,IACrC,MAAM,CAAC,CAAC,GAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AACxB,UAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AAC1B,UAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACxD,eAAS,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAC1B,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAC3B;OACV;AACD,UAAG,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,IACtC,MAAM,CAAC,CAAC,GAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;AACzB,UAAE,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AAC3B,UAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACxD,eAAS,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAC1B,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAC3B;OACV;AACD,aAAO,KAAK,CAAC;KACd;AACD,iBAAa,EAAE,SAAS,mBAAmB,CAAC,IAAI,EAAE,MAAM,EAAE;mCAElD,aAAa,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC;;;;UAD1C,SAAS;UAAE,SAAS;UAAE,WAAW;;AAGvC,aAAS,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,MAAM,IACnC,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,IAC9B,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,WAAW,CACxC;KACV;AACD,0BAAsB,EAAE,SAAS,4BAA4B,CAAC,SAAS,EAAE,MAAM,EAAE;AAC/E,aAAO;AACL,SAAC,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,SAAS,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM;AACjE,SAAC,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,SAAS,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM;OAClE,CAAC;KACH;AACD,wBAAoB,EAAE,SAAS,0BAA0B,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;AAC7E,UAAI,QAAQ,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACtD,UAAI,SAAS,GAAG,YAAY,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACxD,UAAI,eAAe,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;AAC1E,UAAI,iBAAiB,GAAK,CAAC,IAAI,GACL,SAAS,GAAG,GAAG,GAAG,eAAe,GACjC,SAAS,GAAG,GAAG,GAAG,eAAe,AAClC,CAAC;;AAE1B,aAAO,aAAa,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;KACxE;AACD,wBAAoB,EAAE,SAAS,0BAA0B,CAAC,MAAM,EAAE,MAAM,EAAE;AACxE,UAAI,SAAS,GAAG,YAAY,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACzD,UAAI,QAAQ,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACvD,UAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3D,UAAI,eAAe,GAAG,GAAG,IAAK,IAAI,CAAC,IAAI,CAAC,YAAY,GAAC,QAAQ,CAAC,IAC/B,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC,AAC1C,GAAG,IAAI,CAAC,EAAE,CAAC;AACxC,aAAO;AACL,aAAK,EAAE,SAAS,GAAG,eAAe,GAAG,EAAE;AACvC,YAAI,EAAE,SAAS,GAAG,eAAe,GAAG,EAAE;OACvC,CAAC;KACH;AACD,cAAU,EAAE,SAAS,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE;AACpD,UAAI,UAAU,GAAG,aAAa,CAAC,oBAAoB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACpE,UAAI,OAAO,GAAG;AACZ,YAAI,EAAE;AACJ,eAAK,EAAE,aAAa,CACjB,sBAAsB,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC;AAClD,aAAG,EAAE,aAAa,CACf,sBAAsB,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC;SACnD;AACD,aAAK,EAAE;AACL,eAAK,EAAE,aAAa,CACjB,sBAAsB,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC;AACnD,aAAG,EAAE,aAAa,CACf,sBAAsB,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC;SACpD;OACF,CAAC;AACF,aAAO,OAAO,CAAC;KAChB;AACD,qBAAiB,EAAE,SAAS,uBAAuB,CAAC,MAAM,EACN,YAAY,EACZ,MAAM,EAAE;AAC1D,UAAI,UAAU,GAAG,aAAa,CAAC,oBAAoB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACpE,UAAI,QAAQ,GAAG;AACb,YAAI,EAAE,oBAAoB,CAAC,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,CAAC;AACpE,aAAK,EAAE,qBAAqB,CAAC,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,CAAC;OACvE,CAAC;AACF,cAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACzD,cAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;AAE3D,UAAI,gBAAgB,GAAG;AACrB,YAAI,EAAE;AACJ,eAAK,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;SAC1D;AACD,aAAK,EAAE;AACL,eAAK,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;SAC5D;OACF,CAAC;AACF,UAAI,cAAc,GAAG,GAAG,CAAC;AACzB,UAAI,eAAe,GAAG,GAAG,CAAC;AAC1B,UAAI,cAAc,GAAG,YAAY,CAC1B,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAClE,UAAG,cAAc,GAAG,KAAK,EAAE;AACzB,YAAI,YAAY,GAAG;AACjB,eAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG;AACxB,aAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG;SACxB,CAAC;AACF,oBAAY,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACvD,oBAAY,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;;AAEvD,YAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,EACnB,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACxE,YAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,EACnB,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AACzE,sBAAc,GAAG,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAC,IAAI,CAAC,CAAC;AAC9E,uBAAe,GAAG,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAC,IAAI,CAAC,CAAC;OAC/E;AACD,oBAAc,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AAC/C,qBAAe,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;AACjD,sBAAgB,CAAC,IAAI,CAAC,GAAG,GAAG,YAAY,CACrC,iBAAiB,CAAC,cAAc,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,EACpC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClD,sBAAgB,CAAC,KAAK,CAAC,GAAG,GAAG,YAAY,CACtC,iBAAiB,CAAC,eAAe,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,EACtC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACnD,aAAO,gBAAgB,CAAC;KACzB;GACF,CAAC;AACF,WAAS,oBAAoB,CAAC,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE;AACtE,QAAI,OAAO,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAA,GAAI,GAAG,CAAC;AACzD,QAAI,GAAG,GAAG;AACR,WAAK,EAAE,IAAI;AACX,SAAG,EAAE,IAAI;KACV,CAAC;AACF,SAAI,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,EAC7B,OAAO,GAAG,UAAU,CAAC,KAAK,EAC1B,OAAO,IAAI,OAAO,EAAE;AACtB,SAAG,CAAC,KAAK,GAAG,aAAa,CAAC,sBAAsB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAClE,SAAG,CAAC,GAAG,GAAG,aAAa,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AACtE,SAAG,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACrC,SAAG,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;AAErC,UAAI,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM,EAAK;AACnC,eAAO,aAAa,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;OACjD,EAAE,YAAY,CAAC,CAAC;;AAEjB,UAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,OAAO,GAAG,CAAC;KACrC;AACD,WAAO,GAAG,CAAC;GACZ;AACD,WAAS,qBAAqB,CAAC,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE;AACvE,QAAI,OAAO,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAA,GAAI,GAAG,CAAC;AACzD,QAAI,GAAG,GAAG;AACR,WAAK,EAAE,IAAI;AACX,SAAG,EAAE,IAAI;KACV,CAAC;AACF,SAAI,IAAI,OAAO,GAAG,UAAU,CAAC,KAAK,EAC9B,OAAO,GAAG,UAAU,CAAC,IAAI,EACzB,OAAO,IAAI,OAAO,EAAE;AACtB,SAAG,CAAC,KAAK,GAAG,aAAa,CAAC,sBAAsB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAClE,SAAG,CAAC,GAAG,GAAG,aAAa,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;AACvE,SAAG,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACrC,SAAG,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;AAErC,UAAI,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM,EAAK;AACnC,eAAO,aAAa,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;OACjD,EAAE,YAAY,CAAC,CAAC;;AAEjB,UAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,OAAO,GAAG,CAAC;KACrC;AACD,WAAO,GAAG,CAAC;GACZ;AACD,GAAC,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AAC9B,SAAO,aAAa,CAAC;CACtB,CACF,CAAC,CAAC","file":"geom.js","sourcesContent":["angular.module('clickApp.services')\n  .factory('point', [\n    function pointServiceFactory() {\n      var pointService = {\n        moveFront: function pointMoveFront(dist, point) {\n          var rad = point.r * Math.PI / 180;\n          return R.pipe(\n            R.assoc('x', point.x + dist * Math.sin(rad)),\n            R.assoc('y', point.y - dist * Math.cos(rad))\n          )(point);\n        },\n        moveBack: function pointMoveBack(dist, point) {\n          var rad = point.r * Math.PI / 180;\n          return R.pipe(\n            R.assoc('x', point.x - dist * Math.sin(rad)),\n            R.assoc('y', point.y + dist * Math.cos(rad))\n          )(point);\n        },\n        rotateLeft: function pointRotateLeft(angle, point) {\n          return R.assoc('r', point.r - angle, point);\n        },\n        rotateLeftAround: function pointRotateLeftAround(angle, center, point) {\n          var direction = pointService.directionTo(point, center);\n          var distance = pointService.distanceTo(point, center);\n          var new_direction = direction - angle;\n          return R.pipe(\n            R.assoc('x', center.x + distance * Math.sin(new_direction * Math.PI / 180)),\n            R.assoc('y', center.y - distance * Math.cos(new_direction * Math.PI / 180))\n          )(point);\n        },\n        rotateRight: function pointRotateRight(angle, point) {\n          return R.assoc('r', point.r + angle, point);\n        },\n        rotateRightAround: function pointRotateLeftAround(angle, center, point) {\n          var direction = pointService.directionTo(point, center);\n          var distance = pointService.distanceTo(point, center);\n          var new_direction = direction + angle;\n          return R.pipe(\n            R.assoc('x', center.x + distance * Math.sin(new_direction * Math.PI / 180)),\n            R.assoc('y', center.y - distance * Math.cos(new_direction * Math.PI / 180))\n          )(point);\n        },\n        rotateAroundTo: function pointRotateAroundTo(direction, center, point) {\n          var distance = pointService.distanceTo(point, center);\n          return R.pipe(\n            R.assoc('x', center.x + distance * Math.sin(direction * Math.PI / 180)),\n            R.assoc('y', center.y - distance * Math.cos(direction * Math.PI / 180))\n          )(point);\n        },\n        shiftLeft: function pointShiftLeft(dist, point) {\n          return R.assoc('x', point.x - dist, point);\n        },\n        shiftRight: function pointShiftRight(dist, point) {\n          return R.assoc('x', point.x + dist, point);\n        },\n        shiftUp: function pointShiftUp(dist, point) {\n          return R.assoc('y', point.y - dist, point);\n        },\n        shiftDown: function pointShiftDown(dist, point) {\n          return R.assoc('y', point.y + dist, point);\n        },\n        distanceTo: function pointDistanceTo(other, point) {\n          return Math.sqrt( Math.pow(other.x - point.x, 2) +\n                            Math.pow(other.y - point.y, 2)\n                          );\n        },\n        directionTo: function pointDirectionTo(other, point) {\n          return 180 * Math.atan2(\n            other.x - point.x,\n            point.y - other.y\n          ) / Math.PI;\n        },\n        translateInDirection: function pointTranslateInDirection(distance, direction, point) {\n          direction = direction * Math.PI / 180;\n          return R.pipe(\n            R.assoc('x', point.x + distance * Math.sin(direction)), \n            R.assoc('y', point.y - distance * Math.cos(direction))\n          )(point);\n        },\n        translateInVector: function pointTranslateInVector(distance, vector, point) {\n          return R.pipe(\n            R.assoc('x', point.x + distance * vector.x), \n            R.assoc('y', point.y + distance * vector.y)\n          )(point);\n        },\n        addToWithFlip: function pointAddToWithFlip(flip, other, point) {\n          var coeff = flip ? -1 : 1;\n          var phase = flip ? 180 : 0;\n          return R.pipe(\n            R.assoc('x', other.x + coeff * point.x),\n            R.assoc('y', other.y + coeff * point.y),\n            R.assoc('r', other.r + point.r + phase)\n          )(point);\n        },\n        differenceFrom: function pointDifferenceFrom(other, point) {\n          return R.pipe(\n            R.assoc('x', point.x - other.x),\n            R.assoc('y', point.y - other.y),\n            R.assoc('r', point.r - other.r)\n          )(point);\n        },\n        vectorProduct: function pointVectorProduct(other, point) {\n          return other.y * point.x - other.x * point.y;\n        },\n        scalarProduct: function pointScalarProduct(other, point) {\n          return other.x * point.x + other.y * point.y;\n        }\n      };\n      R.curryService(pointService);\n      return pointService;\n    }\n  ])\n  .factory('line', [\n    'point',\n    function lineServiceFactory(pointService) {\n      let lineService = {\n        length: function lineLength(line) {\n          return pointService.distanceTo(line.end, line.start);\n        },\n        vector: function lineVector(line) {\n          let length = lineService.length(line);\n          return {\n            x: (line.end.x - line.start.x) / length,\n            y: (line.end.y - line.start.y) / length\n          };\n        }\n      };\n      R.curryService(lineService);\n      return lineService;\n    }\n  ])\n  .factory('circle', [\n    'point',\n    'line',\n    function circleServiceFactory(pointService,\n                                  lineService) {\n      let circleService = {\n        positionToLine: function circlePositionToLine (line, circle) {\n          let delta = pointService.differenceFrom(line.start, circle);\n          let line_length = lineService.length(line);\n          let line_vector = lineService.vector(line);\n          let vect_prod = pointService.vectorProduct(line_vector, delta);\n          let scal_prod = pointService.scalarProduct(line_vector, delta);\n          \n          return [vect_prod, scal_prod, line_length];\n        },\n        isLeftOfLine: function circleIsLeftOfLine(line, circle) {\n          let [ vect_prod, scal_prod, line_length ] =\n                circleService.positionToLine(line, circle);\n\n          return ( vect_prod + circle.radius >= 0 &&\n                   scal_prod + circle.radius >= 0 &&\n                   scal_prod - circle.radius <= line_length\n                 );\n        },\n        isRightOfLine: function circleIsRightOfLine(line, circle) {\n          let [ vect_prod, scal_prod, line_length ] =\n                circleService.positionToLine(line, circle);\n          \n          return ( vect_prod - circle.radius <= 0 &&\n                   scal_prod + circle.radius >= 0 &&\n                   scal_prod - circle.radius <= line_length\n                 );\n        },\n        isInEnvelope: function circleIsInEnvelope(envelope, circle) {\n          return ( circleService.isRightOfLine(envelope.left, circle) &&\n                   circleService.isLeftOfLine(envelope.right, circle)\n                 );\n        },\n        isInBox: function circleIsInBox(box, circle) {\n          var dx, dy;\n          if(circle.x >= box.low.x &&\n             circle.x <= box.high.x &&\n             circle.y >= box.low.y &&\n             circle.y <= box.high.x) return true;\n          if(circle.x >= box.low.x - circle.radius &&\n             circle.x <  box.low.x) {\n            dx = box.low.x - circle.x;\n            dy = Math.sqrt(circle.radius * circle.radius - dx * dx);\n            return ( circle.y + dy >= box.low.y &&\n                     circle.y - dy <= box.high.y\n                   );\n          }\n          if(circle.x <= box.high.x + circle.radius &&\n             circle.x >  box.high.x) {\n            dx = box.high.x - circle.x;\n            dy = Math.sqrt(circle.radius * circle.radius - dx * dx);\n            return ( circle.y + dy >= box.low.y &&\n                     circle.y - dy <= box.high.y\n                   );\n          }\n          if(circle.y >= box.low.y - circle.radius &&\n             circle.y <  box.low.y) {\n            dy = box.low.y - circle.y;\n            dx = Math.sqrt(circle.radius * circle.radius - dy * dy);\n            return ( circle.x + dx >= box.low.x &&\n                     circle.x - dx <= box.high.x\n                   );\n          }\n          if(circle.y <= box.high.y + circle.radius &&\n             circle.y >  box.high.y) {\n            dy = box.high.y - circle.y;\n            dx = Math.sqrt(circle.radius * circle.radius - dy * dy);\n            return ( circle.x + dx >= box.low.x &&\n                     circle.x - dx <= box.high.x\n                   );\n          }\n          return false;\n        },\n        intersectLine: function circleIntersectLine(line, circle) {\n          let [ vect_prod, scal_prod, line_length ] =\n                circleService.positionToLine(line, circle);\n          \n          return ( Math.abs(vect_prod) < circle.radius &&\n                   scal_prod + circle.radius >= 0 &&\n                   scal_prod - circle.radius <= line_length\n                 );\n        },\n        pointOnEdgeInDirection: function circlePointOnEdgeInDirection(direction, circle) {\n          return {\n            x: circle.x + Math.sin(Math.PI * direction / 180) * circle.radius,\n            y: circle.y - Math.cos(Math.PI * direction / 180) * circle.radius\n          };\n        },\n        pointOnEdgeTangentTo: function circlePointOnEdgeTangentTo(point, left, circle) {\n          let distance = pointService.distanceTo(circle, point);\n          let direction = pointService.directionTo(circle, point);\n          let delta_direction = 180 * Math.acos(circle.radius / distance) / Math.PI;\n          let tangent_direction = ( !left ?\n                                    direction + 180 - delta_direction :\n                                    direction - 180 + delta_direction\n                                  );\n          \n          return circleService.pointOnEdgeInDirection(tangent_direction, circle);\n        },\n        envelopeDirectionsTo: function circleEnvelopeDirectionsTo(target, origin) {\n          let direction = pointService.directionTo(target, origin);\n          let distance = pointService.distanceTo(target, origin);\n          let delta_radius = Math.abs(origin.radius - target.radius);\n          let delta_direction = 180 * ( Math.asin(delta_radius/distance) *\n                                        (origin.radius >= target.radius ? 1 : -1)\n                                      ) / Math.PI;\n          return {\n            right: direction - delta_direction + 90,\n            left: direction + delta_direction - 90\n          };\n        },\n        envelopeTo: function circleEnvelopeTo(target, origin) {\n          let directions = circleService.envelopeDirectionsTo(target, origin);\n          let envelop = {\n            left: {\n              start: circleService\n                .pointOnEdgeInDirection(directions.left, origin),\n              end: circleService\n                .pointOnEdgeInDirection(directions.left, target)\n            },\n            right: {\n              start: circleService\n                .pointOnEdgeInDirection(directions.right, origin),\n              end: circleService\n                .pointOnEdgeInDirection(directions.right, target)\n            }\n          };\n          return envelop;\n        },\n        outsideEnvelopeTo: function circleOutsideEnvelopeTo(target,\n                                                            intervenings,\n                                                            origin) {\n          let directions = circleService.envelopeDirectionsTo(target, origin);\n          let envelope = {\n            left: findLeftEnvelopeLine(directions, target, intervenings, origin),\n            right: findRightEnvelopeLine(directions, target, intervenings, origin)\n          };\n          envelope.left.vector = lineService.vector(envelope.left);\n          envelope.right.vector = lineService.vector(envelope.right);\n\n          let outside_envelope = {\n            left: {\n              start: { x: envelope.left.end.x, y: envelope.left.end.y }\n            },\n            right: {\n              start: { x: envelope.right.end.x, y: envelope.right.end.y }\n            }\n          };\n          let translate_left = 800;\n          let translate_right = 800;\n          let vector_product = pointService\n                .vectorProduct(envelope.left.vector, envelope.right.vector);\n          if(vector_product > 0.001) {\n            let envelope_end = {\n              start: envelope.left.end,\n              end: envelope.right.end\n            };\n            envelope_end.length = lineService.length(envelope_end);\n            envelope_end.vector = lineService.vector(envelope_end);\n            \n            let alpha = Math.acos(pointService.scalarProduct(envelope_end.vector,\n                                                             envelope.left.vector));\n            let beta = Math.acos(-pointService.scalarProduct(envelope_end.vector,\n                                                             envelope.right.vector));\n            translate_left = envelope_end.length * Math.sin(alpha) / Math.sin(alpha+beta);\n            translate_right = envelope_end.length * Math.sin(beta) / Math.sin(alpha+beta);\n          }\n          translate_left = Math.min(800, translate_left);\n          translate_right = Math.min(800, translate_right);\n          outside_envelope.left.end = pointService\n            .translateInVector(translate_left, envelope.left.vector,\n                               outside_envelope.left.start);\n          outside_envelope.right.end = pointService\n            .translateInVector(translate_right, envelope.right.vector,\n                               outside_envelope.right.start);\n          return outside_envelope;\n        }\n      };\n      function findLeftEnvelopeLine(directions, target, intervenings, origin) {\n        let rad_inc = (directions.right - directions.left) / 180;\n        let ray = {\n          start: null,\n          end: null\n        };\n        for(let ray_rad = directions.left ;\n            ray_rad < directions.right ;\n            ray_rad += rad_inc) {\n          ray.start = circleService.pointOnEdgeInDirection(ray_rad, origin);\n          ray.end = circleService.pointOnEdgeTangentTo(ray.start, true, target);\n          ray.length = lineService.length(ray);\n          ray.vector = lineService.vector(ray);\n          \n          let intervening = R.find((circle) => {\n            return circleService.intersectLine(ray, circle);\n          }, intervenings);\n          \n          if(R.isNil(intervening)) return ray;\n        }\n        return ray;\n      }\n      function findRightEnvelopeLine(directions, target, intervenings, origin) {\n        let rad_inc = (directions.right - directions.left) / 180;\n        let ray = {\n          start: null,\n          end: null\n        };\n        for(let ray_rad = directions.right ;\n            ray_rad > directions.left ;\n            ray_rad -= rad_inc) {\n          ray.start = circleService.pointOnEdgeInDirection(ray_rad, origin);\n          ray.end = circleService.pointOnEdgeTangentTo(ray.start, false, target);\n          ray.length = lineService.length(ray);\n          ray.vector = lineService.vector(ray);\n          \n          let intervening = R.find((circle) => {\n            return circleService.intersectLine(ray, circle);\n          }, intervenings);\n          \n          if(R.isNil(intervening)) return ray;\n        }\n        return ray;\n      }\n      R.curryService(circleService);\n      return circleService;\n    }\n  ]);\n"]}